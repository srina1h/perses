error[E0658]: the `#[rustc_layout_scalar_valid_range_start]` attribute is just used to enable niche optimizations in libcore and will never be stable

 --> mutant.rs:1:42

  |

1 | # ! [ allow ( non_upper_case_globals ) ] # [ rustc_layout_scalar_valid_range_start ( 1 ) ]

  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  |

  = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable



thread 'rustc' panicked at 'nonscalar layout for layout_scalar_valid_range type S: Layout {

    fields: Arbitrary {

        offsets: [

            Size {

                raw: 8,

            },

            Size {

                raw: 0,

            },

        ],

        memory_index: [

            1,

            0,

        ],

    },

    variants: Single {

        index: 0,

    },

    abi: Aggregate {

        sized: true,

    },

    largest_niche: None,

    align: AbiAndPrefAlign {

        abi: Align {

            pow2: 2,

        },

        pref: Align {

            pow2: 3,

        },

    },

    size: Size {

        raw: 12,

    },

}', compiler/rustc_middle/src/ty/layout.rs:952:30

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace



error: internal compiler error: unexpected panic



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.53.0-nightly (5e65467ef 2021-03-26) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib



query stack during panic:

#0 [layout_raw] computing layout of `S<A>`

#1 [check_mod_item_types] checking item types in top-level module

end of query stack

error: aborting due to previous error



For more information about this error, try `rustc --explain E0658`.

