error[E0433]: failed to resolve: there are too many leading `super` keywords

 --> mutant.rs:1:5

  |

1 | use super :: * ;

  |     ^^^^^ there are too many leading `super` keywords



error[E0433]: failed to resolve: unresolved import

 --> mutant.rs:2:14

  |

2 | use crate :: cmp :: Ordering :: { self , Equal , Greater , Less } ;

  |              ^^^

  |              |

  |              unresolved import

  |              help: a similar path exists: `std::cmp`



error[E0432]: unresolved imports `crate::cmp`, `crate::cmp::Ordering::Equal`, `crate::cmp::Ordering::Greater`, `crate::cmp::Ordering::Less`

 --> mutant.rs:2:14

  |

2 | use crate :: cmp :: Ordering :: { self , Equal , Greater , Less } ;

  |              ^^^                         ^^^^^   ^^^^^^^   ^^^^

  |              |

  |              unresolved import

  |              help: a similar path exists: `std::cmp`



error[E0432]: unresolved import `crate::intrinsics`

 --> mutant.rs:3:5

  |

3 | use crate :: intrinsics ;

  |     ^^^^^^^^^^^^^^^^^^^ no `intrinsics` in the root



error[E0432]: unresolved import `crate::mem`

 --> mutant.rs:4:5

  |

4 | use crate :: mem ;

  |     ^^^^^^^^^^^^ no `mem` in the root



error[E0432]: unresolved imports `crate::slice`, `crate::slice::SliceIndex`

 --> mutant.rs:5:25

  |

5 | use crate :: slice :: { self , SliceIndex } ;

  |                         ^^^^   ^^^^^^^^^^

  |                         |

  |                         no `slice` in the root



error[E0425]: cannot find function `null` in this scope

  --> mutant.rs:11:42

   |

11 | ( self as * const u8 ) . guaranteed_eq ( null ( ) )

   |                                          ^^^^ not found in this scope

   |

help: consider importing this function

   |

1  | use std::ptr::null;

   |



error[E0412]: cannot find type `MaybeUninit` in this scope

  --> mutant.rs:26:62

   |

26 | pub unsafe fn as_uninit_ref < 'a > ( self ) -> Option < & 'a MaybeUninit < T > >

   |                                                              ^^^^^^^^^^^ not found in this scope

   |

help: consider importing this union

   |

1  | use std::mem::MaybeUninit;

   |



error[E0412]: cannot find type `MaybeUninit` in this scope

  --> mutant.rs:30:77

   |

30 | if self . is_null ( ) { None } else { Some ( unsafe { & * ( self as * const MaybeUninit < T > ) } ) }

   |                                                                             ^^^^^^^^^^^ not found in this scope

   |

help: consider importing this union

   |

1  | use std::mem::MaybeUninit;

   |



error[E0425]: cannot find function `read` in this scope

   --> mutant.rs:135:10

    |

135 | unsafe { read ( self ) }

    |          ^^^^

    |

help: try calling `read` as a method

    |

135 | unsafe { self.read() }

    |          ^^^^^^^^^^^

help: consider importing one of these items

    |

1   | use std::fs::read;

    |

1   | use std::ptr::read;

    |



error[E0425]: cannot find function `read_volatile` in this scope

   --> mutant.rs:143:10

    |

143 | unsafe { read_volatile ( self ) }

    |          ^^^^^^^^^^^^^

    |

help: try calling `read_volatile` as a method

    |

143 | unsafe { self.read_volatile() }

    |          ^^^^^^^^^^^^^^^^^^^^

help: consider importing this function

    |

1   | use std::ptr::read_volatile;

    |



error[E0425]: cannot find function `read_unaligned` in this scope

   --> mutant.rs:151:10

    |

151 | unsafe { read_unaligned ( self ) }

    |          ^^^^^^^^^^^^^^

    |

help: try calling `read_unaligned` as a method

    |

151 | unsafe { self.read_unaligned() }

    |          ^^^^^^^^^^^^^^^^^^^^^

help: consider importing this function

    |

1   | use std::ptr::read_unaligned;

    |



error[E0425]: cannot find function `copy` in this scope

   --> mutant.rs:159:10

    |

159 | unsafe { copy ( self , dest , count ) }

    |          ^^^^

    |

help: try calling `copy` as a method

    |

159 | unsafe { self.copy(dest , count) }

    |          ^^^^^^^^^^^^^^^^^^^^^^^

help: consider importing one of these items

    |

1   | use std::fs::copy;

    |

1   | use std::io::copy;

    |

1   | use std::ptr::copy;

    |



error[E0425]: cannot find function `copy_nonoverlapping` in this scope

   --> mutant.rs:167:10

    |

167 | unsafe { copy_nonoverlapping ( self , dest , count ) }

    |          ^^^^^^^^^^^^^^^^^^^

    |

help: try calling `copy_nonoverlapping` as a method

    |

167 | unsafe { self.copy_nonoverlapping(dest , count) }

    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

help: consider importing this function

    |

1   | use std::ptr::copy_nonoverlapping;

    |



error[E0425]: cannot find function `align_offset` in this scope

   --> mutant.rs:177:10

    |

177 | unsafe { align_offset ( self , align ) }

    |          ^^^^^^^^^^^^-----------------

    |          |

    |          help: try calling `align_offset` as a method: `self.align_offset(align)`



error[E0422]: cannot find struct, variant or union type `Repr` in this scope

   --> mutant.rs:186:10

    |

186 | unsafe { Repr { rust : self } . raw } . len

    |          ^^^^ not found in this scope



error[E0405]: cannot find trait `SliceIndex` in this scope

   --> mutant.rs:198:5

    |

198 | I : SliceIndex < [ T ] > ,

    |     ^^^^^^^^^^ not found in this scope

    |

help: consider importing this trait

    |

1   | use std::slice::SliceIndex;

    |



error[E0412]: cannot find type `MaybeUninit` in this scope

   --> mutant.rs:204:66

    |

204 | pub unsafe fn as_uninit_slice < 'a > ( self ) -> Option < & 'a [ MaybeUninit < T > ] > {

    |                                                                  ^^^^^^^^^^^ not found in this scope

    |

help: consider importing this union

    |

1   | use std::mem::MaybeUninit;

    |



error[E0412]: cannot find type `MaybeUninit` in this scope

   --> mutant.rs:208:59

    |

208 | Some ( unsafe { slice :: from_raw_parts ( self as * const MaybeUninit < T > , self . len ( ) ) } )

    |                                                           ^^^^^^^^^^^ not found in this scope

    |

help: consider importing this union

    |

1   | use std::mem::MaybeUninit;

    |



error[E0425]: cannot find value `Less` in this scope

   --> mutant.rs:226:1

    |

226 | Less

    | ^^^^ not found in this scope

    |

help: consider importing this unit variant

    |

1   | use std::cmp::Ordering::Less;

    |



error[E0425]: cannot find value `Equal` in this scope

   --> mutant.rs:228:1

    |

228 | Equal

    | ^^^^^ not found in this scope

    |

help: consider importing this unit variant

    |

1   | use std::cmp::Ordering::Equal;

    |



error[E0425]: cannot find value `Greater` in this scope

   --> mutant.rs:230:1

    |

230 | Greater

    | ^^^^^^^ not found in this scope

    |

help: consider importing this unit variant

    |

1   | use std::cmp::Ordering::Greater;

    |



error[E0658]: this is an internal attribute that will never be stable

 --> mutant.rs:7:34

  |

7 | impl < T : ? Sized > * const T { # [ rustc_args_required_const ( 1 ) ]

  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  |

  = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable



error[E0658]: language items are subject to change

 --> mutant.rs:6:1

  |

6 | # [ lang = "const_ptr" ]

  | ^^^^^^^^^^^^^^^^^^^^^^^^

  |

  = help: add `#![feature(lang_items)]` to the crate attributes to enable



error[E0658]: language items are subject to change

   --> mutant.rs:180:1

    |

180 | # [ lang = "const_slice_ptr" ]

    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    |

    = help: add `#![feature(lang_items)]` to the crate attributes to enable



error: internal compiler error: compiler/rustc_passes/src/check_attr.rs:873:21: should be a function item



thread 'rustc' panicked at 'Box<Any>', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/library/std/src/panic.rs:59:5

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib



query stack during panic:

#0 [check_mod_attrs] checking attributes in top-level module

#1 [analysis] running analysis passes on this crate

end of query stack

error: aborting due to 26 previous errors



Some errors have detailed explanations: E0405, E0412, E0422, E0425, E0432, E0433, E0658.

For more information about an error, try `rustc --explain E0405`.

