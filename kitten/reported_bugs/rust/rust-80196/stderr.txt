error[E0658]: const generics are unstable

 --> mutant.rs:7:24

  |

7 | fn const_param < const N : usize > ( ) -> [ u8 ; N + 1 ] {

  |                        ^

  |

  = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information

  = help: add `#![feature(min_const_generics)]` to the crate attributes to enable



error[E0277]: the size for values of type `T` cannot be known at compilation time

   --> mutant.rs:4:60

    |

4   | fn ty_param < T > ( ) -> [ u8 ; std :: mem :: size_of :: < T > ( ) ] {

    |               - this type parameter needs to be `Sized`    ^ doesn't have a size known at compile-time



error: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:568:17: const parameter `N/#0` (Const { ty: usize, val: Param(N/#0) }/0) out of range when substituting substs=[]



thread 'rustc' panicked at 'Box<Any>', /rustc/f74583445702e2e27ec4415376f2c540a83d7ded/compiler/rustc_errors/src/lib.rs:904:9

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.50.0-nightly (f74583445 2020-12-18) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=1 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=1 --crate-type staticlib



query stack during panic:

#0 [eval_to_allocation_raw] const-evaluating + checking `const_param::{constant#0}`

#1 [eval_to_const_value_raw] simplifying constant for the type system `const_param::{constant#0}`

end of query stack

error: aborting due to 3 previous errors



Some errors have detailed explanations: E0277, E0658.

For more information about an error, try `rustc --explain E0277`.

