error: character literal may only contain one codepoint

 --> mutant.rs:1:75

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' 'async' '&raw' ] & '?ဪൈ self , ... , ... , ... , ......

  |                                                                          ^^^^^^^^^

  |

help: if you meant to write a `str` literal, use double quotes

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' "default" 'async' '&raw' ] & '?ဪൈ self , ... , ... , ... , ... , ... , ... , ... , ... , ... , ) -> && '_ mut ( ) ;

  |                                                                          ^^^^^^^^^



error: character literal may only contain one codepoint

 --> mutant.rs:1:85

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' 'async' '&raw' ] & '?ဪൈ self , ... , ... , ... , ......

  |                                                                                    ^^^^^^^

  |

help: if you meant to write a `str` literal, use double quotes

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' "async" '&raw' ] & '?ဪൈ self , ... , ... , ... , ... , ... , ... , ... , ... , ... , ) -> && '_ mut ( ) ;

  |                                                                                    ^^^^^^^



error: character literal may only contain one codepoint

 --> mutant.rs:1:93

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' 'async' '&raw' ] & '?ဪൈ self , ... , ... , ... , ......

  |                                                                                            ^^^^^^

  |

help: if you meant to write a `str` literal, use double quotes

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' 'async' "&raw" ] & '?ဪൈ self , ... , ... , ... , ... , ... , ... , ... , ... , ... , ) -> && '_ mut ( ) ;

  |                                                                                            ^^^^^^



error: character literal may only contain one codepoint

 --> mutant.rs:1:104

  |

1 | ... 'default' 'async' '&raw' ] & '?ဪൈ self , ... , ... , ... , ... , ... , ... , ... , ... , ... , ) -> && '_ mut ( ) ;

  |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  |

help: if you meant to write a `str` literal, use double quotes

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' 'async' '&raw' ] & "?ဪൈ self , ... , ... , ... , ... , ... , ... , ... , ... , ... , ) -> && "_ mut ( ) ;

  |                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



warning: underscore literal suffix is not allowed

 --> mutant.rs:1:180

  |

1 | ...f , ... , ... , ... , ... , ... , ... , ... , ... , ... , ) -> && '_ mut ( ) ;

  |                                                                      ^

  |

  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

  = note: see issue #42326 <https://github.com/rust-lang/rust/issues/42326> for more information



error[E0670]: `async fn` is not permitted in Rust 2015

 --> mutant.rs:1:20

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' 'async' '&raw' ] & '?ဪൈ self , ... , ... , ... , ......

  |                    ^^^^^ to use `async fn`, switch to Rust 2018 or later

  |

  = help: set `edition = "2018"` in `Cargo.toml`

  = note: for more on editions, read https://doc.rust-lang.org/edition-guide



error: expected identifier, found `']'`

 --> mutant.rs:1:67

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' 'async' '&raw' ] & '?ဪൈ self , ... , ... , ... , ......

  |                                                                  ^^^ expected identifier



error: expected one of `)`, `,`, `->`, `;`, `where`, or `{`, found `]`

 --> mutant.rs:1:100

  |

1 | trait Tr : Sized { async extern r###"􏿿áÖ@"### fn union < > ( # [ ']' '[' 'default' 'async' '&raw' ] & '?ဪൈ self , ... , ... , ... , ......

  |                                                            -                                     -^

  |                                                            |                                     |

  |                                                            unclosed delimiter                    help: `)` may belong here



thread 'rustc' panicked at 'internal error: entered unreachable code', compiler/rustc_parse/src/parser/item.rs:1723:17

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace



error: internal compiler error: unexpected panic



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.54.0-nightly (dbe459ded 2021-06-02) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib



query stack during panic:

end of query stack

error: aborting due to 7 previous errors; 1 warning emitted



For more information about this error, try `rustc --explain E0670`.

