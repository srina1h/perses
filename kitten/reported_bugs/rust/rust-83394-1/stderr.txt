warning: struct is never constructed: `RestrictedRange`

 --> mutant.rs:4:8

  |

4 | struct RestrictedRange ( u32 ) ;

  |        ^^^^^^^^^^^^^^^

  |

  = note: `#[warn(dead_code)]` on by default



warning: constant is never used: `OKAY_RANGE`

 --> mutant.rs:5:1

  |

5 | const OKAY_RANGE : RestrictedRange = unsafe { RestrictedRange ( 20 ) } ;

  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



warning: function is never used: `main`

 --> mutant.rs:6:4

  |

6 | fn main ( ) {

  |    ^^^^



thread 'rustc' panicked at 'nonscalar layout for layout_scalar_valid_range type RestrictedRange: Layout {

    fields: Arbitrary {

        offsets: [

            Size {

                raw: 0,

            },

        ],

        memory_index: [

            0,

        ],

    },

    variants: Single {

        index: 0,

    },

    abi: Aggregate {

        sized: true,

    },

    largest_niche: None,

    align: AbiAndPrefAlign {

        abi: Align {

            pow2: 2,

        },

        pref: Align {

            pow2: 3,

        },

    },

    size: Size {

        raw: 4,

    },

}', compiler/rustc_middle/src/ty/layout.rs:952:30

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace



error: internal compiler error: unexpected panic



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.53.0-nightly (5e65467ef 2021-03-26) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib



query stack during panic:

#0 [layout_raw] computing layout of `RestrictedRange`

#1 [eval_to_allocation_raw] const-evaluating + checking `OKAY_RANGE`

end of query stack

warning: 3 warnings emitted



