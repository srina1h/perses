error: constant expression depends on a generic parameter

  --> mutant.rs:11:13

   |

11 | where ( ) : If < { N == 0 } > {

   |             ^^^^^^^^^^^^^^^^^

   |

   = note: this may fail depending on what value the parameter takes



thread 'rustc' panicked at 'assertion failed: `(left == right)`

  left: `u8`,

 right: `bool`: cannot relate constants of different types', /rustc/36f1f04f18b89ba4a999bcfd6584663fd6fc1c5d/compiler/rustc_middle/src/ty/relate.rs:502:5

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace



error: internal compiler error: unexpected panic



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.52.0-nightly (36f1f04f1 2021-03-17) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib



query stack during panic:

#0 [check_item_well_formed] checking that `<impl at mutant.rs:15:1: 16:45>` is well-formed

#1 [analysis] running analysis passes on this crate

end of query stack

thread 'rustc' panicked at 'assertion failed: `(left == right)`

  left: `u8`,

 right: `bool`: cannot relate constants of different types', /rustc/36f1f04f18b89ba4a999bcfd6584663fd6fc1c5d/compiler/rustc_middle/src/ty/relate.rs:502:5



error: internal compiler error: unexpected panic



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.52.0-nightly (36f1f04f1 2021-03-17) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib



query stack during panic:

#0 [check_item_well_formed] checking that `<impl at mutant.rs:17:1: 18:46>` is well-formed

#1 [analysis] running analysis passes on this crate

end of query stack

error: aborting due to previous error



