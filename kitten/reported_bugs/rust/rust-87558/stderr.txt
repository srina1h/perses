error[E0407]: method `from` is not a member of trait `Fn`

 --> mutant.rs:4:1

  |

4 | / fn from ( _ : nope :: Thing ) -> Self {

5 | | unimplemented ! ( )

6 | | }

  | |_^ not a member of trait `Fn`



error[E0433]: failed to resolve: use of undeclared crate or module `nope`

 --> mutant.rs:4:15

  |

4 | fn from ( _ : nope :: Thing ) -> Self {

  |               ^^^^ use of undeclared crate or module `nope`



error[E0229]: associated type bindings are not allowed here

 --> mutant.rs:3:6

  |

3 | impl Fn ( & isize ) for Error {

  |      ^^^^^^^^^^^^^^ associated type not allowed here



thread 'rustc' panicked at 'Normalizing ImplHeader { impl_def_id: DefId(0:8 ~ mutant[d0c6]::{impl#0}), self_ty: Error, trait_ref: Some(<Error as std::ops::Fn<(&isize,)>>), predicates: [] } without wrapping in a `Binder`', compiler/rustc_trait_selection/src/traits/project.rs:332:9

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace



error: internal compiler error: unexpected panic



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.56.0-nightly (08095fc1f 2021-07-26) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib



query stack during panic:

#0 [specialization_graph_of] building specialization graph of trait `std::ops::Fn`

#1 [coherent_trait] coherence checking all impls of trait `std::ops::Fn`

end of query stack

error: aborting due to 3 previous errors



Some errors have detailed explanations: E0229, E0407, E0433.

For more information about an error, try `rustc --explain E0229`.

