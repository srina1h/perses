warning: function is never used: `main`

  --> mutant.rs:95:4

   |

95 | fn main ( ) {

   |    ^^^^

   |

   = note: `#[warn(dead_code)]` on by default



error: `extern` block uses type `Foo`, which is not FFI-safe

  --> mutant.rs:41:27

   |

41 | pub fn ptr_type1 ( size : * const Foo ) ;

   |                           ^^^^^^^^^^^ not FFI-safe

   |

note: the lint level is defined here

  --> mutant.rs:3:14

   |

3  | # ! [ deny ( improper_ctypes ) ]

   |              ^^^^^^^^^^^^^^^

   = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct

   = note: this struct has unspecified layout

note: the type is defined here

  --> mutant.rs:21:1

   |

21 | pub struct Foo ;

   | ^^^^^^^^^^^^^^^^



error: `extern` block uses type `Foo`, which is not FFI-safe

  --> mutant.rs:42:27

   |

42 | pub fn ptr_type2 ( size : * const Foo ) ;

   |                           ^^^^^^^^^^^ not FFI-safe

   |

   = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct

   = note: this struct has unspecified layout

note: the type is defined here

  --> mutant.rs:21:1

   |

21 | pub struct Foo ;

   | ^^^^^^^^^^^^^^^^



error: `extern` block uses type `[u32]`, which is not FFI-safe

  --> mutant.rs:43:25

   |

43 | pub fn slice_type ( p : & [ u32 ] ) ;

   |                         ^^^^^^^^^ not FFI-safe

   |

   = help: consider using a raw pointer instead

   = note: slices have no C equivalent



error: `extern` block uses type `str`, which is not FFI-safe

  --> mutant.rs:44:23

   |

44 | pub fn str_type ( p : & str ) ;

   |                       ^^^^^ not FFI-safe

   |

   = help: consider using `*const u8` and a length instead

   = note: string slices have no C equivalent



error: `extern` block uses type `Box<u32>`, which is not FFI-safe

  --> mutant.rs:45:23

   |

45 | pub fn box_type ( p : Box < u32 > ) ;

   |                       ^^^^^^^^^^^ not FFI-safe

   |

   = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct

   = note: this struct has unspecified layout



error: `extern` block uses type `Option<Box<u32>>`, which is not FFI-safe

  --> mutant.rs:46:27

   |

46 | pub fn opt_box_type ( p : Option < Box < u32 > > ) ;

   |                           ^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe

   |

   = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum

   = note: enum has no representation hint



error: `extern` block uses type `char`, which is not FFI-safe

  --> mutant.rs:47:24

   |

47 | pub fn char_type ( p : char ) ;

   |                        ^^^^ not FFI-safe

   |

   = help: consider using `u32` or `libc::wchar_t` instead

   = note: the `char` type has no C equivalent



error: `extern` block uses type `i128`, which is not FFI-safe

  --> mutant.rs:48:24

   |

48 | pub fn i128_type ( p : i128 ) ;

   |                        ^^^^ not FFI-safe

   |

   = note: 128-bit integers don't currently have a known stable ABI



error: `extern` block uses type `u128`, which is not FFI-safe

  --> mutant.rs:49:24

   |

49 | pub fn u128_type ( p : u128 ) ;

   |                        ^^^^ not FFI-safe

   |

   = note: 128-bit integers don't currently have a known stable ABI



error: `extern` block uses type `dyn Bar`, which is not FFI-safe

  --> mutant.rs:50:25

   |

50 | pub fn trait_type ( p : & dyn Bar ) ;

   |                         ^^^^^^^^^ not FFI-safe

   |

   = note: trait objects have no C equivalent



error: `extern` block uses type `(i32, i32)`, which is not FFI-safe

  --> mutant.rs:51:25

   |

51 | pub fn tuple_type ( p : ( i32 , i32 ) ) ;

   |                         ^^^^^^^^^^^^^ not FFI-safe

   |

   = help: consider using a struct instead

   = note: tuples have unspecified layout



error: `extern` block uses type `(i32, i32)`, which is not FFI-safe

  --> mutant.rs:52:26

   |

52 | pub fn tuple_type2 ( p : I32Pair ) ;

   |                          ^^^^^^^ not FFI-safe

   |

   = help: consider using a struct instead

   = note: tuples have unspecified layout



error: `extern` block uses type `ZeroSize`, which is not FFI-safe

  --> mutant.rs:53:24

   |

53 | pub fn zero_size ( p : ZeroSize ) ;

   |                        ^^^^^^^^ not FFI-safe

   |

   = help: consider adding a member to this struct

   = note: this struct has no fields

note: the type is defined here

  --> mutant.rs:17:1

   |

17 | pub struct ZeroSize ;

   | ^^^^^^^^^^^^^^^^^^^^^



error: `extern` block uses type `ZeroSizeWithPhantomData`, which is not FFI-safe

  --> mutant.rs:54:32

   |

54 | pub fn zero_size_phantom ( p : ZeroSizeWithPhantomData ) ;

   |                                ^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe

   |

   = note: composed only of `PhantomData`

note: the type is defined here

  --> mutant.rs:39:1

   |

39 | pub struct ZeroSizeWithPhantomData ( :: std :: marker :: PhantomData < i32 > ) ;

   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



error: `extern` block uses type `PhantomData<bool>`, which is not FFI-safe

  --> mutant.rs:56:4

   |

56 | -> :: std :: marker :: PhantomData < bool > ;

   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe

   |

   = note: composed only of `PhantomData`



error: `extern` block uses type `fn()`, which is not FFI-safe

  --> mutant.rs:57:22

   |

57 | pub fn fn_type ( p : RustFn ) ;

   |                      ^^^^^^ not FFI-safe

   |

   = help: consider using an `extern fn(...) -> ...` function pointer instead

   = note: this function pointer has Rust-specific calling convention



error: `extern` block uses type `fn()`, which is not FFI-safe

  --> mutant.rs:58:23

   |

58 | pub fn fn_type2 ( p : fn ( ) ) ;

   |                       ^^^^^^ not FFI-safe

   |

   = help: consider using an `extern fn(...) -> ...` function pointer instead

   = note: this function pointer has Rust-specific calling convention



error: `extern` block uses type `Box<u32>`, which is not FFI-safe

  --> mutant.rs:59:27

   |

59 | pub fn fn_contained ( p : RustBadRet ) ;

   |                           ^^^^^^^^^^ not FFI-safe

   |

   = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct

   = note: this struct has unspecified layout



error: `extern` block uses type `i128`, which is not FFI-safe

  --> mutant.rs:60:31

   |

60 | pub fn transparent_i128 ( p : TransparentI128 ) ;

   |                               ^^^^^^^^^^^^^^^ not FFI-safe

   |

   = note: 128-bit integers don't currently have a known stable ABI



error: `extern` block uses type `str`, which is not FFI-safe

  --> mutant.rs:61:30

   |

61 | pub fn transparent_str ( p : TransparentStr ) ;

   |                              ^^^^^^^^^^^^^^ not FFI-safe

   |

   = help: consider using `*const u8` and a length instead

   = note: string slices have no C equivalent



error: `extern` block uses type `Box<u32>`, which is not FFI-safe

  --> mutant.rs:62:29

   |

62 | pub fn transparent_fn ( p : TransparentBadFn ) ;

   |                             ^^^^^^^^^^^^^^^^ not FFI-safe

   |

   = help: consider adding a `#[repr(C)]` or `#[repr(transparent)]` attribute to this struct

   = note: this struct has unspecified layout



error: `extern` block uses type `[u8; 8]`, which is not FFI-safe

  --> mutant.rs:63:26

   |

63 | pub fn raw_array ( arr : [ u8 ; 8 ] ) ;

   |                          ^^^^^^^^^^ not FFI-safe

   |

   = help: consider passing a pointer to the array

   = note: passing raw arrays by value is not FFI-safe



error: `extern` block uses type `u128`, which is not FFI-safe

  --> mutant.rs:64:31

   |

64 | pub static static_u128_type : u128 ;

   |                               ^^^^ not FFI-safe

   |

   = note: 128-bit integers don't currently have a known stable ABI



error: `extern` block uses type `u128`, which is not FFI-safe

  --> mutant.rs:65:37

   |

65 | pub static static_u128_array_type : [ u128 ; 16 ] ;

   |                                     ^^^^^^^^^^^^^ not FFI-safe

   |

   = note: 128-bit integers don't currently have a known stable ABI



error: internal compiler error: compiler/rustc_lint/src/types.rs:859:17: malformed transparent type



thread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1034:9

note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace



note: the compiler unexpectedly panicked. this is a bug.



note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md



note: rustc 1.56.0-nightly (9c25eb7aa 2021-07-25) running on x86_64-unknown-linux-gnu



note: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib



query stack during panic:

#0 [lint_mod] linting top-level module

#1 [analysis] running analysis passes on this crate

end of query stack

error: aborting due to 25 previous errors; 1 warning emitted



