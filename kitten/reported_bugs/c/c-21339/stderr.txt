mutant.c:6:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "" : "=rm" ( a ) : "0" ( 1 ) ) ;

^

mutant.c:1:22: warning: padding struct 'struct S' with 4 bytes to align 'b' [-Wpadded]

struct S { int c , * b , * e ; } ;

                     ^

mutant.c:2:6: warning: no previous prototype for function 'e' [-Wmissing-prototypes]

void e

     ^

mutant.c:2:1: note: declare 'static' if the function is not intended to be used outside of this translation unit

void e

^

static 

mutant.c:3:1: warning: this old-style function definition is not preceded by a prototype [-Wstrict-prototypes]

( )

^

clang-trunk: /tmp/tmp.FIfHBNID2p-clang-builder/llvm-project/clang/lib/CodeGen/CGStmt.cpp:2449: void clang::CodeGen::CodeGenFunction::EmitAsmStmt(const clang::AsmStmt&): Assertion `OutputTy->isFloatingPointTy() && "Unexpected output type"' failed.

PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.

Stack dump:

0.	Program arguments: clang-trunk -O3 -g3 -c -Wall -Wextra -Weverything mutant.c

1.	<eof> parser at end of file

2.	mutant.c:2:6: LLVM IR generation of declaration 'e'

3.	mutant.c:2:6: Generating code for declaration 'e'

Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):

clang-trunk(+0x394ec64)[0x561b1cc66c64]

clang-trunk(_ZN4llvm3sys15CleanupOnSignalEm+0xe4)[0x561b1cc64a84]

clang-trunk(+0x38938c8)[0x561b1cbab8c8]

/lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0)[0x7f947e9b93c0]

/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb)[0x7f947e45818b]

/lib/x86_64-linux-gnu/libc.so.6(abort+0x12b)[0x7f947e437859]

/lib/x86_64-linux-gnu/libc.so.6(+0x25729)[0x7f947e437729]

/lib/x86_64-linux-gnu/libc.so.6(+0x36f36)[0x7f947e448f36]

clang-trunk(_ZN5clang7CodeGen15CodeGenFunction11EmitAsmStmtERKNS_7AsmStmtE+0x384e)[0x561b1cff23fe]

clang-trunk(_ZN5clang7CodeGen15CodeGenFunction8EmitStmtEPKNS_4StmtEN4llvm8ArrayRefIPKNS_4AttrEEE+0x23b)[0x561b1cff5c2b]

clang-trunk(_ZN5clang7CodeGen15CodeGenFunction28EmitCompoundStmtWithoutScopeERKNS_12CompoundStmtEbNS0_12AggValueSlotE+0x8c)[0x561b1cffbe5c]

clang-trunk(_ZN5clang7CodeGen15CodeGenFunction16EmitFunctionBodyEPKNS_4StmtE+0xd1)[0x561b1d0532a1]

clang-trunk(_ZN5clang7CodeGen15CodeGenFunction12GenerateCodeENS_10GlobalDeclEPN4llvm8FunctionERKNS0_14CGFunctionInfoE+0x37c)[0x561b1d064afc]

clang-trunk(_ZN5clang7CodeGen13CodeGenModule28EmitGlobalFunctionDefinitionENS_10GlobalDeclEPN4llvm11GlobalValueE+0x1c6)[0x561b1d0be406]

clang-trunk(_ZN5clang7CodeGen13CodeGenModule20EmitGlobalDefinitionENS_10GlobalDeclEPN4llvm11GlobalValueE+0x285)[0x561b1d0b9fa5]

clang-trunk(_ZN5clang7CodeGen13CodeGenModule10EmitGlobalENS_10GlobalDeclE+0x3eb)[0x561b1d0ba40b]

clang-trunk(+0x3daae72)[0x561b1d0c2e72]

clang-trunk(+0x4aad4f9)[0x561b1ddc54f9]

clang-trunk(+0x4a9f6e0)[0x561b1ddb76e0]

clang-trunk(_ZN5clang8ParseASTERNS_4SemaEbb+0x204)[0x561b1ee7afe4]

clang-trunk(_ZN5clang13CodeGenAction13ExecuteActionEv+0x178)[0x561b1ddc2678]

clang-trunk(_ZN5clang14FrontendAction7ExecuteEv+0xd9)[0x561b1d672029]

clang-trunk(_ZN5clang16CompilerInstance13ExecuteActionERNS_14FrontendActionE+0x146)[0x561b1d6051e6]

clang-trunk(_ZN5clang25ExecuteCompilerInvocationEPNS_16CompilerInstanceE+0x930)[0x561b1d74feb0]

clang-trunk(_Z8cc1_mainN4llvm8ArrayRefIPKcEES2_Pv+0x7f6)[0x561b1a5786f6]

clang-trunk(+0x125ca38)[0x561b1a574a38]

clang-trunk(+0x417ddb9)[0x561b1d495db9]

clang-trunk(_ZN4llvm20CrashRecoveryContext9RunSafelyENS_12function_refIFvvEEE+0xbc)[0x561b1cbaba4c]

clang-trunk(+0x417e55d)[0x561b1d49655d]

clang-trunk(_ZNK5clang6driver11Compilation14ExecuteCommandERKNS0_7CommandERPS3_+0x9b)[0x561b1d468ceb]

clang-trunk(_ZNK5clang6driver11Compilation11ExecuteJobsERKNS0_7JobListERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x119)[0x561b1d469809]

clang-trunk(_ZN5clang6driver6Driver18ExecuteCompilationERNS0_11CompilationERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x99)[0x561b1d4743b9]

clang-trunk(main+0x18af)[0x561b1a4a34ef]

/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7f947e4390b3]

clang-trunk(_start+0x2e)[0x561b1a5745ae]

clang-13: error: clang frontend command failed with exit code 134 (use -v to see invocation)

clang version 13.0.0 (https://github.com/llvm/llvm-project.git 5c8659801a4976ef2b327f4071d98086efd42a36)

Target: x86_64-unknown-linux-gnu

Thread model: posix

InstalledDir: /home/cnsun/usr/bin

clang-13: note: diagnostic msg: 

********************



PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:

Preprocessed source(s) and associated run script(s) are located at:

clang-13: note: diagnostic msg: /tmp/mutant-6af92d.c

clang-13: note: diagnostic msg: /tmp/mutant-6af92d.sh

clang-13: note: diagnostic msg: 



********************

