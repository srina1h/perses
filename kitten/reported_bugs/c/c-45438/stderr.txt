mutant.c:1:19: warning: this function declaration is not a prototype [-Wstrict-prototypes]

extern void abort ( ) ; __attribute__ ( ( pure ) ) int vec [ 2 ] = { { 0 } , { 0 } } ;

                  ^

                    void

mutant.c:1:70: warning: braces around scalar initializer [-Wbraced-scalar-init]

extern void abort ( ) ; __attribute__ ( ( pure ) ) int vec [ 2 ] = { { 0 } , { 0 } } ;

                                                                     ^~~~~~

mutant.c:1:78: warning: braces around scalar initializer [-Wbraced-scalar-init]

extern void abort ( ) ; __attribute__ ( ( pure ) ) int vec [ 2 ] = { { 0 } , { 0 } } ;

                                                                             ^~~~~~

mutant.c:1:56: warning: no previous extern declaration for non-static variable 'vec' [-Wmissing-variable-declarations]

extern void abort ( ) ; __attribute__ ( ( pure ) ) int vec [ 2 ] = { { 0 } , { 0 } } ;

                                                       ^

mutant.c:1:52: note: declare 'static' if the variable is not intended to be used outside of this translation unit

extern void abort ( ) ; __attribute__ ( ( pure ) ) int vec [ 2 ] = { { 0 } , { 0 } } ;

                                                   ^

mutant.c:6:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "s_mov_b32 vcc_lo, 0x12345689\n\t"

^

mutant.c:9:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "; no-op" : "=cV" ( vcc ) : "v" ( vec [ 0 ] ) , "v" ( vec [ 1 ] ) ) ;

^

clang-trunk: /tmp/tmp.FIfHBNID2p-clang-builder/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:8575: void llvm::SelectionDAGBuilder::visitInlineAsm(const llvm::CallBase&, const llvm::BasicBlock*): Assertion `ConstraintID != InlineAsm::Constraint_Unknown && "Failed to convert memory constraint code to constraint id."' failed.

PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.

Stack dump:

0.	Program arguments: clang-trunk -O3 -g3 -c -Wall -Wextra -Weverything mutant.c

1.	<eof> parser at end of file

2.	Code generation

3.	Running pass 'Function Pass Manager' on module 'mutant.c'.

4.	Running pass 'X86 DAG->DAG Instruction Selection' on function '@main'

Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):

clang-trunk(+0x394ec64)[0x55ba40ae4c64]

clang-trunk(_ZN4llvm3sys15CleanupOnSignalEm+0xe4)[0x55ba40ae2a84]

clang-trunk(+0x38938c8)[0x55ba40a298c8]

/lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0)[0x7fa9fa70b3c0]

/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb)[0x7fa9fa1aa18b]

/lib/x86_64-linux-gnu/libc.so.6(abort+0x12b)[0x7fa9fa189859]

/lib/x86_64-linux-gnu/libc.so.6(+0x25729)[0x7fa9fa189729]

/lib/x86_64-linux-gnu/libc.so.6(+0x36f36)[0x7fa9fa19af36]

clang-trunk(_ZN4llvm19SelectionDAGBuilder14visitInlineAsmERKNS_8CallBaseEPKNS_10BasicBlockE+0x270b)[0x55ba41a807db]

clang-trunk(_ZN4llvm19SelectionDAGBuilder9visitCallERKNS_8CallInstE+0x44a)[0x55ba41a72daa]

clang-trunk(_ZN4llvm19SelectionDAGBuilder5visitERKNS_11InstructionE+0x3d)[0x55ba41aa071d]

clang-trunk(_ZN4llvm16SelectionDAGISel16SelectBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb1EEES6_Rb+0x90)[0x55ba41b0c440]

clang-trunk(_ZN4llvm16SelectionDAGISel20SelectAllBasicBlocksERKNS_8FunctionE+0xacb)[0x55ba41b0d0fb]

clang-trunk(+0x497932b)[0x55ba41b0f32b]

clang-trunk(+0x244ecec)[0x55ba3f5e4cec]

clang-trunk(_ZN4llvm19MachineFunctionPass13runOnFunctionERNS_8FunctionE+0x258)[0x55ba3fd06ce8]

clang-trunk(_ZN4llvm13FPPassManager13runOnFunctionERNS_8FunctionE+0x365)[0x55ba401ddb65]

clang-trunk(_ZN4llvm13FPPassManager11runOnModuleERNS_6ModuleE+0x39)[0x55ba401ddda9]

clang-trunk(_ZN4llvm6legacy15PassManagerImpl3runERNS_6ModuleE+0x382)[0x55ba401deea2]

clang-trunk(+0x3c80c42)[0x55ba40e16c42]

clang-trunk(_ZN5clang17EmitBackendOutputERNS_17DiagnosticsEngineERKNS_19HeaderSearchOptionsERKNS_14CodeGenOptionsERKNS_13TargetOptionsERKNS_11LangOptionsEN4llvm9StringRefEPNSE_6ModuleENS_13BackendActionESt10unique_ptrINSE_17raw_pwrite_streamESt14default_deleteISK_EE+0x47d)[0x55ba40e186fd]

clang-trunk(+0x4aabb2f)[0x55ba41c41b2f]

clang-trunk(_ZN5clang8ParseASTERNS_4SemaEbb+0x429)[0x55ba42cf9209]

clang-trunk(_ZN5clang13CodeGenAction13ExecuteActionEv+0x178)[0x55ba41c40678]

clang-trunk(_ZN5clang14FrontendAction7ExecuteEv+0xd9)[0x55ba414f0029]

clang-trunk(_ZN5clang16CompilerInstance13ExecuteActionERNS_14FrontendActionE+0x146)[0x55ba414831e6]

clang-trunk(_ZN5clang25ExecuteCompilerInvocationEPNS_16CompilerInstanceE+0x930)[0x55ba415cdeb0]

clang-trunk(_Z8cc1_mainN4llvm8ArrayRefIPKcEES2_Pv+0x7f6)[0x55ba3e3f66f6]

clang-trunk(+0x125ca38)[0x55ba3e3f2a38]

clang-trunk(+0x417ddb9)[0x55ba41313db9]

clang-trunk(_ZN4llvm20CrashRecoveryContext9RunSafelyENS_12function_refIFvvEEE+0xbc)[0x55ba40a29a4c]

clang-trunk(+0x417e55d)[0x55ba4131455d]

clang-trunk(_ZNK5clang6driver11Compilation14ExecuteCommandERKNS0_7CommandERPS3_+0x9b)[0x55ba412e6ceb]

clang-trunk(_ZNK5clang6driver11Compilation11ExecuteJobsERKNS0_7JobListERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x119)[0x55ba412e7809]

clang-trunk(_ZN5clang6driver6Driver18ExecuteCompilationERNS0_11CompilationERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x99)[0x55ba412f23b9]

clang-trunk(main+0x18af)[0x55ba3e3214ef]

/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7fa9fa18b0b3]

clang-trunk(_start+0x2e)[0x55ba3e3f25ae]

clang-13: error: clang frontend command failed with exit code 134 (use -v to see invocation)

clang version 13.0.0 (https://github.com/llvm/llvm-project.git 5c8659801a4976ef2b327f4071d98086efd42a36)

Target: x86_64-unknown-linux-gnu

Thread model: posix

InstalledDir: /home/cnsun/usr/bin

clang-13: note: diagnostic msg: 

********************



PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:

Preprocessed source(s) and associated run script(s) are located at:

clang-13: note: diagnostic msg: /tmp/mutant-71244f.c

clang-13: note: diagnostic msg: /tmp/mutant-71244f.sh

clang-13: note: diagnostic msg: 



********************

