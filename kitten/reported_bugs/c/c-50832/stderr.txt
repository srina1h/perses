mutant.c:4:36: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'const volatile void *' [-Wint-conversion]

return __atomic_is_lock_free ( 2 , a ) ;

                                   ^

clang-trunk: /tmp/tmp.FIfHBNID2p-clang-builder/llvm-project/clang/include/clang/AST/Type.h:7230: const T* clang::Type::castAs() const [with T = clang::PointerType]: Assertion `isa<T>(CanonicalType)' failed.

PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.

Stack dump:

0.	Program arguments: clang-trunk -O3 -g3 -c -Wall -Wextra -Weverything mutant.c

1.	mutant.c:4:40: current parser token ';'

2.	mutant.c:3:1: parsing function body 'foo'

3.	mutant.c:3:1: in compound statement ('{}')

Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):

clang-trunk(+0x394ec64)[0x558a592f8c64]

clang-trunk(_ZN4llvm3sys15CleanupOnSignalEm+0xe4)[0x558a592f6a84]

clang-trunk(+0x38938c8)[0x558a5923d8c8]

/lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0)[0x7f26165c83c0]

/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb)[0x7f261606818b]

/lib/x86_64-linux-gnu/libc.so.6(abort+0x12b)[0x7f2616047859]

/lib/x86_64-linux-gnu/libc.so.6(+0x25729)[0x7f2616047729]

/lib/x86_64-linux-gnu/libc.so.6(+0x36f36)[0x7f2616058f36]

clang-trunk(_ZNK5clang4Type6castAsINS_11PointerTypeEEEPKT_v+0x87)[0x558a596993d7]

clang-trunk(+0x6a65d14)[0x558a5c40fd14]

clang-trunk(+0x6a65ffa)[0x558a5c40fffa]

clang-trunk(+0x6a230d8)[0x558a5c3cd0d8]

clang-trunk(+0x6a1237e)[0x558a5c3bc37e]

clang-trunk(+0x6a1c319)[0x558a5c3c6319]

clang-trunk(_ZNK5clang4Expr16EvaluateAsRValueERNS0_10EvalResultERKNS_10ASTContextEb+0x1ff)[0x558a5c3c83df]

clang-trunk(+0x5cf5aba)[0x558a5b69faba]

clang-trunk(+0x5d23397)[0x558a5b6cd397]

clang-trunk(+0x5d2709f)[0x558a5b6d109f]

clang-trunk(_ZN5clang4Sema18CheckCompletedExprEPNS_4ExprENS_14SourceLocationEb+0xdf)[0x558a5b6e539f]

clang-trunk(_ZN5clang4Sema19ActOnFinishFullExprEPNS_4ExprENS_14SourceLocationEbb+0x122)[0x558a5ba88352]

clang-trunk(_ZN5clang4Sema15BuildReturnStmtENS_14SourceLocationEPNS_4ExprE+0x773)[0x558a5bd10993]

clang-trunk(_ZN5clang4Sema15ActOnReturnStmtENS_14SourceLocationEPNS_4ExprEPNS_5ScopeE+0x8a)[0x558a5bd1167a]

clang-trunk(_ZN5clang6Parser20ParseReturnStatementEv+0xbf)[0x558a5b5ca1ef]

clang-trunk(_ZN5clang6Parser42ParseStatementOrDeclarationAfterAttributesERN4llvm11SmallVectorIPNS_4StmtELj32EEENS0_17ParsedStmtContextEPNS_14SourceLocationERNS_25ParsedAttributesWithRangeE+0x5aa)[0x558a5b5cd68a]

clang-trunk(_ZN5clang6Parser27ParseStatementOrDeclarationERN4llvm11SmallVectorIPNS_4StmtELj32EEENS0_17ParsedStmtContextEPNS_14SourceLocationE+0x9a)[0x558a5b5ce3ba]

clang-trunk(_ZN5clang6Parser26ParseCompoundStatementBodyEb+0x5f9)[0x558a5b5cf339]

clang-trunk(_ZN5clang6Parser26ParseFunctionStatementBodyEPNS_4DeclERNS0_10ParseScopeE+0xda)[0x558a5b5d194a]

clang-trunk(_ZN5clang6Parser23ParseFunctionDefinitionERNS_17ParsingDeclaratorERKNS0_18ParsedTemplateInfoEPNS0_18LateParsedAttrListE+0x682)[0x558a5b517c22]

clang-trunk(_ZN5clang6Parser14ParseDeclGroupERNS_15ParsingDeclSpecENS_17DeclaratorContextEPNS_14SourceLocationEPNS0_12ForRangeInitE+0x740)[0x558a5b544580]

clang-trunk(_ZN5clang6Parser30ParseDeclOrFunctionDefInternalERNS_25ParsedAttributesWithRangeERNS_15ParsingDeclSpecENS_15AccessSpecifierE+0x226)[0x558a5b512426]

clang-trunk(+0x5b68a11)[0x558a5b512a11]

clang-trunk(_ZN5clang6Parser24ParseExternalDeclarationERNS_25ParsedAttributesWithRangeEPNS_15ParsingDeclSpecE+0x217)[0x558a5b519217]

clang-trunk(_ZN5clang6Parser17ParseTopLevelDeclERNS_9OpaquePtrINS_12DeclGroupRefEEEb+0x1ce)[0x558a5b51a7ae]

clang-trunk(_ZN5clang6Parser22ParseFirstTopLevelDeclERNS_9OpaquePtrINS_12DeclGroupRefEEE+0x39)[0x558a5b51ab59]

clang-trunk(_ZN5clang8ParseASTERNS_4SemaEbb+0x1ea)[0x558a5b50cfca]

clang-trunk(_ZN5clang13CodeGenAction13ExecuteActionEv+0x178)[0x558a5a454678]

clang-trunk(_ZN5clang14FrontendAction7ExecuteEv+0xd9)[0x558a59d04029]

clang-trunk(_ZN5clang16CompilerInstance13ExecuteActionERNS_14FrontendActionE+0x146)[0x558a59c971e6]

clang-trunk(_ZN5clang25ExecuteCompilerInvocationEPNS_16CompilerInstanceE+0x930)[0x558a59de1eb0]

clang-trunk(_Z8cc1_mainN4llvm8ArrayRefIPKcEES2_Pv+0x7f6)[0x558a56c0a6f6]

clang-trunk(+0x125ca38)[0x558a56c06a38]

clang-trunk(+0x417ddb9)[0x558a59b27db9]

clang-trunk(_ZN4llvm20CrashRecoveryContext9RunSafelyENS_12function_refIFvvEEE+0xbc)[0x558a5923da4c]

clang-trunk(+0x417e55d)[0x558a59b2855d]

clang-trunk(_ZNK5clang6driver11Compilation14ExecuteCommandERKNS0_7CommandERPS3_+0x9b)[0x558a59afaceb]

clang-trunk(_ZNK5clang6driver11Compilation11ExecuteJobsERKNS0_7JobListERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x119)[0x558a59afb809]

clang-trunk(_ZN5clang6driver6Driver18ExecuteCompilationERNS0_11CompilationERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x99)[0x558a59b063b9]

clang-trunk(main+0x18af)[0x558a56b354ef]

/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7f26160490b3]

clang-trunk(_start+0x2e)[0x558a56c065ae]

clang-13: error: clang frontend command failed with exit code 134 (use -v to see invocation)

clang version 13.0.0 (https://github.com/llvm/llvm-project.git 5c8659801a4976ef2b327f4071d98086efd42a36)

Target: x86_64-unknown-linux-gnu

Thread model: posix

InstalledDir: /home/cnsun/usr/bin

clang-13: note: diagnostic msg: 

********************



PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:

Preprocessed source(s) and associated run script(s) are located at:

clang-13: note: diagnostic msg: /tmp/mutant-0e3045.c

clang-13: note: diagnostic msg: /tmp/mutant-0e3045.sh

clang-13: note: diagnostic msg: 



********************

