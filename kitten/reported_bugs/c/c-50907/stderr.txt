mutant.c:10:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "" : "+v" ( c ) ) ;

^

mutant.c:13:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "" : : "q" ( e ) ) ;

^

mutant.c:6:1: warning: no previous prototype for function 'f1' [-Wmissing-prototypes]

f1 ( v16qi a )

^

mutant.c:5:1: note: declare 'static' if the function is not intended to be used outside of this translation unit

void

^

static 

mutant.c:20:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "" : "+v" ( c ) ) ;

^

mutant.c:23:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "" : : "r" (

^

mutant.c:19:25: warning: variable 'e' set but not used [-Wunused-but-set-variable]

register unsigned short e __asm ( "dx" ) ;

                        ^

mutant.c:16:1: warning: no previous prototype for function 'f2' [-Wmissing-prototypes]

f2 ( v8hi a )

^

mutant.c:15:1: note: declare 'static' if the function is not intended to be used outside of this translation unit

unsigned short

^

static 

mutant.c:24:9: warning: non-void function does not return a value [-Wreturn-type]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

        ^

mutant.c:24:82: warning: extension used [-Wlanguage-extension-token]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                                                                                 ^

mutant.c:24:24: warning: no previous prototype for function 'f3' [-Wmissing-prototypes]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                       ^

mutant.c:24:11: note: declare 'static' if the function is not intended to be used outside of this translation unit

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

          ^

          static 

mutant.c:24:245: warning: extension used [-Wlanguage-extension-token]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                                                                                                                                                                                                                                                    ^

mutant.c:24:189: warning: no previous prototype for function 'f4' [-Wmissing-prototypes]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                                                                                                                                                                                            ^

mutant.c:24:176: note: declare 'static' if the function is not intended to be used outside of this translation unit

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                                                                                                                                                                               ^

                                                                                                                                                                               static 

mutant.c:24:416: warning: extension used [-Wlanguage-extension-token]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                                                                                                                                                                                                                                                                                                                                                                                                                               ^

mutant.c:24:358: warning: no previous prototype for function 'f5' [-Wmissing-prototypes]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                                                                                                                                                                                                                                                                                                                                                                     ^

mutant.c:24:339: note: declare 'static' if the function is not intended to be used outside of this translation unit

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                                                                                                                                                                                                                                                                                                                                                  ^

                                                                                                                                                                                                                                                                                                                                                  static 

mutant.c:24:585: warning: extension used [-Wlanguage-extension-token]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



mutant.c:24:529: warning: no previous prototype for function 'f6' [-Wmissing-prototypes]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



mutant.c:24:510: note: declare 'static' if the function is not intended to be used outside of this translation unit

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



static 

mutant.c:24:762: warning: extension used [-Wlanguage-extension-token]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



mutant.c:24:684: warning: no previous prototype for function 'f7' [-Wmissing-prototypes]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^

mutant.c:24:679: note: declare 'static' if the function is not intended to be used outside of this translation unit

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



static 

mutant.c:24:937: warning: extension used [-Wlanguage-extension-token]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



mutant.c:24:860: warning: no previous prototype for function 'f8' [-Wmissing-prototypes]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



mutant.c:24:855: note: declare 'static' if the function is not intended to be used outside of this translation unit

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



static 

mutant.c:24:1135: warning: extension used [-Wlanguage-extension-token]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



mutant.c:25:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "" : "+v" ( e ) ) ;

^

mutant.c:24:1035: warning: no previous prototype for function 'f9' [-Wmissing-prototypes]

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



mutant.c:24:1030: note: declare 'static' if the function is not intended to be used outside of this translation unit

d ) ) ; } unsigned int f3 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned int f4 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } unsigned long long f5 ( v16qi a ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; return ( ( unsigned char * ) & d ) [ 3 ] ; } unsigned long long f6 ( v8hi a ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; return ( ( unsigned short * ) & d ) [ 3 ] ; } void f7 ( v16qi a , unsigned char * p ) { register v16qi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v16qi d = c ; * p = ( ( unsigned char * ) & d ) [ 3 ] ; } void f8 ( v8hi a , unsigned short * p ) { register v8hi c __asm ( "xmm16" ) = a ; asm volatile ( "" : "+v" ( c ) ) ; v8hi d = c ; * p = ( ( unsigned short * ) & d ) [ 3 ] ; } void f9 ( v4si a ) { register v4si c __asm ( "xmm16" ) = a ; register unsigned int e __asm ( "xmm17" ) ; asm volatile ( "" : "+v" ( c ) ) ; v4si d = c ; e = ( ( unsigned int * ) & d ) [ 3 ] ;



static 

mutant.c:32:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "" : "+v" ( c ) ) ;

^

mutant.c:35:1: warning: extension used [-Wlanguage-extension-token]

asm volatile ( "" : "+v" ( e ) ) ;

^

mutant.c:28:1: warning: no previous prototype for function 'f10' [-Wmissing-prototypes]

f10 ( v2di a )

^

mutant.c:27:1: note: declare 'static' if the function is not intended to be used outside of this translation unit

void

^

static 

mutant.c:10:16: error: couldn't allocate output register for constraint '{xmm16}'

asm volatile ( "" : "+v" ( c ) ) ;

               ^

mutant.c:20:16: error: couldn't allocate output register for constraint '{xmm16}'

asm volatile ( "" : "+v" ( c ) ) ;

               ^

clang-trunk: /tmp/tmp.xjN6dMkdrg-clang-builder/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:679: void getCopyToPartsVector(llvm::SelectionDAG&, const llvm::SDLoc&, llvm::SDValue, llvm::SDValue*, unsigned int, llvm::MVT, const llvm::Value*, llvm::Optional<unsigned int>): Assertion `PartVT.getFixedSizeInBits() > ValueSize && "lossy conversion of vector to scalar type"' failed.

PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.

Stack dump:

0.	Program arguments: clang-trunk -O3 -g3 -c -Wall -Wextra -Weverything mutant.c

1.	<eof> parser at end of file

2.	Code generation

3.	Running pass 'Function Pass Manager' on module 'mutant.c'.

4.	Running pass 'X86 DAG->DAG Instruction Selection' on function '@f2'

Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):

clang-trunk(+0x395b184)[0x557cb0618184]

clang-trunk(_ZN4llvm3sys15CleanupOnSignalEm+0xe4)[0x557cb0615fa4]

clang-trunk(+0x389fdd8)[0x557cb055cdd8]

/lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0)[0x7f15cfb0d3c0]

/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb)[0x7f15cf5ac18b]

/lib/x86_64-linux-gnu/libc.so.6(abort+0x12b)[0x7f15cf58b859]

/lib/x86_64-linux-gnu/libc.so.6(+0x25729)[0x7f15cf58b729]

/lib/x86_64-linux-gnu/libc.so.6(+0x36f36)[0x7f15cf59cf36]

clang-trunk(+0x48c49f7)[0x557cb15819f7]

clang-trunk(_ZNK4llvm12RegsForValue13getCopyToRegsENS_7SDValueERNS_12SelectionDAGERKNS_5SDLocERS1_PS1_PKNS_5ValueENS_3ISD8NodeTypeE+0x2fa)[0x557cb158622a]

clang-trunk(_ZN4llvm19SelectionDAGBuilder14visitInlineAsmERKNS_8CallBaseEPKNS_10BasicBlockE+0x2391)[0x557cb15b47e1]

clang-trunk(_ZN4llvm19SelectionDAGBuilder9visitCallERKNS_8CallInstE+0x44a)[0x557cb15a717a]

clang-trunk(_ZN4llvm19SelectionDAGBuilder5visitERKNS_11InstructionE+0x3d)[0x557cb15d495d]

clang-trunk(_ZN4llvm16SelectionDAGISel16SelectBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb1EEES6_Rb+0x90)[0x557cb1640680]

clang-trunk(_ZN4llvm16SelectionDAGISel20SelectAllBasicBlocksERKNS_8FunctionE+0xacb)[0x557cb164133b]

clang-trunk(+0x498656b)[0x557cb164356b]

clang-trunk(+0x2454bfc)[0x557caf111bfc]

clang-trunk(_ZN4llvm19MachineFunctionPass13runOnFunctionERNS_8FunctionE+0x258)[0x557caf835c68]

clang-trunk(_ZN4llvm13FPPassManager13runOnFunctionERNS_8FunctionE+0x365)[0x557cafd0ed05]

clang-trunk(_ZN4llvm13FPPassManager11runOnModuleERNS_6ModuleE+0x39)[0x557cafd0ef49]

clang-trunk(_ZN4llvm6legacy15PassManagerImpl3runERNS_6ModuleE+0x382)[0x557cafd10042]

clang-trunk(+0x3c8de72)[0x557cb094ae72]

clang-trunk(_ZN5clang17EmitBackendOutputERNS_17DiagnosticsEngineERKNS_19HeaderSearchOptionsERKNS_14CodeGenOptionsERKNS_13TargetOptionsERKNS_11LangOptionsEN4llvm9StringRefEPNSE_6ModuleENS_13BackendActionESt10unique_ptrINSE_17raw_pwrite_streamESt14default_deleteISK_EE+0x47d)[0x557cb094c92d]

clang-trunk(+0x4ab8e1f)[0x557cb1775e1f]

clang-trunk(_ZN5clang8ParseASTERNS_4SemaEbb+0x429)[0x557cb282d4d9]

clang-trunk(_ZN5clang13CodeGenAction13ExecuteActionEv+0x178)[0x557cb1774968]

clang-trunk(_ZN5clang14FrontendAction7ExecuteEv+0xd9)[0x557cb1024599]

clang-trunk(_ZN5clang16CompilerInstance13ExecuteActionERNS_14FrontendActionE+0x146)[0x557cb0fb77e6]

clang-trunk(_ZN5clang25ExecuteCompilerInvocationEPNS_16CompilerInstanceE+0x930)[0x557cb1102480]

clang-trunk(_Z8cc1_mainN4llvm8ArrayRefIPKcEES2_Pv+0x7f6)[0x557cadf22696]

clang-trunk(+0x12619d8)[0x557cadf1e9d8]

clang-trunk(+0x418b789)[0x557cb0e48789]

clang-trunk(_ZN4llvm20CrashRecoveryContext9RunSafelyENS_12function_refIFvvEEE+0xbc)[0x557cb055cf5c]

clang-trunk(+0x418bf2d)[0x557cb0e48f2d]

clang-trunk(_ZNK5clang6driver11Compilation14ExecuteCommandERKNS0_7CommandERPS3_+0x9b)[0x557cb0e1b6bb]

clang-trunk(_ZNK5clang6driver11Compilation11ExecuteJobsERKNS0_7JobListERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x119)[0x557cb0e1c1d9]

clang-trunk(_ZN5clang6driver6Driver18ExecuteCompilationERNS0_11CompilationERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x99)[0x557cb0e26d89]

clang-trunk(main+0x18af)[0x557cade4d52f]

/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7f15cf58d0b3]

clang-trunk(_start+0x2e)[0x557cadf1e54e]

clang-13: error: clang frontend command failed with exit code 134 (use -v to see invocation)

clang version 13.0.0 (https://github.com/llvm/llvm-project.git 2e9c75daffddd65e37c3236708b5b133e6f5f2f5)

Target: x86_64-unknown-linux-gnu

Thread model: posix

InstalledDir: /home/cnsun/usr/bin

clang-13: note: diagnostic msg: 

********************



PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:

Preprocessed source(s) and associated run script(s) are located at:

clang-13: note: diagnostic msg: /tmp/mutant-a820a9.c

clang-13: note: diagnostic msg: /tmp/mutant-a820a9.sh

clang-13: note: diagnostic msg: 



********************

