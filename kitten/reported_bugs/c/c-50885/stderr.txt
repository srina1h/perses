mutant.c:3:1: warning: incompatible redeclaration of library function 'snprintf' [-Wincompatible-library-redeclaration]

snprintf ( char * , double , const char * , ... ) ;

^

mutant.c:3:1: note: 'snprintf' is a builtin with type 'int (char *, unsigned long, const char *, ...)'

mutant.c:9:23: warning: implicit conversion from 'size_t' (aka 'unsigned long') to 'double' may lose precision [-Wimplicit-int-float-conversion]

if ( snprintf ( buf , len , "%s: %d" , gettext ( "count" ) , count ) >= len )

     ~~~~~~~~         ^~~

mutant.c:7:1: warning: no previous prototype for function 'fill' [-Wmissing-prototypes]

fill ( char * buf , size_t len , int count )

^

mutant.c:6:1: note: declare 'static' if the function is not intended to be used outside of this translation unit

char *

^

static 

mutant.c:9:70: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]

if ( snprintf ( buf , len , "%s: %d" , gettext ( "count" ) , count ) >= len )

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~

clang-trunk: /tmp/tmp.xjN6dMkdrg-clang-builder/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:1855: void computeKnownBits(const llvm::Value*, const llvm::APInt&, llvm::KnownBits&, unsigned int, const {anonymous}::Query&): Assertion `(Ty->isIntOrIntVectorTy(BitWidth) || Ty->isPtrOrPtrVectorTy()) && "Not integer or pointer type!"' failed.

PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.

Stack dump:

0.	Program arguments: clang-trunk -O3 -g3 -c -Wall -Wextra -Weverything mutant.c

1.	<eof> parser at end of file

2.	Optimizer

Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):

clang-trunk(+0x395b184)[0x55e3f655b184]

clang-trunk(_ZN4llvm3sys15CleanupOnSignalEm+0xe4)[0x55e3f6558fa4]

clang-trunk(+0x389fdd8)[0x55e3f649fdd8]

/lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0)[0x7f48839253c0]

/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb)[0x7f48833c418b]

/lib/x86_64-linux-gnu/libc.so.6(abort+0x12b)[0x7f48833a3859]

/lib/x86_64-linux-gnu/libc.so.6(+0x25729)[0x7f48833a3729]

/lib/x86_64-linux-gnu/libc.so.6(+0x36f36)[0x7f48833b4f36]

clang-trunk(+0x299de5a)[0x55e3f559de5a]

clang-trunk(+0x29a1f49)[0x55e3f55a1f49]

clang-trunk(+0x29a374d)[0x55e3f55a374d]

clang-trunk(_ZN4llvm14isKnownNonZeroEPKNS_5ValueERKNS_10DataLayoutEjPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEb+0x77)[0x55e3f55a3817]

clang-trunk(_ZN4llvm17LibCallSimplifier16optimizeSnPrintFEPNS_8CallInstERNS_13IRBuilderBaseE+0x8a)[0x55e3f670cfea]

clang-trunk(_ZN4llvm17LibCallSimplifier12optimizeCallEPNS_8CallInstERNS_13IRBuilderBaseE+0x940)[0x55e3f6719fc0]

clang-trunk(+0x3309b82)[0x55e3f5f09b82]

clang-trunk(+0x330e89c)[0x55e3f5f0e89c]

clang-trunk(+0x331074c)[0x55e3f5f1074c]

clang-trunk(+0x32cdfa8)[0x55e3f5ecdfa8]

clang-trunk(+0x32d06e3)[0x55e3f5ed06e3]

clang-trunk(_ZN4llvm15InstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x891)[0x55e3f5ed2741]

clang-trunk(+0x4b33456)[0x55e3f7733456]

clang-trunk(_ZN4llvm11PassManagerINS_8FunctionENS_15AnalysisManagerIS1_JEEEJEE3runERS1_RS3_+0x436)[0x55e3f5c974d6]

clang-trunk(+0x152c836)[0x55e3f412c836]

clang-trunk(_ZN4llvm27ModuleToFunctionPassAdaptor3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x6e9)[0x55e3f5c95ff9]

clang-trunk(+0x152d0a6)[0x55e3f412d0a6]

clang-trunk(_ZN4llvm11PassManagerINS_6ModuleENS_15AnalysisManagerIS1_JEEEJEE3runERS1_RS3_+0x50f)[0x55e3f5c938df]

clang-trunk(+0x3c8c6ad)[0x55e3f688c6ad]

clang-trunk(_ZN5clang17EmitBackendOutputERNS_17DiagnosticsEngineERKNS_19HeaderSearchOptionsERKNS_14CodeGenOptionsERKNS_13TargetOptionsERKNS_11LangOptionsEN4llvm9StringRefEPNSE_6ModuleENS_13BackendActionESt10unique_ptrINSE_17raw_pwrite_streamESt14default_deleteISK_EE+0x47d)[0x55e3f688f92d]

clang-trunk(+0x4ab8e1f)[0x55e3f76b8e1f]

clang-trunk(_ZN5clang8ParseASTERNS_4SemaEbb+0x429)[0x55e3f87704d9]

clang-trunk(_ZN5clang13CodeGenAction13ExecuteActionEv+0x178)[0x55e3f76b7968]

clang-trunk(_ZN5clang14FrontendAction7ExecuteEv+0xd9)[0x55e3f6f67599]

clang-trunk(_ZN5clang16CompilerInstance13ExecuteActionERNS_14FrontendActionE+0x146)[0x55e3f6efa7e6]

clang-trunk(_ZN5clang25ExecuteCompilerInvocationEPNS_16CompilerInstanceE+0x930)[0x55e3f7045480]

clang-trunk(_Z8cc1_mainN4llvm8ArrayRefIPKcEES2_Pv+0x7f6)[0x55e3f3e65696]

clang-trunk(+0x12619d8)[0x55e3f3e619d8]

clang-trunk(+0x418b789)[0x55e3f6d8b789]

clang-trunk(_ZN4llvm20CrashRecoveryContext9RunSafelyENS_12function_refIFvvEEE+0xbc)[0x55e3f649ff5c]

clang-trunk(+0x418bf2d)[0x55e3f6d8bf2d]

clang-trunk(_ZNK5clang6driver11Compilation14ExecuteCommandERKNS0_7CommandERPS3_+0x9b)[0x55e3f6d5e6bb]

clang-trunk(_ZNK5clang6driver11Compilation11ExecuteJobsERKNS0_7JobListERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x119)[0x55e3f6d5f1d9]

clang-trunk(_ZN5clang6driver6Driver18ExecuteCompilationERNS0_11CompilationERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x99)[0x55e3f6d69d89]

clang-trunk(main+0x18af)[0x55e3f3d9052f]

/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7f48833a50b3]

clang-trunk(_start+0x2e)[0x55e3f3e6154e]

clang-13: error: clang frontend command failed with exit code 134 (use -v to see invocation)

clang version 13.0.0 (https://github.com/llvm/llvm-project.git 2e9c75daffddd65e37c3236708b5b133e6f5f2f5)

Target: x86_64-unknown-linux-gnu

Thread model: posix

InstalledDir: /home/cnsun/usr/bin

clang-13: note: diagnostic msg: 

********************



PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:

Preprocessed source(s) and associated run script(s) are located at:

clang-13: note: diagnostic msg: /tmp/mutant-fa487b.c

clang-13: note: diagnostic msg: /tmp/mutant-fa487b.sh

clang-13: note: diagnostic msg: 



********************

