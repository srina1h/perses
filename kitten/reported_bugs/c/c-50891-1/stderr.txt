In file included from mutant.c:1:

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:15:2: error: "MVE support not enabled"

#error "MVE support not enabled"

 ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:25:24: error: '__neon_vector_type__' attribute is not supported on targets missing 'neon' or 'mve'; specify an appropriate -march= or -mcpu=

typedef __attribute__((__neon_vector_type__(8), __clang_arm_mve_strict_polymorphism)) int16_t int16x8_t;

                       ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:25:49: error: '__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type

typedef __attribute__((__neon_vector_type__(8), __clang_arm_mve_strict_polymorphism)) int16_t int16x8_t;

                                                ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:28:24: error: '__neon_vector_type__' attribute is not supported on targets missing 'neon' or 'mve'; specify an appropriate -march= or -mcpu=

typedef __attribute__((__neon_vector_type__(4), __clang_arm_mve_strict_polymorphism)) int32_t int32x4_t;

                       ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:28:49: error: '__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type

typedef __attribute__((__neon_vector_type__(4), __clang_arm_mve_strict_polymorphism)) int32_t int32x4_t;

                                                ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:31:24: error: '__neon_vector_type__' attribute is not supported on targets missing 'neon' or 'mve'; specify an appropriate -march= or -mcpu=

typedef __attribute__((__neon_vector_type__(2), __clang_arm_mve_strict_polymorphism)) int64_t int64x2_t;

                       ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:31:49: error: '__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type

typedef __attribute__((__neon_vector_type__(2), __clang_arm_mve_strict_polymorphism)) int64_t int64x2_t;

                                                ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:34:24: error: '__neon_vector_type__' attribute is not supported on targets missing 'neon' or 'mve'; specify an appropriate -march= or -mcpu=

typedef __attribute__((__neon_vector_type__(16), __clang_arm_mve_strict_polymorphism)) int8_t int8x16_t;

                       ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:34:50: error: '__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type

typedef __attribute__((__neon_vector_type__(16), __clang_arm_mve_strict_polymorphism)) int8_t int8x16_t;

                                                 ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:37:24: error: '__neon_vector_type__' attribute is not supported on targets missing 'neon' or 'mve'; specify an appropriate -march= or -mcpu=

typedef __attribute__((__neon_vector_type__(8), __clang_arm_mve_strict_polymorphism)) uint16_t uint16x8_t;

                       ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:37:49: error: '__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type

typedef __attribute__((__neon_vector_type__(8), __clang_arm_mve_strict_polymorphism)) uint16_t uint16x8_t;

                                                ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:40:24: error: '__neon_vector_type__' attribute is not supported on targets missing 'neon' or 'mve'; specify an appropriate -march= or -mcpu=

typedef __attribute__((__neon_vector_type__(4), __clang_arm_mve_strict_polymorphism)) uint32_t uint32x4_t;

                       ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:40:49: error: '__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type

typedef __attribute__((__neon_vector_type__(4), __clang_arm_mve_strict_polymorphism)) uint32_t uint32x4_t;

                                                ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:43:24: error: '__neon_vector_type__' attribute is not supported on targets missing 'neon' or 'mve'; specify an appropriate -march= or -mcpu=

typedef __attribute__((__neon_vector_type__(2), __clang_arm_mve_strict_polymorphism)) uint64_t uint64x2_t;

                       ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:43:49: error: '__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type

typedef __attribute__((__neon_vector_type__(2), __clang_arm_mve_strict_polymorphism)) uint64_t uint64x2_t;

                                                ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:46:24: error: '__neon_vector_type__' attribute is not supported on targets missing 'neon' or 'mve'; specify an appropriate -march= or -mcpu=

typedef __attribute__((__neon_vector_type__(16), __clang_arm_mve_strict_polymorphism)) uint8_t uint8x16_t;

                       ^

/scratch/software/clang-trunk/lib/clang/13.0.0/include/arm_mve.h:46:50: error: '__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type

typedef __attribute__((__neon_vector_type__(16), __clang_arm_mve_strict_polymorphism)) uint8_t uint8x16_t;

                                                 ^

mutant.c:3:1: warning: no previous prototype for function 'foo' [-Wmissing-prototypes]

foo ( uint8x16_t a , uint8x16_t b )

^

mutant.c:2:1: note: declare 'static' if the function is not intended to be used outside of this translation unit

uint8x16_t

^

static 

mutant.c:9:14: warning: implicit declaration of function 'bar' is invalid in C99 [-Wimplicit-function-declaration]

{ return 1 + bar (

             ^

mutant.c:10:3: warning: use of GNU statement expression extension [-Wgnu-statement-expression]

( {

  ^

mutant.c:10:2: warning: '(' and '{' tokens introducing statement expression are separated by whitespace [-Wcompound-token-split-by-space]

( {

~^~

mutant.c:12:10: error: use of undeclared identifier 'x'

switch ( x )

         ^

mutant.c:23:2: warning: '}' and ')' tokens terminating statement expression are separated by whitespace [-Wcompound-token-split-by-space]

} )

~^~

clang-trunk: /tmp/tmp.yXrVH9VfkV-clang-builder/llvm-project/clang/lib/AST/ExprConstant.cpp:10825: bool EvaluateInteger(const clang::Expr*, llvm::APSInt&, {anonymous}::EvalInfo&): Assertion `!E->isValueDependent()' failed.

PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.

Stack dump:

0.	Program arguments: clang-trunk -O3 -g3 -c -Wall -Wextra -Weverything mutant.c

1.	mutant.c:24:3: current parser token ';'

2.	mutant.c:9:1: parsing function body 'foo1'

3.	mutant.c:9:1: in compound statement ('{}')

Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):

clang-trunk(+0x39f0034)[0x55d275329034]

clang-trunk(_ZN4llvm3sys15CleanupOnSignalEm+0xe4)[0x55d275326e54]

clang-trunk(+0x3934c38)[0x55d27526dc38]

/lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0)[0x7fc34025d3c0]

/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb)[0x7fc33fcfc18b]

/lib/x86_64-linux-gnu/libc.so.6(abort+0x12b)[0x7fc33fcdb859]

/lib/x86_64-linux-gnu/libc.so.6(+0x25729)[0x7fc33fcdb729]

/lib/x86_64-linux-gnu/libc.so.6(+0x36f36)[0x7fc33fcecf36]

clang-trunk(+0x6b267a9)[0x55d27845f7a9]

clang-trunk(+0x6b2887f)[0x55d27846187f]

clang-trunk(+0x6b23e5b)[0x55d27845ce5b]

clang-trunk(+0x6b12efe)[0x55d27844befe]

clang-trunk(+0x6b0dbc2)[0x55d278446bc2]

clang-trunk(+0x6b0e58d)[0x55d27844758d]

clang-trunk(+0x6b0e7e2)[0x55d2784477e2]

clang-trunk(+0x6b593af)[0x55d2784923af]

clang-trunk(+0x6b66c38)[0x55d27849fc38]

clang-trunk(+0x6b23c58)[0x55d27845cc58]

clang-trunk(+0x6b12efe)[0x55d27844befe]

clang-trunk(+0x6b14e2f)[0x55d27844de2f]

clang-trunk(+0x6b67243)[0x55d2784a0243]

clang-trunk(+0x6b247f5)[0x55d27845d7f5]

clang-trunk(+0x6b12efe)[0x55d27844befe]

clang-trunk(+0x6b1ce99)[0x55d278455e99]

clang-trunk(_ZNK5clang4Expr16EvaluateAsRValueERNS0_10EvalResultERKNS_10ASTContextEb+0x1ff)[0x55d278457f5f]

clang-trunk(+0x5dbdbfa)[0x55d2776f6bfa]

clang-trunk(+0x5debd77)[0x55d277724d77]

clang-trunk(+0x5defa7f)[0x55d277728a7f]

clang-trunk(_ZN5clang4Sema18CheckCompletedExprEPNS_4ExprENS_14SourceLocationEb+0xdf)[0x55d27773ca8f]

clang-trunk(_ZN5clang4Sema19ActOnFinishFullExprEPNS_4ExprENS_14SourceLocationEbb+0x122)[0x55d277adfc22]

clang-trunk(_ZN5clang4Sema15BuildReturnStmtENS_14SourceLocationEPNS_4ExprE+0x823)[0x55d277d68d73]

clang-trunk(_ZN5clang4Sema15ActOnReturnStmtENS_14SourceLocationEPNS_4ExprEPNS_5ScopeE+0x8a)[0x55d277d69d1a]

clang-trunk(_ZN5clang6Parser20ParseReturnStatementEv+0xbf)[0x55d2776211cf]

clang-trunk(_ZN5clang6Parser42ParseStatementOrDeclarationAfterAttributesERN4llvm11SmallVectorIPNS_4StmtELj32EEENS0_17ParsedStmtContextEPNS_14SourceLocationERNS_25ParsedAttributesWithRangeE+0x50e)[0x55d27762430e]

clang-trunk(_ZN5clang6Parser27ParseStatementOrDeclarationERN4llvm11SmallVectorIPNS_4StmtELj32EEENS0_17ParsedStmtContextEPNS_14SourceLocationE+0x9a)[0x55d2776250ea]

clang-trunk(_ZN5clang6Parser26ParseCompoundStatementBodyEb+0x5f9)[0x55d277626069]

clang-trunk(_ZN5clang6Parser26ParseFunctionStatementBodyEPNS_4DeclERNS0_10ParseScopeE+0xda)[0x55d27762861a]

clang-trunk(_ZN5clang6Parser23ParseFunctionDefinitionERNS_17ParsingDeclaratorERKNS0_18ParsedTemplateInfoEPNS0_18LateParsedAttrListE+0x692)[0x55d27756e4d2]

clang-trunk(_ZN5clang6Parser14ParseDeclGroupERNS_15ParsingDeclSpecENS_17DeclaratorContextEPNS_14SourceLocationEPNS0_12ForRangeInitE+0x740)[0x55d27759ae50]

clang-trunk(_ZN5clang6Parser30ParseDeclOrFunctionDefInternalERNS_25ParsedAttributesWithRangeERNS_15ParsingDeclSpecENS_15AccessSpecifierE+0x226)[0x55d277568cb6]

clang-trunk(+0x5c302a1)[0x55d2775692a1]

clang-trunk(_ZN5clang6Parser24ParseExternalDeclarationERNS_25ParsedAttributesWithRangeEPNS_15ParsingDeclSpecE+0x217)[0x55d27756fac7]

clang-trunk(_ZN5clang6Parser17ParseTopLevelDeclERNS_9OpaquePtrINS_12DeclGroupRefEEEb+0x1ce)[0x55d27757105e]

clang-trunk(_ZN5clang8ParseASTERNS_4SemaEbb+0x219)[0x55d277563889]

clang-trunk(_ZN5clang13CodeGenAction13ExecuteActionEv+0x178)[0x55d2764a31d8]

clang-trunk(_ZN5clang14FrontendAction7ExecuteEv+0xd9)[0x55d275d44f69]

clang-trunk(_ZN5clang16CompilerInstance13ExecuteActionERNS_14FrontendActionE+0x146)[0x55d275cd7f76]

clang-trunk(_ZN5clang25ExecuteCompilerInvocationEPNS_16CompilerInstanceE+0x930)[0x55d275e22df0]

clang-trunk(_Z8cc1_mainN4llvm8ArrayRefIPKcEES2_Pv+0x7f6)[0x55d272bcab46]

clang-trunk(+0x128de88)[0x55d272bc6e88]

clang-trunk(+0x422fad9)[0x55d275b68ad9]

clang-trunk(_ZN4llvm20CrashRecoveryContext9RunSafelyENS_12function_refIFvvEEE+0xbc)[0x55d27526ddbc]

clang-trunk(+0x423027d)[0x55d275b6927d]

clang-trunk(_ZNK5clang6driver11Compilation14ExecuteCommandERKNS0_7CommandERPS3_+0x9b)[0x55d275b3b89b]

clang-trunk(_ZNK5clang6driver11Compilation11ExecuteJobsERKNS0_7JobListERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x119)[0x55d275b3c3b9]

clang-trunk(_ZN5clang6driver6Driver18ExecuteCompilationERNS0_11CompilationERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x99)[0x55d275b47319]

clang-trunk(main+0x18af)[0x55d272af552f]

/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7fc33fcdd0b3]

clang-trunk(_start+0x2e)[0x55d272bc69fe]

clang-13: error: clang frontend command failed with exit code 134 (use -v to see invocation)

clang version 13.0.0 (https://github.com/llvm/llvm-project.git 7139497656147275156e7242a8bf08794af9130a)

Target: x86_64-unknown-linux-gnu

Thread model: posix

InstalledDir: /home/cnsun/usr/bin

clang-13: note: diagnostic msg: Error generating preprocessed source(s).

