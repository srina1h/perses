clang-trunk: /tmp/tmp.Q3UQPrNzD1-clang-builder/llvm-project/llvm/include/llvm/Support/Casting.h:269: typename llvm::cast_retty<X, Y*>::ret_type llvm::cast(Y*) [with X = clang::FunctionDecl; Y = clang::Decl; typename llvm::cast_retty<X, Y*>::ret_type = clang::FunctionDecl*]: Assertion `isa<X>(Val) && "cast<Ty>() argument of incompatible type!"' failed.

PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.

Stack dump:

0.	Program arguments: clang-trunk -O3 -g3 -c -Wall -Wextra -Weverything mutant.c

1.	mutant.c:14:64: current parser token ';'

2.	mutant.c:12:1: parsing struct/union body 'rtunion_def'

Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):

clang-trunk(+0x39863e4)[0x55d547fed3e4]

clang-trunk(_ZN4llvm3sys15CleanupOnSignalEm+0xe4)[0x55d547feb204]

clang-trunk(+0x38cb048)[0x55d547f32048]

/lib/x86_64-linux-gnu/libpthread.so.0(+0x153c0)[0x7fca11c7a3c0]

/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcb)[0x7fca1171918b]

/lib/x86_64-linux-gnu/libc.so.6(abort+0x12b)[0x7fca116f8859]

/lib/x86_64-linux-gnu/libc.so.6(+0x25729)[0x7fca116f8729]

/lib/x86_64-linux-gnu/libc.so.6(+0x36f36)[0x7fca11709f36]

clang-trunk(_ZN5clang4Sema17AddAllocAlignAttrEPNS_4DeclERKNS_19AttributeCommonInfoEPNS_4ExprE+0xa7a)[0x55d54a513a6a]

clang-trunk(+0x5eda678)[0x55d54a541678]

clang-trunk(+0x5edbd10)[0x55d54a542d10]

clang-trunk(_ZN5clang4Sema21ProcessDeclAttributesEPNS_5ScopeEPNS_4DeclERKNS_10DeclaratorE+0x105)[0x55d54a543fd5]

clang-trunk(_ZN5clang4Sema14CheckFieldDeclENS_15DeclarationNameENS_8QualTypeEPNS_14TypeSourceInfoEPNS_10RecordDeclENS_14SourceLocationEbPNS_4ExprENS_16InClassInitStyleES7_NS_15AccessSpecifierEPNS_9NamedDeclEPNS_10DeclaratorE+0x47c)[0x55d54a49e69c]

clang-trunk(_ZN5clang4Sema11HandleFieldEPNS_5ScopeEPNS_10RecordDeclENS_14SourceLocationERNS_10DeclaratorEPNS_4ExprENS_16InClassInitStyleENS_15AccessSpecifierE+0x21b)[0x55d54a4b6aeb]

clang-trunk(_ZN5clang4Sema10ActOnFieldEPNS_5ScopeEPNS_4DeclENS_14SourceLocationERNS_10DeclaratorEPNS_4ExprE+0x25)[0x55d54a4b70b5]

clang-trunk(+0x5bc3d22)[0x55d54a22ad22]

clang-trunk(_ZN5clang6Parser22ParseStructDeclarationERNS_15ParsingDeclSpecEN4llvm12function_refIFvRNS_22ParsingFieldDeclaratorEEEE+0x349)[0x55d54a247e79]

clang-trunk(_ZN5clang6Parser20ParseStructUnionBodyENS_14SourceLocationENS_17TypeSpecifierTypeEPNS_10RecordDeclE+0x28a)[0x55d54a24842a]

clang-trunk(_ZN5clang6Parser19ParseClassSpecifierENS_3tok9TokenKindENS_14SourceLocationERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierEbNS0_15DeclSpecContextERNS_25ParsedAttributesWithRangeE+0x9ae)[0x55d54a263a9e]

clang-trunk(_ZN5clang6Parser26ParseDeclarationSpecifiersERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE+0x731)[0x55d54a242f41]

clang-trunk(_ZN5clang6Parser30ParseDeclOrFunctionDefInternalERNS_25ParsedAttributesWithRangeERNS_15ParsingDeclSpecENS_15AccessSpecifierE+0x83)[0x55d54a2148c3]

clang-trunk(+0x5bae051)[0x55d54a215051]

clang-trunk(_ZN5clang6Parser24ParseExternalDeclarationERNS_25ParsedAttributesWithRangeEPNS_15ParsingDeclSpecE+0x217)[0x55d54a21b857]

clang-trunk(_ZN5clang6Parser17ParseTopLevelDeclERNS_9OpaquePtrINS_12DeclGroupRefEEEb+0x1ce)[0x55d54a21cdee]

clang-trunk(_ZN5clang8ParseASTERNS_4SemaEbb+0x219)[0x55d54a20f639]

clang-trunk(_ZN5clang13CodeGenAction13ExecuteActionEv+0x178)[0x55d549156798]

clang-trunk(_ZN5clang14FrontendAction7ExecuteEv+0xd9)[0x55d5489ff489]

clang-trunk(_ZN5clang16CompilerInstance13ExecuteActionERNS_14FrontendActionE+0x146)[0x55d548992566]

clang-trunk(_ZN5clang25ExecuteCompilerInvocationEPNS_16CompilerInstanceE+0x930)[0x55d548adcec0]

clang-trunk(_Z8cc1_mainN4llvm8ArrayRefIPKcEES2_Pv+0x7f6)[0x55d5458d8696]

clang-trunk(+0x126d9d8)[0x55d5458d49d8]

clang-trunk(+0x41bc0e9)[0x55d5488230e9]

clang-trunk(_ZN4llvm20CrashRecoveryContext9RunSafelyENS_12function_refIFvvEEE+0xbc)[0x55d547f321cc]

clang-trunk(+0x41bc88d)[0x55d54882388d]

clang-trunk(_ZNK5clang6driver11Compilation14ExecuteCommandERKNS0_7CommandERPS3_+0x9b)[0x55d5487f601b]

clang-trunk(_ZNK5clang6driver11Compilation11ExecuteJobsERKNS0_7JobListERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x119)[0x55d5487f6b39]

clang-trunk(_ZN5clang6driver6Driver18ExecuteCompilationERNS0_11CompilationERN4llvm15SmallVectorImplISt4pairIiPKNS0_7CommandEEEE+0x99)[0x55d5488016e9]

clang-trunk(main+0x18af)[0x55d54580352f]

/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7fca116fa0b3]

clang-trunk(_start+0x2e)[0x55d5458d454e]

clang-13: error: clang frontend command failed with exit code 134 (use -v to see invocation)

clang version 13.0.0 (https://github.com/llvm/llvm-project.git 632e15e766ee625ae367b2e872f3df903e507bfb)

Target: x86_64-unknown-linux-gnu

Thread model: posix

InstalledDir: /home/cnsun/usr/bin

clang-13: note: diagnostic msg: 

********************



PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:

Preprocessed source(s) and associated run script(s) are located at:

clang-13: note: diagnostic msg: /tmp/mutant-ffdb96.c

clang-13: note: diagnostic msg: /tmp/mutant-ffdb96.sh

clang-13: note: diagnostic msg: 



********************

