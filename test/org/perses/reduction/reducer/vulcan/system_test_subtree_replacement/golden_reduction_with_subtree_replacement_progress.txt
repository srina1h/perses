=====================Reduction starts.======================

The initial program size is 14
The command line options are:
---
helpFlags:
  groupName: "Help"
  help: false
verbosityFlags:
  groupName: "Verbosity"
  verbosity: "INFO"
  listVerbosity: false
versionFlags:
  groupName: "Version"
  version: false
inputFlags:
  groupName: "Inputs"
  testScript: "r.sh"
  inputFile: "t.c"
  deps: []
  sourceFile: "t.c"
resultOutputFlags:
  groupName: "Outputs"
  outputDir: "result_subtree_replacement_reduction_golden_test_perses_node_priority_with_dfs_delta_t.c"
reductionControlFlags:
  groupName: "General Reduction Control"
  fixpoint: true
  numOfThreads: 1
  codeFormat: "ORIG_FORMAT"
  testScriptExecutionTimeoutInSeconds: 600
  testScriptExecutionKeepWaitingAfterTimeout: true
outputRefiningFlags:
  groupName: "Output Refining Control"
  callFormatter: false
  formatCmd: ""
  callCReduce: false
  creduceCmd: "creduce"
algorithmControlFlags:
  groupName: "Reduction Algorithm Control"
  reductionAlgorithm: "perses_node_priority_with_dfs_delta"
  listAllReductionAlgorithms: false
  rebuildParseTreeEachIteration: true
  enableTokenSlicer: false
  enableTreeSlicer: false
  enableLineSlicer: false
  defaultDeltaDebuggerTypeForKleene: "DFS"
  maxEditCountForRegularRuleNode: 100
  maxBfsDepthForRegularRuleNode: 5
  stopAtFirstCompatibleChildForRegularRuleNode: false
languageControlFlags:
  groupName: "Language Control"
  languageName: ""
  listLangs: false
  designatedParserFacadeClassName: ""
  listParserFacades: false
  languageJarFiles: []
vulcanFlags:
  groupName: "Vulcan Reducer Control"
  enableVulcan: false
  nonDeletionIterationLimit: 20
  windowSize: 4
  vulcanFixpoint: false
trecFlags:
  groupName: "T-Rec Reducer Control"
  enableTrec: false
profilingFlags:
  groupName: "Profiling"
  progressDumpFile: "progress_dump_subtree_replacement.txt"
  appendToProgressDumpFile: true
  statDumpFile: null
  profileQueryCacheTime: null
  profileQueryCacheTimeCSV: null
  profileQueryCacheMemory: null
  actionSetProfiler: null
  profileDeltaDebugger: null
cacheControlFlags:
  groupName: "Cache Control"
  queryCaching: "FALSE"
  cacheType: "CONTENT_SHA512"
  nodeActionSetCaching: false
  queryCacheRefreshThreshold: 0
  enableLightweightRefreshing: true
  enablePassCache: false
  globalCacheFile: null
  pathToSaveUpdatedGlobalCache: null
experimentFlags:
  groupName: "Experiment Control"
  onDemandFineGritReducerAnnotationClasses:
  - "org.perses.reduction.reducer.vulcan.SubTreeReplacementReducer$META"
  onDemandMediumGritReducerAnnotationClasses: []
  onDemandCoarseGritReducerAnnotationClasses: []
lprFlags:
  groupName: "LPR Reducer Control"
  enableLPR: false
  lprFixpoint: false
  llmClientPath: null

Parser Facade: class org.perses.grammar.c.PnfCParserFacade
------------------------------------------------------------


The sanity check has been performed. The result is PassingSanityCheckResult
The reducer execution plan is listed below.
--- !<sequence>
reducers:
- !<fixpoint>
  body: !<atomic>
    reducer: perses_node_priority_with_dfs_delta
  condition: smaller
- !<fixpoint>
  body: !<if>
    condition: !<atomic>
      reducer: subtree_replacer
    then: !<atomic>
      reducer: perses_node_priority_with_dfs_delta
  condition: 20


Rebuilding spar-tree: The spartree is not dirty, and thus the rebuilding is skipped.

=Fixpoint iteration 1. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=1,slot_type=translationUnit}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=4,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=5,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=70,slot_type=declarationSpecifiers}
        |       |___Token:int {id=74,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=61,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=69,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=63,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=65,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=66,slot_type=LeftParen}
        |           |___Token:) {id=68,slot_type=RightParen}
        |___compoundStatement {id=7,slot_type=compoundStatement}
            |___Token:{ {id=8,slot_type=LeftBrace}
            |___(?) {id=9,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=12,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=16,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=19,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=20,slot_type=Return}
            |           |   |___(?) {id=21,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=33,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=49,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=52,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=53,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=54,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=60,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51,slot_type=RightParen}
            |           |           |___(*) {id=35,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=36,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=45,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=44,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=18,slot_type=Semi}
            |___Token:} {id=10,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 4, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 4
------------------------------------------------------------


==================Reducing node 7, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 9, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int main() {
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 12, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int main() {
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 16, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main() {
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main() {
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 19, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main() {
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 21, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int main() {
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 33, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main() {
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main() {
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main() {
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 33
------------------------------------------------------------


=================Reducing node 49, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 49
------------------------------------------------------------


=================Reducing node 61, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main   {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int main   {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 61
------------------------------------------------------------


=================Reducing node 52, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52
------------------------------------------------------------


=================Reducing node 63, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int main   {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int main   {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 63
------------------------------------------------------------


=================Reducing node 65, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main   {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int main   {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 35, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int main() {
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 35
------------------------------------------------------------


=================Reducing node 36, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main() {
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 36
------------------------------------------------------------


=================Reducing node 69, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 69
------------------------------------------------------------


=================Reducing node 68, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 68
------------------------------------------------------------


=================Reducing node 66, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 66
------------------------------------------------------------


=================Reducing node 60, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 60
------------------------------------------------------------


=================Reducing node 54, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54
------------------------------------------------------------


=================Reducing node 53, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53
------------------------------------------------------------


=================Reducing node 51, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51
------------------------------------------------------------


=================Reducing node 45, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 45
------------------------------------------------------------


=================Reducing node 44, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 44
------------------------------------------------------------


=================Reducing node 20, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 18, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 10, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


==================Reducing node 8, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


==================Reducing node 5, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
        main() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
        main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


=================Reducing node 70, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
        main() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
        main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 70
------------------------------------------------------------


=================Reducing node 74, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 74
------------------------------------------------------------


======Fixpoint iteration 2. Reducer: subtree_replacer=======

The spar-tree is the following.
translationUnit {id=1,slot_type=translationUnit}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=4,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=5,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=70,slot_type=declarationSpecifiers}
        |       |___Token:int {id=74,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=61,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=69,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=63,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=65,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=66,slot_type=LeftParen}
        |           |___Token:) {id=68,slot_type=RightParen}
        |___compoundStatement {id=7,slot_type=compoundStatement}
            |___Token:{ {id=8,slot_type=LeftBrace}
            |___(?) {id=9,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=12,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=16,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=19,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=20,slot_type=Return}
            |           |   |___(?) {id=21,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=33,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=49,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=52,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=53,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=54,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=60,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51,slot_type=RightParen}
            |           |           |___(*) {id=35,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=36,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=45,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=44,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=18,slot_type=Semi}
            |___Token:} {id=10,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
        main{}
    --file: <formatted tokenized program in its original format>--
        main{}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedef;
    --file: <formatted tokenized program in its original format>--
    typedef;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    ;
    --file: <formatted tokenized program in its original format>--
    ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedef main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    typedef main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    automain() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    automain() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    voidmain() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    voidmain() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    const main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    charmain() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    charmain() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    short main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    longmain() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    longmain() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    float main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 3. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50211,slot_type=translationUnit}
|___(+) {id=50212,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50214,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50215,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50280,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50284,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50271,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50279,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50273,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50275,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50276,slot_type=LeftParen}
        |           |___Token:) {id=50278,slot_type=RightParen}
        |___compoundStatement {id=50217,slot_type=compoundStatement}
            |___Token:{ {id=50218,slot_type=LeftBrace}
            |___(?) {id=50219,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50222,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50226,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50229,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50230,slot_type=Return}
            |           |   |___(?) {id=50231,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50243,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50259,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50262,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50263,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50264,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=50270,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=50261,slot_type=RightParen}
            |           |           |___(*) {id=50245,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50246,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50255,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50254,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50228,slot_type=Semi}
            |___Token:} {id=50220,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50212, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50212
------------------------------------------------------------


================Reducing node 50214, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50214
------------------------------------------------------------


================Reducing node 50217, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50217
------------------------------------------------------------


================Reducing node 50219, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50219
------------------------------------------------------------


================Reducing node 50222, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50222
------------------------------------------------------------


================Reducing node 50226, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50226
------------------------------------------------------------


================Reducing node 50229, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50229
------------------------------------------------------------


================Reducing node 50231, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50231
------------------------------------------------------------


================Reducing node 50243, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50243
------------------------------------------------------------


================Reducing node 50259, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50259
------------------------------------------------------------


================Reducing node 50271, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50271
------------------------------------------------------------


================Reducing node 50262, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50262
------------------------------------------------------------


================Reducing node 50273, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50273
------------------------------------------------------------


================Reducing node 50275, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50275
------------------------------------------------------------


================Reducing node 50245, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50245
------------------------------------------------------------


================Reducing node 50246, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50246
------------------------------------------------------------


================Reducing node 50279, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50279
------------------------------------------------------------


================Reducing node 50278, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50278
------------------------------------------------------------


================Reducing node 50276, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50276
------------------------------------------------------------


================Reducing node 50270, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50270
------------------------------------------------------------


================Reducing node 50264, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50264
------------------------------------------------------------


================Reducing node 50263, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50263
------------------------------------------------------------


================Reducing node 50261, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50261
------------------------------------------------------------


================Reducing node 50255, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50255
------------------------------------------------------------


================Reducing node 50254, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50254
------------------------------------------------------------


================Reducing node 50230, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50230
------------------------------------------------------------


================Reducing node 50228, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50228
------------------------------------------------------------


================Reducing node 50220, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50220
------------------------------------------------------------


================Reducing node 50218, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50218
------------------------------------------------------------


================Reducing node 50215, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50215
------------------------------------------------------------


================Reducing node 50280, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50280
------------------------------------------------------------


================Reducing node 50284, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50284
------------------------------------------------------------


======Fixpoint iteration 4. Reducer: subtree_replacer=======

The spar-tree is the following.
translationUnit {id=50211,slot_type=translationUnit}
|___(+) {id=50212,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50214,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50215,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50280,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50284,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50271,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50279,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50273,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50275,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50276,slot_type=LeftParen}
        |           |___Token:) {id=50278,slot_type=RightParen}
        |___compoundStatement {id=50217,slot_type=compoundStatement}
            |___Token:{ {id=50218,slot_type=LeftBrace}
            |___(?) {id=50219,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50222,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50226,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50229,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50230,slot_type=Return}
            |           |   |___(?) {id=50231,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50243,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50259,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50262,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50263,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50264,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=50270,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=50261,slot_type=RightParen}
            |           |           |___(*) {id=50245,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50246,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50255,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50254,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50228,slot_type=Semi}
            |___Token:} {id=50220,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    typedef;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    typedef;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    {}
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    {}
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    continue;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    continue;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    asm();
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    asm();
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    break                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    break                      ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    return                     ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 5. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50351,slot_type=translationUnit}
|___(+) {id=50352,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50354,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50355,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50420,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50424,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50411,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50419,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50413,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50415,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50416,slot_type=LeftParen}
        |           |___Token:) {id=50418,slot_type=RightParen}
        |___compoundStatement {id=50357,slot_type=compoundStatement}
            |___Token:{ {id=50358,slot_type=LeftBrace}
            |___(?) {id=50359,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50362,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50366,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50369,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50370,slot_type=Return}
            |           |   |___(?) {id=50371,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50383,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50399,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50402,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50403,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50404,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50410,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50401,slot_type=RightParen}
            |           |           |___(*) {id=50385,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50386,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50395,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50394,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50368,slot_type=Semi}
            |___Token:} {id=50360,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50352, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50352
------------------------------------------------------------


================Reducing node 50354, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50354
------------------------------------------------------------


================Reducing node 50357, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50357
------------------------------------------------------------


================Reducing node 50359, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50359
------------------------------------------------------------


================Reducing node 50362, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50362
------------------------------------------------------------


================Reducing node 50366, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50366
------------------------------------------------------------


================Reducing node 50369, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50369
------------------------------------------------------------


================Reducing node 50371, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50371
------------------------------------------------------------


================Reducing node 50383, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50383
------------------------------------------------------------


================Reducing node 50399, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50399
------------------------------------------------------------


================Reducing node 50411, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50411
------------------------------------------------------------


================Reducing node 50402, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50402
------------------------------------------------------------


================Reducing node 50413, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50413
------------------------------------------------------------


================Reducing node 50415, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50415
------------------------------------------------------------


================Reducing node 50385, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50385
------------------------------------------------------------


================Reducing node 50386, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50386
------------------------------------------------------------


================Reducing node 50419, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50419
------------------------------------------------------------


================Reducing node 50418, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50418
------------------------------------------------------------


================Reducing node 50416, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50416
------------------------------------------------------------


================Reducing node 50410, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50410
------------------------------------------------------------


================Reducing node 50404, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50404
------------------------------------------------------------


================Reducing node 50403, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50403
------------------------------------------------------------


================Reducing node 50401, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50401
------------------------------------------------------------


================Reducing node 50395, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50395
------------------------------------------------------------


================Reducing node 50394, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50394
------------------------------------------------------------


================Reducing node 50370, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50370
------------------------------------------------------------


================Reducing node 50368, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50368
------------------------------------------------------------


================Reducing node 50360, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50360
------------------------------------------------------------


================Reducing node 50358, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50358
------------------------------------------------------------


================Reducing node 50355, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50355
------------------------------------------------------------


================Reducing node 50420, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50420
------------------------------------------------------------


================Reducing node 50424, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50424
------------------------------------------------------------


======Fixpoint iteration 6. Reducer: subtree_replacer=======

The spar-tree is the following.
translationUnit {id=50351,slot_type=translationUnit}
|___(+) {id=50352,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50354,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50355,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50420,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50424,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50411,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50419,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50413,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50415,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50416,slot_type=LeftParen}
        |           |___Token:) {id=50418,slot_type=RightParen}
        |___compoundStatement {id=50357,slot_type=compoundStatement}
            |___Token:{ {id=50358,slot_type=LeftBrace}
            |___(?) {id=50359,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50362,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50366,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50369,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50370,slot_type=Return}
            |           |   |___(?) {id=50371,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50383,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50399,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50402,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50403,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50404,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50410,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50401,slot_type=RightParen}
            |           |           |___(*) {id=50385,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50386,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50395,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50394,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50368,slot_type=Semi}
            |___Token:} {id=50360,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 7. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50449,slot_type=translationUnit}
|___(+) {id=50450,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50452,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50453,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50518,slot_type=declarationSpecifiers}
        |       |___Token:int {id=50522,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=50509,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50517,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50511,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50513,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50514,slot_type=LeftParen}
        |           |___Token:) {id=50516,slot_type=RightParen}
        |___compoundStatement {id=50455,slot_type=compoundStatement}
            |___Token:{ {id=50456,slot_type=LeftBrace}
            |___(?) {id=50457,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50460,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50464,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50467,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50468,slot_type=Return}
            |           |   |___(?) {id=50469,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50481,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50497,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50500,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50501,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50502,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50508,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50499,slot_type=RightParen}
            |           |           |___(*) {id=50483,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50484,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50493,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50492,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50466,slot_type=Semi}
            |___Token:} {id=50458,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50450, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50450
------------------------------------------------------------


================Reducing node 50452, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50452
------------------------------------------------------------


================Reducing node 50455, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50455
------------------------------------------------------------


================Reducing node 50457, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50457
------------------------------------------------------------


================Reducing node 50460, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50460
------------------------------------------------------------


================Reducing node 50464, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50464
------------------------------------------------------------


================Reducing node 50467, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50467
------------------------------------------------------------


================Reducing node 50469, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50469
------------------------------------------------------------


================Reducing node 50481, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50481
------------------------------------------------------------


================Reducing node 50497, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50497
------------------------------------------------------------


================Reducing node 50509, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50509
------------------------------------------------------------


================Reducing node 50500, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50500
------------------------------------------------------------


================Reducing node 50511, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50511
------------------------------------------------------------


================Reducing node 50513, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50513
------------------------------------------------------------


================Reducing node 50483, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50483
------------------------------------------------------------


================Reducing node 50484, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50484
------------------------------------------------------------


================Reducing node 50517, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50517
------------------------------------------------------------


================Reducing node 50516, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50516
------------------------------------------------------------


================Reducing node 50514, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50514
------------------------------------------------------------


================Reducing node 50508, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50508
------------------------------------------------------------


================Reducing node 50502, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50502
------------------------------------------------------------


================Reducing node 50501, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50501
------------------------------------------------------------


================Reducing node 50499, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50499
------------------------------------------------------------


================Reducing node 50493, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50493
------------------------------------------------------------


================Reducing node 50492, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50492
------------------------------------------------------------


================Reducing node 50468, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50468
------------------------------------------------------------


================Reducing node 50466, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50466
------------------------------------------------------------


================Reducing node 50458, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50458
------------------------------------------------------------


================Reducing node 50456, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50456
------------------------------------------------------------


================Reducing node 50453, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50453
------------------------------------------------------------


================Reducing node 50518, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50518
------------------------------------------------------------


================Reducing node 50522, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50522
------------------------------------------------------------


======Fixpoint iteration 8. Reducer: subtree_replacer=======

The spar-tree is the following.
translationUnit {id=50449,slot_type=translationUnit}
|___(+) {id=50450,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50452,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50453,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50518,slot_type=declarationSpecifiers}
        |       |___Token:int {id=50522,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=50509,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50517,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50511,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50513,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50514,slot_type=LeftParen}
        |           |___Token:) {id=50516,slot_type=RightParen}
        |___compoundStatement {id=50455,slot_type=compoundStatement}
            |___Token:{ {id=50456,slot_type=LeftBrace}
            |___(?) {id=50457,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50460,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50464,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50467,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50468,slot_type=Return}
            |           |   |___(?) {id=50469,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50481,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50497,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50500,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50501,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50502,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50508,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50499,slot_type=RightParen}
            |           |           |___(*) {id=50483,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50484,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50493,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50492,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50466,slot_type=Semi}
            |___Token:} {id=50458,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    typedef;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    typedef;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    {}
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    {}
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    continue;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    continue;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    asm();
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    asm();
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    break                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    break                      ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    return                     ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 9. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50595,slot_type=translationUnit}
|___(+) {id=50596,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50598,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50599,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50666,slot_type=declarationSpecifiers}
        |       |___Token:int {id=50670,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=50657,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50665,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50659,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50661,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50662,slot_type=LeftParen}
        |           |___Token:) {id=50664,slot_type=RightParen}
        |___compoundStatement {id=50601,slot_type=compoundStatement}
            |___Token:{ {id=50602,slot_type=LeftBrace}
            |___(?) {id=50603,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50606,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50610,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50613,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50614,slot_type=Return}
            |           |   |___(?) {id=50615,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50627,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50643,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50646,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=50656,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=50648,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50655,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50645,slot_type=RightParen}
            |           |           |___(*) {id=50629,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50630,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50639,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50638,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50612,slot_type=Semi}
            |___Token:} {id=50604,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50596, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50596
------------------------------------------------------------


================Reducing node 50598, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50598
------------------------------------------------------------


================Reducing node 50601, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50601
------------------------------------------------------------


================Reducing node 50603, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50603
------------------------------------------------------------


================Reducing node 50606, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50606
------------------------------------------------------------


================Reducing node 50610, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50610
------------------------------------------------------------


================Reducing node 50613, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50613
------------------------------------------------------------


================Reducing node 50615, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50615
------------------------------------------------------------


================Reducing node 50627, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50627
------------------------------------------------------------


================Reducing node 50643, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50643
------------------------------------------------------------


================Reducing node 50657, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50657
------------------------------------------------------------


================Reducing node 50646, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50646
------------------------------------------------------------


================Reducing node 50659, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50659
------------------------------------------------------------


================Reducing node 50661, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50661
------------------------------------------------------------


================Reducing node 50629, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50629
------------------------------------------------------------


================Reducing node 50630, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50630
------------------------------------------------------------


================Reducing node 50665, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50665
------------------------------------------------------------


================Reducing node 50664, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50664
------------------------------------------------------------


================Reducing node 50662, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50662
------------------------------------------------------------


================Reducing node 50656, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50656
------------------------------------------------------------


================Reducing node 50655, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50655
------------------------------------------------------------


================Reducing node 50648, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50648
------------------------------------------------------------


================Reducing node 50645, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50645
------------------------------------------------------------


================Reducing node 50639, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50639
------------------------------------------------------------


================Reducing node 50638, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50638
------------------------------------------------------------


================Reducing node 50614, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50614
------------------------------------------------------------


================Reducing node 50612, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50612
------------------------------------------------------------


================Reducing node 50604, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50604
------------------------------------------------------------


================Reducing node 50602, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50602
------------------------------------------------------------


================Reducing node 50599, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50599
------------------------------------------------------------


================Reducing node 50666, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50666
------------------------------------------------------------


================Reducing node 50670, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50670
------------------------------------------------------------


======Fixpoint iteration 10. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=50595,slot_type=translationUnit}
|___(+) {id=50596,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50598,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50599,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50666,slot_type=declarationSpecifiers}
        |       |___Token:int {id=50670,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=50657,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50665,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50659,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50661,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50662,slot_type=LeftParen}
        |           |___Token:) {id=50664,slot_type=RightParen}
        |___compoundStatement {id=50601,slot_type=compoundStatement}
            |___Token:{ {id=50602,slot_type=LeftBrace}
            |___(?) {id=50603,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50606,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50610,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50613,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50614,slot_type=Return}
            |           |   |___(?) {id=50615,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50627,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50643,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50646,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=50656,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=50648,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50655,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50645,slot_type=RightParen}
            |           |           |___(*) {id=50629,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50630,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50639,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50638,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50612,slot_type=Semi}
            |___Token:} {id=50604,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 11. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50699,slot_type=translationUnit}
|___(+) {id=50700,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50702,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50703,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50770,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50774,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50761,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50769,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50763,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50765,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50766,slot_type=LeftParen}
        |           |___Token:) {id=50768,slot_type=RightParen}
        |___compoundStatement {id=50705,slot_type=compoundStatement}
            |___Token:{ {id=50706,slot_type=LeftBrace}
            |___(?) {id=50707,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50710,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50714,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50717,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50718,slot_type=Return}
            |           |   |___(?) {id=50719,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50731,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50747,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50750,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=50760,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=50752,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50759,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50749,slot_type=RightParen}
            |           |           |___(*) {id=50733,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50734,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50743,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50742,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50716,slot_type=Semi}
            |___Token:} {id=50708,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50700, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50700
------------------------------------------------------------


================Reducing node 50702, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50702
------------------------------------------------------------


================Reducing node 50705, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50705
------------------------------------------------------------


================Reducing node 50707, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50707
------------------------------------------------------------


================Reducing node 50710, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50710
------------------------------------------------------------


================Reducing node 50714, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50714
------------------------------------------------------------


================Reducing node 50717, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50717
------------------------------------------------------------


================Reducing node 50719, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50719
------------------------------------------------------------


================Reducing node 50731, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50731
------------------------------------------------------------


================Reducing node 50747, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50747
------------------------------------------------------------


================Reducing node 50761, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50761
------------------------------------------------------------


================Reducing node 50750, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50750
------------------------------------------------------------


================Reducing node 50763, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50763
------------------------------------------------------------


================Reducing node 50765, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50765
------------------------------------------------------------


================Reducing node 50733, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50733
------------------------------------------------------------


================Reducing node 50734, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50734
------------------------------------------------------------


================Reducing node 50769, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50769
------------------------------------------------------------


================Reducing node 50768, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50768
------------------------------------------------------------


================Reducing node 50766, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50766
------------------------------------------------------------


================Reducing node 50760, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50760
------------------------------------------------------------


================Reducing node 50759, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50759
------------------------------------------------------------


================Reducing node 50752, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50752
------------------------------------------------------------


================Reducing node 50749, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50749
------------------------------------------------------------


================Reducing node 50743, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50743
------------------------------------------------------------


================Reducing node 50742, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50742
------------------------------------------------------------


================Reducing node 50718, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50718
------------------------------------------------------------


================Reducing node 50716, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50716
------------------------------------------------------------


================Reducing node 50708, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50708
------------------------------------------------------------


================Reducing node 50706, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50706
------------------------------------------------------------


================Reducing node 50703, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50703
------------------------------------------------------------


================Reducing node 50770, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50770
------------------------------------------------------------


================Reducing node 50774, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50774
------------------------------------------------------------


======Fixpoint iteration 12. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=50699,slot_type=translationUnit}
|___(+) {id=50700,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50702,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50703,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50770,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50774,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50761,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50769,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50763,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50765,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50766,slot_type=LeftParen}
        |           |___Token:) {id=50768,slot_type=RightParen}
        |___compoundStatement {id=50705,slot_type=compoundStatement}
            |___Token:{ {id=50706,slot_type=LeftBrace}
            |___(?) {id=50707,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50710,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50714,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50717,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50718,slot_type=Return}
            |           |   |___(?) {id=50719,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50731,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50747,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50750,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=50760,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=50752,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50759,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50749,slot_type=RightParen}
            |           |           |___(*) {id=50733,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50734,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50743,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50742,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50716,slot_type=Semi}
            |___Token:} {id=50708,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 13. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50849,slot_type=translationUnit}
|___(+) {id=50850,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50852,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50853,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50920,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50924,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50911,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50919,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50913,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50915,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50916,slot_type=LeftParen}
        |           |___Token:) {id=50918,slot_type=RightParen}
        |___compoundStatement {id=50855,slot_type=compoundStatement}
            |___Token:{ {id=50856,slot_type=LeftBrace}
            |___(?) {id=50857,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50860,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50864,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50867,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50868,slot_type=Return}
            |           |   |___(?) {id=50869,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50881,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50897,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50900,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=50910,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=50902,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50909,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50899,slot_type=RightParen}
            |           |           |___(*) {id=50883,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50884,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50893,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50892,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50866,slot_type=Semi}
            |___Token:} {id=50858,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50850, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50850
------------------------------------------------------------


================Reducing node 50852, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50852
------------------------------------------------------------


================Reducing node 50855, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50855
------------------------------------------------------------


================Reducing node 50857, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50857
------------------------------------------------------------


================Reducing node 50860, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50860
------------------------------------------------------------


================Reducing node 50864, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50864
------------------------------------------------------------


================Reducing node 50867, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50867
------------------------------------------------------------


================Reducing node 50869, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50869
------------------------------------------------------------


================Reducing node 50881, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50881
------------------------------------------------------------


================Reducing node 50897, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50897
------------------------------------------------------------


================Reducing node 50911, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50911
------------------------------------------------------------


================Reducing node 50900, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50900
------------------------------------------------------------


================Reducing node 50913, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50913
------------------------------------------------------------


================Reducing node 50915, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50915
------------------------------------------------------------


================Reducing node 50883, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50883
------------------------------------------------------------


================Reducing node 50884, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50884
------------------------------------------------------------


================Reducing node 50919, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50919
------------------------------------------------------------


================Reducing node 50918, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50918
------------------------------------------------------------


================Reducing node 50916, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50916
------------------------------------------------------------


================Reducing node 50910, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50910
------------------------------------------------------------


================Reducing node 50909, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50909
------------------------------------------------------------


================Reducing node 50902, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50902
------------------------------------------------------------


================Reducing node 50899, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50899
------------------------------------------------------------


================Reducing node 50893, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50893
------------------------------------------------------------


================Reducing node 50892, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50892
------------------------------------------------------------


================Reducing node 50868, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50868
------------------------------------------------------------


================Reducing node 50866, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50866
------------------------------------------------------------


================Reducing node 50858, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50858
------------------------------------------------------------


================Reducing node 50856, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50856
------------------------------------------------------------


================Reducing node 50853, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50853
------------------------------------------------------------


================Reducing node 50920, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50920
------------------------------------------------------------


================Reducing node 50924, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50924
------------------------------------------------------------


======Fixpoint iteration 14. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=50849,slot_type=translationUnit}
|___(+) {id=50850,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50852,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50853,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50920,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50924,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50911,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50919,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50913,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50915,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50916,slot_type=LeftParen}
        |           |___Token:) {id=50918,slot_type=RightParen}
        |___compoundStatement {id=50855,slot_type=compoundStatement}
            |___Token:{ {id=50856,slot_type=LeftBrace}
            |___(?) {id=50857,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50860,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50864,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50867,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50868,slot_type=Return}
            |           |   |___(?) {id=50869,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50881,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50897,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50900,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=50910,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=50902,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50909,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50899,slot_type=RightParen}
            |           |           |___(*) {id=50883,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50884,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50893,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50892,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50866,slot_type=Semi}
            |___Token:} {id=50858,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 15. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50949,slot_type=translationUnit}
|___(+) {id=50950,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50952,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50953,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51020,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51024,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51011,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51019,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51013,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51015,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51016,slot_type=LeftParen}
        |           |___Token:) {id=51018,slot_type=RightParen}
        |___compoundStatement {id=50955,slot_type=compoundStatement}
            |___Token:{ {id=50956,slot_type=LeftBrace}
            |___(?) {id=50957,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50960,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50964,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50967,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50968,slot_type=Return}
            |           |   |___(?) {id=50969,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50981,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50997,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51000,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51010,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51002,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=51009,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50999,slot_type=RightParen}
            |           |           |___(*) {id=50983,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50984,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50993,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50992,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50966,slot_type=Semi}
            |___Token:} {id=50958,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50950, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50950
------------------------------------------------------------


================Reducing node 50952, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50952
------------------------------------------------------------


================Reducing node 50955, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50955
------------------------------------------------------------


================Reducing node 50957, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50957
------------------------------------------------------------


================Reducing node 50960, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50960
------------------------------------------------------------


================Reducing node 50964, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50964
------------------------------------------------------------


================Reducing node 50967, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50967
------------------------------------------------------------


================Reducing node 50969, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50969
------------------------------------------------------------


================Reducing node 50981, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50981
------------------------------------------------------------


================Reducing node 50997, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50997
------------------------------------------------------------


================Reducing node 51011, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51011
------------------------------------------------------------


================Reducing node 51000, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51000
------------------------------------------------------------


================Reducing node 51013, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51013
------------------------------------------------------------


================Reducing node 51015, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51015
------------------------------------------------------------


================Reducing node 50983, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50983
------------------------------------------------------------


================Reducing node 50984, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50984
------------------------------------------------------------


================Reducing node 51019, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51019
------------------------------------------------------------


================Reducing node 51018, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51018
------------------------------------------------------------


================Reducing node 51016, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51016
------------------------------------------------------------


================Reducing node 51010, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51010
------------------------------------------------------------


================Reducing node 51009, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51009
------------------------------------------------------------


================Reducing node 51002, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51002
------------------------------------------------------------


================Reducing node 50999, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50999
------------------------------------------------------------


================Reducing node 50993, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50993
------------------------------------------------------------


================Reducing node 50992, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50992
------------------------------------------------------------


================Reducing node 50968, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50968
------------------------------------------------------------


================Reducing node 50966, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50966
------------------------------------------------------------


================Reducing node 50958, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50958
------------------------------------------------------------


================Reducing node 50956, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50956
------------------------------------------------------------


================Reducing node 50953, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50953
------------------------------------------------------------


================Reducing node 51020, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51020
------------------------------------------------------------


================Reducing node 51024, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51024
------------------------------------------------------------


======Fixpoint iteration 16. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=50949,slot_type=translationUnit}
|___(+) {id=50950,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50952,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50953,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51020,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51024,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51011,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51019,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51013,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51015,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51016,slot_type=LeftParen}
        |           |___Token:) {id=51018,slot_type=RightParen}
        |___compoundStatement {id=50955,slot_type=compoundStatement}
            |___Token:{ {id=50956,slot_type=LeftBrace}
            |___(?) {id=50957,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50960,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50964,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50967,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50968,slot_type=Return}
            |           |   |___(?) {id=50969,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50981,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50997,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51000,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51010,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51002,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=51009,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50999,slot_type=RightParen}
            |           |           |___(*) {id=50983,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50984,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50993,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50992,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50966,slot_type=Semi}
            |___Token:} {id=50958,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(const)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(const)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 17. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51104,slot_type=translationUnit}
|___(+) {id=51105,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51107,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51108,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51175,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51179,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51166,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51174,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51168,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51170,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51171,slot_type=LeftParen}
        |           |___Token:) {id=51173,slot_type=RightParen}
        |___compoundStatement {id=51110,slot_type=compoundStatement}
            |___Token:{ {id=51111,slot_type=LeftBrace}
            |___(?) {id=51112,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51115,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51119,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51122,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51123,slot_type=Return}
            |           |   |___(?) {id=51124,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51136,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51152,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51155,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51165,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51157,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51164,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51154,slot_type=RightParen}
            |           |           |___(*) {id=51138,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51139,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51148,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51147,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51121,slot_type=Semi}
            |___Token:} {id=51113,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51105, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51105
------------------------------------------------------------


================Reducing node 51107, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51107
------------------------------------------------------------


================Reducing node 51110, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51110
------------------------------------------------------------


================Reducing node 51112, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51112
------------------------------------------------------------


================Reducing node 51115, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51115
------------------------------------------------------------


================Reducing node 51119, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51119
------------------------------------------------------------


================Reducing node 51122, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51122
------------------------------------------------------------


================Reducing node 51124, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51124
------------------------------------------------------------


================Reducing node 51136, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51136
------------------------------------------------------------


================Reducing node 51152, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51152
------------------------------------------------------------


================Reducing node 51166, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51166
------------------------------------------------------------


================Reducing node 51155, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51155
------------------------------------------------------------


================Reducing node 51168, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51168
------------------------------------------------------------


================Reducing node 51170, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51170
------------------------------------------------------------


================Reducing node 51138, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51138
------------------------------------------------------------


================Reducing node 51139, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51139
------------------------------------------------------------


================Reducing node 51174, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51174
------------------------------------------------------------


================Reducing node 51173, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51173
------------------------------------------------------------


================Reducing node 51171, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51171
------------------------------------------------------------


================Reducing node 51165, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51165
------------------------------------------------------------


================Reducing node 51164, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51164
------------------------------------------------------------


================Reducing node 51157, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51157
------------------------------------------------------------


================Reducing node 51154, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51154
------------------------------------------------------------


================Reducing node 51148, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51148
------------------------------------------------------------


================Reducing node 51147, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51147
------------------------------------------------------------


================Reducing node 51123, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51123
------------------------------------------------------------


================Reducing node 51121, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51121
------------------------------------------------------------


================Reducing node 51113, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51113
------------------------------------------------------------


================Reducing node 51111, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51111
------------------------------------------------------------


================Reducing node 51108, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51108
------------------------------------------------------------


================Reducing node 51175, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51175
------------------------------------------------------------


================Reducing node 51179, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51179
------------------------------------------------------------


======Fixpoint iteration 18. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51104,slot_type=translationUnit}
|___(+) {id=51105,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51107,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51108,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51175,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51179,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51166,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51174,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51168,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51170,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51171,slot_type=LeftParen}
        |           |___Token:) {id=51173,slot_type=RightParen}
        |___compoundStatement {id=51110,slot_type=compoundStatement}
            |___Token:{ {id=51111,slot_type=LeftBrace}
            |___(?) {id=51112,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51115,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51119,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51122,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51123,slot_type=Return}
            |           |   |___(?) {id=51124,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51136,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51152,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51155,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51165,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51157,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51164,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51154,slot_type=RightParen}
            |           |           |___(*) {id=51138,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51139,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51148,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51147,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51121,slot_type=Semi}
            |___Token:} {id=51113,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 19. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51208,slot_type=translationUnit}
|___(+) {id=51209,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51211,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51212,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51279,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51283,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51270,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51278,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51272,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51274,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51275,slot_type=LeftParen}
        |           |___Token:) {id=51277,slot_type=RightParen}
        |___compoundStatement {id=51214,slot_type=compoundStatement}
            |___Token:{ {id=51215,slot_type=LeftBrace}
            |___(?) {id=51216,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51219,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51223,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51226,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51227,slot_type=Return}
            |           |   |___(?) {id=51228,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51240,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51256,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51259,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51269,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51261,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51268,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51258,slot_type=RightParen}
            |           |           |___(*) {id=51242,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51243,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51252,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51251,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51225,slot_type=Semi}
            |___Token:} {id=51217,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51209, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51209
------------------------------------------------------------


================Reducing node 51211, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51211
------------------------------------------------------------


================Reducing node 51214, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51214
------------------------------------------------------------


================Reducing node 51216, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51216
------------------------------------------------------------


================Reducing node 51219, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51219
------------------------------------------------------------


================Reducing node 51223, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51223
------------------------------------------------------------


================Reducing node 51226, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51226
------------------------------------------------------------


================Reducing node 51228, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51228
------------------------------------------------------------


================Reducing node 51240, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51240
------------------------------------------------------------


================Reducing node 51256, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51256
------------------------------------------------------------


================Reducing node 51270, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51270
------------------------------------------------------------


================Reducing node 51259, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51259
------------------------------------------------------------


================Reducing node 51272, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51272
------------------------------------------------------------


================Reducing node 51274, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51274
------------------------------------------------------------


================Reducing node 51242, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51242
------------------------------------------------------------


================Reducing node 51243, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51243
------------------------------------------------------------


================Reducing node 51278, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51278
------------------------------------------------------------


================Reducing node 51277, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51277
------------------------------------------------------------


================Reducing node 51275, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51275
------------------------------------------------------------


================Reducing node 51269, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51269
------------------------------------------------------------


================Reducing node 51268, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51268
------------------------------------------------------------


================Reducing node 51261, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51261
------------------------------------------------------------


================Reducing node 51258, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51258
------------------------------------------------------------


================Reducing node 51252, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51252
------------------------------------------------------------


================Reducing node 51251, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51251
------------------------------------------------------------


================Reducing node 51227, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51227
------------------------------------------------------------


================Reducing node 51225, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51225
------------------------------------------------------------


================Reducing node 51217, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51217
------------------------------------------------------------


================Reducing node 51215, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51215
------------------------------------------------------------


================Reducing node 51212, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51212
------------------------------------------------------------


================Reducing node 51279, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51279
------------------------------------------------------------


================Reducing node 51283, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51283
------------------------------------------------------------


======Fixpoint iteration 20. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51208,slot_type=translationUnit}
|___(+) {id=51209,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51211,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51212,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51279,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51283,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51270,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51278,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51272,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51274,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51275,slot_type=LeftParen}
        |           |___Token:) {id=51277,slot_type=RightParen}
        |___compoundStatement {id=51214,slot_type=compoundStatement}
            |___Token:{ {id=51215,slot_type=LeftBrace}
            |___(?) {id=51216,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51219,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51223,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51226,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51227,slot_type=Return}
            |           |   |___(?) {id=51228,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51240,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51256,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51259,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51269,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51261,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51268,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51258,slot_type=RightParen}
            |           |           |___(*) {id=51242,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51243,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51252,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51251,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51225,slot_type=Semi}
            |___Token:} {id=51217,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 21. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51357,slot_type=translationUnit}
|___(+) {id=51358,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51360,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51361,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51428,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51432,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51419,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51427,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51421,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51423,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51424,slot_type=LeftParen}
        |           |___Token:) {id=51426,slot_type=RightParen}
        |___compoundStatement {id=51363,slot_type=compoundStatement}
            |___Token:{ {id=51364,slot_type=LeftBrace}
            |___(?) {id=51365,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51368,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51372,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51375,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51376,slot_type=Return}
            |           |   |___(?) {id=51377,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51389,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51405,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51408,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51418,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51410,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51417,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51407,slot_type=RightParen}
            |           |           |___(*) {id=51391,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51392,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51401,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51400,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51374,slot_type=Semi}
            |___Token:} {id=51366,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51358, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51358
------------------------------------------------------------


================Reducing node 51360, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51360
------------------------------------------------------------


================Reducing node 51363, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51363
------------------------------------------------------------


================Reducing node 51365, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51365
------------------------------------------------------------


================Reducing node 51368, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51368
------------------------------------------------------------


================Reducing node 51372, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51372
------------------------------------------------------------


================Reducing node 51375, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51375
------------------------------------------------------------


================Reducing node 51377, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51377
------------------------------------------------------------


================Reducing node 51389, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51389
------------------------------------------------------------


================Reducing node 51405, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51405
------------------------------------------------------------


================Reducing node 51419, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51419
------------------------------------------------------------


================Reducing node 51408, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51408
------------------------------------------------------------


================Reducing node 51421, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51421
------------------------------------------------------------


================Reducing node 51423, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51423
------------------------------------------------------------


================Reducing node 51391, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51391
------------------------------------------------------------


================Reducing node 51392, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51392
------------------------------------------------------------


================Reducing node 51427, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51427
------------------------------------------------------------


================Reducing node 51426, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51426
------------------------------------------------------------


================Reducing node 51424, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51424
------------------------------------------------------------


================Reducing node 51418, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51418
------------------------------------------------------------


================Reducing node 51417, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51417
------------------------------------------------------------


================Reducing node 51410, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51410
------------------------------------------------------------


================Reducing node 51407, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51407
------------------------------------------------------------


================Reducing node 51401, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51401
------------------------------------------------------------


================Reducing node 51400, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51400
------------------------------------------------------------


================Reducing node 51376, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51376
------------------------------------------------------------


================Reducing node 51374, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51374
------------------------------------------------------------


================Reducing node 51366, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51366
------------------------------------------------------------


================Reducing node 51364, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51364
------------------------------------------------------------


================Reducing node 51361, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51361
------------------------------------------------------------


================Reducing node 51428, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51428
------------------------------------------------------------


================Reducing node 51432, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51432
------------------------------------------------------------


======Fixpoint iteration 22. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51357,slot_type=translationUnit}
|___(+) {id=51358,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51360,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51361,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51428,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51432,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51419,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51427,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51421,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51423,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51424,slot_type=LeftParen}
        |           |___Token:) {id=51426,slot_type=RightParen}
        |___compoundStatement {id=51363,slot_type=compoundStatement}
            |___Token:{ {id=51364,slot_type=LeftBrace}
            |___(?) {id=51365,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51368,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51372,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51375,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51376,slot_type=Return}
            |           |   |___(?) {id=51377,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51389,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51405,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51408,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51418,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51410,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51417,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51407,slot_type=RightParen}
            |           |           |___(*) {id=51391,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51392,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51401,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51400,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51374,slot_type=Semi}
            |___Token:} {id=51366,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 23. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51457,slot_type=translationUnit}
|___(+) {id=51458,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51460,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51461,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51528,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51532,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51519,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51527,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51521,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51523,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51524,slot_type=LeftParen}
        |           |___Token:) {id=51526,slot_type=RightParen}
        |___compoundStatement {id=51463,slot_type=compoundStatement}
            |___Token:{ {id=51464,slot_type=LeftBrace}
            |___(?) {id=51465,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51468,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51472,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51475,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51476,slot_type=Return}
            |           |   |___(?) {id=51477,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51489,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51505,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51508,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51518,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51510,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51517,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51507,slot_type=RightParen}
            |           |           |___(*) {id=51491,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51492,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51501,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51500,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51474,slot_type=Semi}
            |___Token:} {id=51466,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51458, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51458
------------------------------------------------------------


================Reducing node 51460, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51460
------------------------------------------------------------


================Reducing node 51463, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51463
------------------------------------------------------------


================Reducing node 51465, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51465
------------------------------------------------------------


================Reducing node 51468, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51468
------------------------------------------------------------


================Reducing node 51472, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51472
------------------------------------------------------------


================Reducing node 51475, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51475
------------------------------------------------------------


================Reducing node 51477, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51477
------------------------------------------------------------


================Reducing node 51489, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51489
------------------------------------------------------------


================Reducing node 51505, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51505
------------------------------------------------------------


================Reducing node 51519, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51519
------------------------------------------------------------


================Reducing node 51508, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51508
------------------------------------------------------------


================Reducing node 51521, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51521
------------------------------------------------------------


================Reducing node 51523, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51523
------------------------------------------------------------


================Reducing node 51491, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51491
------------------------------------------------------------


================Reducing node 51492, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51492
------------------------------------------------------------


================Reducing node 51527, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51527
------------------------------------------------------------


================Reducing node 51526, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51526
------------------------------------------------------------


================Reducing node 51524, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51524
------------------------------------------------------------


================Reducing node 51518, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51518
------------------------------------------------------------


================Reducing node 51517, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51517
------------------------------------------------------------


================Reducing node 51510, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51510
------------------------------------------------------------


================Reducing node 51507, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51507
------------------------------------------------------------


================Reducing node 51501, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51501
------------------------------------------------------------


================Reducing node 51500, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51500
------------------------------------------------------------


================Reducing node 51476, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51476
------------------------------------------------------------


================Reducing node 51474, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51474
------------------------------------------------------------


================Reducing node 51466, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51466
------------------------------------------------------------


================Reducing node 51464, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51464
------------------------------------------------------------


================Reducing node 51461, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51461
------------------------------------------------------------


================Reducing node 51528, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51528
------------------------------------------------------------


================Reducing node 51532, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51532
------------------------------------------------------------


======Fixpoint iteration 24. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51457,slot_type=translationUnit}
|___(+) {id=51458,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51460,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51461,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51528,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51532,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51519,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51527,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51521,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51523,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51524,slot_type=LeftParen}
        |           |___Token:) {id=51526,slot_type=RightParen}
        |___compoundStatement {id=51463,slot_type=compoundStatement}
            |___Token:{ {id=51464,slot_type=LeftBrace}
            |___(?) {id=51465,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51468,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51472,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51475,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51476,slot_type=Return}
            |           |   |___(?) {id=51477,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51489,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51505,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51508,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51518,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51510,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51517,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51507,slot_type=RightParen}
            |           |           |___(*) {id=51491,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51492,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51501,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51500,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51474,slot_type=Semi}
            |___Token:} {id=51466,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (const)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (const)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 14
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 25. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51613,slot_type=translationUnit}
|___(+) {id=51614,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51616,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51617,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51684,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51688,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51675,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51683,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51677,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51679,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51680,slot_type=LeftParen}
        |           |___Token:) {id=51682,slot_type=RightParen}
        |___compoundStatement {id=51619,slot_type=compoundStatement}
            |___Token:{ {id=51620,slot_type=LeftBrace}
            |___(?) {id=51621,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51624,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51628,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51631,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51632,slot_type=Return}
            |           |   |___(?) {id=51633,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51645,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51661,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51664,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51674,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51666,slot_type=LeftParen}
            |           |           |   |   |___Token:short {id=51673,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |   |___Token:) {id=51663,slot_type=RightParen}
            |           |           |___(*) {id=51647,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51648,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51657,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51656,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51630,slot_type=Semi}
            |___Token:} {id=51622,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51614, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51614
------------------------------------------------------------


================Reducing node 51616, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51616
------------------------------------------------------------


================Reducing node 51619, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51619
------------------------------------------------------------


================Reducing node 51621, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51621
------------------------------------------------------------


================Reducing node 51624, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51624
------------------------------------------------------------


================Reducing node 51628, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51628
------------------------------------------------------------


================Reducing node 51631, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51631
------------------------------------------------------------


================Reducing node 51633, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51633
------------------------------------------------------------


================Reducing node 51645, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                    1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 14 -> 12
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 51645 from 14 to 12
------------------------------------------------------------


================Reducing node 51661, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51661
------------------------------------------------------------


================Reducing node 51675, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51675
------------------------------------------------------------


================Reducing node 51664, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51664
------------------------------------------------------------


================Reducing node 51677, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51677
------------------------------------------------------------


================Reducing node 51679, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51679
------------------------------------------------------------


================Reducing node 51683, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51683
------------------------------------------------------------


================Reducing node 51682, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51682
------------------------------------------------------------


================Reducing node 51680, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51680
------------------------------------------------------------


================Reducing node 51674, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51674
------------------------------------------------------------


================Reducing node 51673, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51673
------------------------------------------------------------


================Reducing node 51666, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51666
------------------------------------------------------------


================Reducing node 51663, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51663
------------------------------------------------------------


================Reducing node 51632, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51632
------------------------------------------------------------


================Reducing node 51630, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51630
------------------------------------------------------------


================Reducing node 51622, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51622
------------------------------------------------------------


================Reducing node 51620, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51620
------------------------------------------------------------


================Reducing node 51617, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51617
------------------------------------------------------------


================Reducing node 51684, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51684
------------------------------------------------------------


================Reducing node 51688, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51688
------------------------------------------------------------


======Fixpoint iteration 26. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51613,slot_type=translationUnit}
|___(+) {id=51614,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51616,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51617,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51684,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51688,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51675,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51683,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51677,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51679,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51680,slot_type=LeftParen}
        |           |___Token:) {id=51682,slot_type=RightParen}
        |___compoundStatement {id=51619,slot_type=compoundStatement}
            |___Token:{ {id=51620,slot_type=LeftBrace}
            |___(?) {id=51621,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51624,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51628,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51631,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51632,slot_type=Return}
            |           |   |___(?) {id=51633,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51661,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51664,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=51674,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=51666,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51673,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51663,slot_type=RightParen}
            |           |___Token:; {id=51630,slot_type=Semi}
            |___Token:} {id=51622,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 27. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51717,slot_type=translationUnit}
|___(+) {id=51718,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51720,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51721,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51777,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51781,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51768,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51776,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51770,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51772,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51773,slot_type=LeftParen}
        |           |___Token:) {id=51775,slot_type=RightParen}
        |___compoundStatement {id=51723,slot_type=compoundStatement}
            |___Token:{ {id=51724,slot_type=LeftBrace}
            |___(?) {id=51725,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51728,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51732,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51735,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51736,slot_type=Return}
            |           |   |___(?) {id=51737,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51754,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51757,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=51767,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=51759,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51766,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51756,slot_type=RightParen}
            |           |___Token:; {id=51734,slot_type=Semi}
            |___Token:} {id=51726,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51718, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51718
------------------------------------------------------------


================Reducing node 51720, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51720
------------------------------------------------------------


================Reducing node 51723, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51723
------------------------------------------------------------


================Reducing node 51725, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51725
------------------------------------------------------------


================Reducing node 51728, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51728
------------------------------------------------------------


================Reducing node 51732, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51732
------------------------------------------------------------


================Reducing node 51735, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51735
------------------------------------------------------------


================Reducing node 51737, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51737
------------------------------------------------------------


================Reducing node 51754, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51754
------------------------------------------------------------


================Reducing node 51768, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51768
------------------------------------------------------------


================Reducing node 51757, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51757
------------------------------------------------------------


================Reducing node 51770, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51770
------------------------------------------------------------


================Reducing node 51772, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51772
------------------------------------------------------------


================Reducing node 51776, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51776
------------------------------------------------------------


================Reducing node 51775, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51775
------------------------------------------------------------


================Reducing node 51773, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51773
------------------------------------------------------------


================Reducing node 51767, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51767
------------------------------------------------------------


================Reducing node 51766, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51766
------------------------------------------------------------


================Reducing node 51759, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51759
------------------------------------------------------------


================Reducing node 51756, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51756
------------------------------------------------------------


================Reducing node 51736, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51736
------------------------------------------------------------


================Reducing node 51734, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51734
------------------------------------------------------------


================Reducing node 51726, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51726
------------------------------------------------------------


================Reducing node 51724, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51724
------------------------------------------------------------


================Reducing node 51721, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51721
------------------------------------------------------------


================Reducing node 51777, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51777
------------------------------------------------------------


================Reducing node 51781, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51781
------------------------------------------------------------


======Fixpoint iteration 28. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51717,slot_type=translationUnit}
|___(+) {id=51718,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51720,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51721,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51777,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51781,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51768,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51776,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51770,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51772,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51773,slot_type=LeftParen}
        |           |___Token:) {id=51775,slot_type=RightParen}
        |___compoundStatement {id=51723,slot_type=compoundStatement}
            |___Token:{ {id=51724,slot_type=LeftBrace}
            |___(?) {id=51725,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51728,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51732,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51735,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51736,slot_type=Return}
            |           |   |___(?) {id=51737,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51754,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51757,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=51767,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=51759,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51766,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51756,slot_type=RightParen}
            |           |___Token:; {id=51734,slot_type=Semi}
            |___Token:} {id=51726,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return sizeof(void)        ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void)        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof(void    )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void    )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 29. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51852,slot_type=translationUnit}
|___(+) {id=51853,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51855,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51856,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51912,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51916,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51903,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51911,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51905,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51907,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51908,slot_type=LeftParen}
        |           |___Token:) {id=51910,slot_type=RightParen}
        |___compoundStatement {id=51858,slot_type=compoundStatement}
            |___Token:{ {id=51859,slot_type=LeftBrace}
            |___(?) {id=51860,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51863,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51867,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51870,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51871,slot_type=Return}
            |           |   |___(?) {id=51872,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51889,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51892,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=51902,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=51894,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51901,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51891,slot_type=RightParen}
            |           |___Token:; {id=51869,slot_type=Semi}
            |___Token:} {id=51861,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51853, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51853
------------------------------------------------------------


================Reducing node 51855, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51855
------------------------------------------------------------


================Reducing node 51858, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51858
------------------------------------------------------------


================Reducing node 51860, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51860
------------------------------------------------------------


================Reducing node 51863, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51863
------------------------------------------------------------


================Reducing node 51867, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51867
------------------------------------------------------------


================Reducing node 51870, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51870
------------------------------------------------------------


================Reducing node 51872, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51872
------------------------------------------------------------


================Reducing node 51889, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51889
------------------------------------------------------------


================Reducing node 51903, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51903
------------------------------------------------------------


================Reducing node 51892, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51892
------------------------------------------------------------


================Reducing node 51905, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51905
------------------------------------------------------------


================Reducing node 51907, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51907
------------------------------------------------------------


================Reducing node 51911, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51911
------------------------------------------------------------


================Reducing node 51910, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51910
------------------------------------------------------------


================Reducing node 51908, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51908
------------------------------------------------------------


================Reducing node 51902, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51902
------------------------------------------------------------


================Reducing node 51901, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51901
------------------------------------------------------------


================Reducing node 51894, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51894
------------------------------------------------------------


================Reducing node 51891, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51891
------------------------------------------------------------


================Reducing node 51871, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51871
------------------------------------------------------------


================Reducing node 51869, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51869
------------------------------------------------------------


================Reducing node 51861, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51861
------------------------------------------------------------


================Reducing node 51859, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51859
------------------------------------------------------------


================Reducing node 51856, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51856
------------------------------------------------------------


================Reducing node 51912, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51912
------------------------------------------------------------


================Reducing node 51916, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51916
------------------------------------------------------------


======Fixpoint iteration 30. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51852,slot_type=translationUnit}
|___(+) {id=51853,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51855,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51856,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51912,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51916,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51903,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51911,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51905,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51907,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51908,slot_type=LeftParen}
        |           |___Token:) {id=51910,slot_type=RightParen}
        |___compoundStatement {id=51858,slot_type=compoundStatement}
            |___Token:{ {id=51859,slot_type=LeftBrace}
            |___(?) {id=51860,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51863,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51867,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51870,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51871,slot_type=Return}
            |           |   |___(?) {id=51872,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51889,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51892,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=51902,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=51894,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51901,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51891,slot_type=RightParen}
            |           |___Token:; {id=51869,slot_type=Semi}
            |___Token:} {id=51861,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 31. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51941,slot_type=translationUnit}
|___(+) {id=51942,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51944,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51945,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52001,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52005,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51992,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52000,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51994,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51996,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51997,slot_type=LeftParen}
        |           |___Token:) {id=51999,slot_type=RightParen}
        |___compoundStatement {id=51947,slot_type=compoundStatement}
            |___Token:{ {id=51948,slot_type=LeftBrace}
            |___(?) {id=51949,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51952,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51956,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51959,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51960,slot_type=Return}
            |           |   |___(?) {id=51961,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51978,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51981,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=51991,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=51983,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51990,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51980,slot_type=RightParen}
            |           |___Token:; {id=51958,slot_type=Semi}
            |___Token:} {id=51950,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51942, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51942
------------------------------------------------------------


================Reducing node 51944, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51944
------------------------------------------------------------


================Reducing node 51947, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51947
------------------------------------------------------------


================Reducing node 51949, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51949
------------------------------------------------------------


================Reducing node 51952, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51952
------------------------------------------------------------


================Reducing node 51956, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51956
------------------------------------------------------------


================Reducing node 51959, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51959
------------------------------------------------------------


================Reducing node 51961, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51961
------------------------------------------------------------


================Reducing node 51978, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51978
------------------------------------------------------------


================Reducing node 51992, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51992
------------------------------------------------------------


================Reducing node 51981, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51981
------------------------------------------------------------


================Reducing node 51994, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51994
------------------------------------------------------------


================Reducing node 51996, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51996
------------------------------------------------------------


================Reducing node 52000, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52000
------------------------------------------------------------


================Reducing node 51999, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51999
------------------------------------------------------------


================Reducing node 51997, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51997
------------------------------------------------------------


================Reducing node 51991, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51991
------------------------------------------------------------


================Reducing node 51990, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51990
------------------------------------------------------------


================Reducing node 51983, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51983
------------------------------------------------------------


================Reducing node 51980, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51980
------------------------------------------------------------


================Reducing node 51960, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51960
------------------------------------------------------------


================Reducing node 51958, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51958
------------------------------------------------------------


================Reducing node 51950, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51950
------------------------------------------------------------


================Reducing node 51948, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51948
------------------------------------------------------------


================Reducing node 51945, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51945
------------------------------------------------------------


================Reducing node 52001, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52001
------------------------------------------------------------


================Reducing node 52005, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52005
------------------------------------------------------------


======Fixpoint iteration 32. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51941,slot_type=translationUnit}
|___(+) {id=51942,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51944,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51945,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52001,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52005,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51992,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52000,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51994,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51996,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51997,slot_type=LeftParen}
        |           |___Token:) {id=51999,slot_type=RightParen}
        |___compoundStatement {id=51947,slot_type=compoundStatement}
            |___Token:{ {id=51948,slot_type=LeftBrace}
            |___(?) {id=51949,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51952,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51956,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51959,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51960,slot_type=Return}
            |           |   |___(?) {id=51961,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51978,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51981,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=51991,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=51983,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51990,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51980,slot_type=RightParen}
            |           |___Token:; {id=51958,slot_type=Semi}
            |___Token:} {id=51950,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return sizeof(void)        ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void)        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof(void    )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void    )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(void )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(const)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(const)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(char )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 33. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52083,slot_type=translationUnit}
|___(+) {id=52084,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52086,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52087,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52143,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52147,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52134,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52142,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52136,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52138,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52139,slot_type=LeftParen}
        |           |___Token:) {id=52141,slot_type=RightParen}
        |___compoundStatement {id=52089,slot_type=compoundStatement}
            |___Token:{ {id=52090,slot_type=LeftBrace}
            |___(?) {id=52091,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52094,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52098,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52101,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52102,slot_type=Return}
            |           |   |___(?) {id=52103,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52120,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52123,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52133,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52125,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52132,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52122,slot_type=RightParen}
            |           |___Token:; {id=52100,slot_type=Semi}
            |___Token:} {id=52092,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52084, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52084
------------------------------------------------------------


================Reducing node 52086, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52086
------------------------------------------------------------


================Reducing node 52089, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52089
------------------------------------------------------------


================Reducing node 52091, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52091
------------------------------------------------------------


================Reducing node 52094, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52094
------------------------------------------------------------


================Reducing node 52098, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52098
------------------------------------------------------------


================Reducing node 52101, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52101
------------------------------------------------------------


================Reducing node 52103, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52103
------------------------------------------------------------


================Reducing node 52120, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52120
------------------------------------------------------------


================Reducing node 52134, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52134
------------------------------------------------------------


================Reducing node 52123, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52123
------------------------------------------------------------


================Reducing node 52136, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52136
------------------------------------------------------------


================Reducing node 52138, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52138
------------------------------------------------------------


================Reducing node 52142, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52142
------------------------------------------------------------


================Reducing node 52141, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52141
------------------------------------------------------------


================Reducing node 52139, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52139
------------------------------------------------------------


================Reducing node 52133, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52133
------------------------------------------------------------


================Reducing node 52132, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52132
------------------------------------------------------------


================Reducing node 52125, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52125
------------------------------------------------------------


================Reducing node 52122, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52122
------------------------------------------------------------


================Reducing node 52102, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52102
------------------------------------------------------------


================Reducing node 52100, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52100
------------------------------------------------------------


================Reducing node 52092, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52092
------------------------------------------------------------


================Reducing node 52090, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52090
------------------------------------------------------------


================Reducing node 52087, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52087
------------------------------------------------------------


================Reducing node 52143, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52143
------------------------------------------------------------


================Reducing node 52147, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52147
------------------------------------------------------------


======Fixpoint iteration 34. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52083,slot_type=translationUnit}
|___(+) {id=52084,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52086,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52087,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52143,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52147,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52134,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52142,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52136,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52138,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52139,slot_type=LeftParen}
        |           |___Token:) {id=52141,slot_type=RightParen}
        |___compoundStatement {id=52089,slot_type=compoundStatement}
            |___Token:{ {id=52090,slot_type=LeftBrace}
            |___(?) {id=52091,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52094,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52098,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52101,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52102,slot_type=Return}
            |           |   |___(?) {id=52103,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52120,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52123,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52133,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52125,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52132,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52122,slot_type=RightParen}
            |           |___Token:; {id=52100,slot_type=Semi}
            |___Token:} {id=52092,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 35. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52176,slot_type=translationUnit}
|___(+) {id=52177,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52179,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52180,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52236,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52240,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52227,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52235,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52229,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52231,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52232,slot_type=LeftParen}
        |           |___Token:) {id=52234,slot_type=RightParen}
        |___compoundStatement {id=52182,slot_type=compoundStatement}
            |___Token:{ {id=52183,slot_type=LeftBrace}
            |___(?) {id=52184,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52187,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52191,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52194,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52195,slot_type=Return}
            |           |   |___(?) {id=52196,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52213,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52216,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52226,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52218,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52225,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52215,slot_type=RightParen}
            |           |___Token:; {id=52193,slot_type=Semi}
            |___Token:} {id=52185,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52177, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52177
------------------------------------------------------------


================Reducing node 52179, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52179
------------------------------------------------------------


================Reducing node 52182, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52182
------------------------------------------------------------


================Reducing node 52184, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52184
------------------------------------------------------------


================Reducing node 52187, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52187
------------------------------------------------------------


================Reducing node 52191, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52191
------------------------------------------------------------


================Reducing node 52194, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52194
------------------------------------------------------------


================Reducing node 52196, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52196
------------------------------------------------------------


================Reducing node 52213, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52213
------------------------------------------------------------


================Reducing node 52227, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52227
------------------------------------------------------------


================Reducing node 52216, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52216
------------------------------------------------------------


================Reducing node 52229, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52229
------------------------------------------------------------


================Reducing node 52231, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52231
------------------------------------------------------------


================Reducing node 52235, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52235
------------------------------------------------------------


================Reducing node 52234, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52234
------------------------------------------------------------


================Reducing node 52232, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52232
------------------------------------------------------------


================Reducing node 52226, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52226
------------------------------------------------------------


================Reducing node 52225, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52225
------------------------------------------------------------


================Reducing node 52218, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52218
------------------------------------------------------------


================Reducing node 52215, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52215
------------------------------------------------------------


================Reducing node 52195, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52195
------------------------------------------------------------


================Reducing node 52193, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52193
------------------------------------------------------------


================Reducing node 52185, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52185
------------------------------------------------------------


================Reducing node 52183, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52183
------------------------------------------------------------


================Reducing node 52180, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52180
------------------------------------------------------------


================Reducing node 52236, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52236
------------------------------------------------------------


================Reducing node 52240, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52240
------------------------------------------------------------


======Fixpoint iteration 36. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52176,slot_type=translationUnit}
|___(+) {id=52177,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52179,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52180,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52236,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52240,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52227,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52235,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52229,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52231,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52232,slot_type=LeftParen}
        |           |___Token:) {id=52234,slot_type=RightParen}
        |___compoundStatement {id=52182,slot_type=compoundStatement}
            |___Token:{ {id=52183,slot_type=LeftBrace}
            |___(?) {id=52184,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52187,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52191,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52194,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52195,slot_type=Return}
            |           |   |___(?) {id=52196,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52213,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52216,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52226,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52218,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52225,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52215,slot_type=RightParen}
            |           |___Token:; {id=52193,slot_type=Semi}
            |___Token:} {id=52185,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 37. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52310,slot_type=translationUnit}
|___(+) {id=52311,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52313,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52314,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52370,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52374,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52361,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52369,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52363,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52365,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52366,slot_type=LeftParen}
        |           |___Token:) {id=52368,slot_type=RightParen}
        |___compoundStatement {id=52316,slot_type=compoundStatement}
            |___Token:{ {id=52317,slot_type=LeftBrace}
            |___(?) {id=52318,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52321,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52325,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52328,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52329,slot_type=Return}
            |           |   |___(?) {id=52330,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52347,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52350,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52360,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52352,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52359,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52349,slot_type=RightParen}
            |           |___Token:; {id=52327,slot_type=Semi}
            |___Token:} {id=52319,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52311, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52311
------------------------------------------------------------


================Reducing node 52313, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52313
------------------------------------------------------------


================Reducing node 52316, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52316
------------------------------------------------------------


================Reducing node 52318, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52318
------------------------------------------------------------


================Reducing node 52321, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52321
------------------------------------------------------------


================Reducing node 52325, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52325
------------------------------------------------------------


================Reducing node 52328, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52328
------------------------------------------------------------


================Reducing node 52330, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52330
------------------------------------------------------------


================Reducing node 52347, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52347
------------------------------------------------------------


================Reducing node 52361, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52361
------------------------------------------------------------


================Reducing node 52350, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52350
------------------------------------------------------------


================Reducing node 52363, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52363
------------------------------------------------------------


================Reducing node 52365, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52365
------------------------------------------------------------


================Reducing node 52369, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52369
------------------------------------------------------------


================Reducing node 52368, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52368
------------------------------------------------------------


================Reducing node 52366, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52366
------------------------------------------------------------


================Reducing node 52360, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52360
------------------------------------------------------------


================Reducing node 52359, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52359
------------------------------------------------------------


================Reducing node 52352, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52352
------------------------------------------------------------


================Reducing node 52349, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52349
------------------------------------------------------------


================Reducing node 52329, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52329
------------------------------------------------------------


================Reducing node 52327, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52327
------------------------------------------------------------


================Reducing node 52319, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52319
------------------------------------------------------------


================Reducing node 52317, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52317
------------------------------------------------------------


================Reducing node 52314, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52314
------------------------------------------------------------


================Reducing node 52370, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52370
------------------------------------------------------------


================Reducing node 52374, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52374
------------------------------------------------------------


======Fixpoint iteration 38. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52310,slot_type=translationUnit}
|___(+) {id=52311,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52313,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52314,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52370,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52374,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52361,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52369,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52363,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52365,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52366,slot_type=LeftParen}
        |           |___Token:) {id=52368,slot_type=RightParen}
        |___compoundStatement {id=52316,slot_type=compoundStatement}
            |___Token:{ {id=52317,slot_type=LeftBrace}
            |___(?) {id=52318,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52321,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52325,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52328,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52329,slot_type=Return}
            |           |   |___(?) {id=52330,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52347,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52350,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52360,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52352,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52359,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52349,slot_type=RightParen}
            |           |___Token:; {id=52327,slot_type=Semi}
            |___Token:} {id=52319,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 39. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52399,slot_type=translationUnit}
|___(+) {id=52400,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52402,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52403,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52459,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52463,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52450,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52458,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52452,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52454,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52455,slot_type=LeftParen}
        |           |___Token:) {id=52457,slot_type=RightParen}
        |___compoundStatement {id=52405,slot_type=compoundStatement}
            |___Token:{ {id=52406,slot_type=LeftBrace}
            |___(?) {id=52407,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52410,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52414,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52417,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52418,slot_type=Return}
            |           |   |___(?) {id=52419,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52436,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52439,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52449,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52441,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52448,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52438,slot_type=RightParen}
            |           |___Token:; {id=52416,slot_type=Semi}
            |___Token:} {id=52408,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52400, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52400
------------------------------------------------------------


================Reducing node 52402, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52402
------------------------------------------------------------


================Reducing node 52405, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52405
------------------------------------------------------------


================Reducing node 52407, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52407
------------------------------------------------------------


================Reducing node 52410, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52410
------------------------------------------------------------


================Reducing node 52414, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52414
------------------------------------------------------------


================Reducing node 52417, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52417
------------------------------------------------------------


================Reducing node 52419, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52419
------------------------------------------------------------


================Reducing node 52436, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52436
------------------------------------------------------------


================Reducing node 52450, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52450
------------------------------------------------------------


================Reducing node 52439, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52439
------------------------------------------------------------


================Reducing node 52452, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52452
------------------------------------------------------------


================Reducing node 52454, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52454
------------------------------------------------------------


================Reducing node 52458, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52458
------------------------------------------------------------


================Reducing node 52457, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52457
------------------------------------------------------------


================Reducing node 52455, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52455
------------------------------------------------------------


================Reducing node 52449, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52449
------------------------------------------------------------


================Reducing node 52448, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52448
------------------------------------------------------------


================Reducing node 52441, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52441
------------------------------------------------------------


================Reducing node 52438, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52438
------------------------------------------------------------


================Reducing node 52418, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52418
------------------------------------------------------------


================Reducing node 52416, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52416
------------------------------------------------------------


================Reducing node 52408, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52408
------------------------------------------------------------


================Reducing node 52406, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52406
------------------------------------------------------------


================Reducing node 52403, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52403
------------------------------------------------------------


================Reducing node 52459, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52459
------------------------------------------------------------


================Reducing node 52463, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52463
------------------------------------------------------------


======Fixpoint iteration 40. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52399,slot_type=translationUnit}
|___(+) {id=52400,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52402,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52403,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52459,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52463,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52450,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52458,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52452,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52454,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52455,slot_type=LeftParen}
        |           |___Token:) {id=52457,slot_type=RightParen}
        |___compoundStatement {id=52405,slot_type=compoundStatement}
            |___Token:{ {id=52406,slot_type=LeftBrace}
            |___(?) {id=52407,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52410,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52414,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52417,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52418,slot_type=Return}
            |           |   |___(?) {id=52419,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52436,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52439,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52449,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52441,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52448,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52438,slot_type=RightParen}
            |           |___Token:; {id=52416,slot_type=Semi}
            |___Token:} {id=52408,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (const)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (const)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (char )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 41. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52542,slot_type=translationUnit}
|___(+) {id=52543,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52545,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52546,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52602,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52606,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52593,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52601,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52595,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52597,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52598,slot_type=LeftParen}
        |           |___Token:) {id=52600,slot_type=RightParen}
        |___compoundStatement {id=52548,slot_type=compoundStatement}
            |___Token:{ {id=52549,slot_type=LeftBrace}
            |___(?) {id=52550,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52553,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52557,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52560,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52561,slot_type=Return}
            |           |   |___(?) {id=52562,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52579,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52582,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52592,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52584,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52591,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52581,slot_type=RightParen}
            |           |___Token:; {id=52559,slot_type=Semi}
            |___Token:} {id=52551,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52543, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52543
------------------------------------------------------------


================Reducing node 52545, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52545
------------------------------------------------------------


================Reducing node 52548, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52548
------------------------------------------------------------


================Reducing node 52550, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52550
------------------------------------------------------------


================Reducing node 52553, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52553
------------------------------------------------------------


================Reducing node 52557, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52557
------------------------------------------------------------


================Reducing node 52560, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52560
------------------------------------------------------------


================Reducing node 52562, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52562
------------------------------------------------------------


================Reducing node 52579, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52579
------------------------------------------------------------


================Reducing node 52593, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52593
------------------------------------------------------------


================Reducing node 52582, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52582
------------------------------------------------------------


================Reducing node 52595, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52595
------------------------------------------------------------


================Reducing node 52597, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52597
------------------------------------------------------------


================Reducing node 52601, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52601
------------------------------------------------------------


================Reducing node 52600, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52600
------------------------------------------------------------


================Reducing node 52598, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52598
------------------------------------------------------------


================Reducing node 52592, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52592
------------------------------------------------------------


================Reducing node 52591, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52591
------------------------------------------------------------


================Reducing node 52584, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52584
------------------------------------------------------------


================Reducing node 52581, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52581
------------------------------------------------------------


================Reducing node 52561, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52561
------------------------------------------------------------


================Reducing node 52559, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52559
------------------------------------------------------------


================Reducing node 52551, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52551
------------------------------------------------------------


================Reducing node 52549, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52549
------------------------------------------------------------


================Reducing node 52546, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52546
------------------------------------------------------------


================Reducing node 52602, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52602
------------------------------------------------------------


================Reducing node 52606, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52606
------------------------------------------------------------


======Fixpoint iteration 42. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52542,slot_type=translationUnit}
|___(+) {id=52543,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52545,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52546,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52602,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52606,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52593,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52601,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52595,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52597,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52598,slot_type=LeftParen}
        |           |___Token:) {id=52600,slot_type=RightParen}
        |___compoundStatement {id=52548,slot_type=compoundStatement}
            |___Token:{ {id=52549,slot_type=LeftBrace}
            |___(?) {id=52550,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52553,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52557,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52560,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52561,slot_type=Return}
            |           |   |___(?) {id=52562,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52579,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52582,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52592,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52584,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52591,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52581,slot_type=RightParen}
            |           |___Token:; {id=52559,slot_type=Semi}
            |___Token:} {id=52551,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 43. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52635,slot_type=translationUnit}
|___(+) {id=52636,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52638,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52639,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52695,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52699,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52686,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52694,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52688,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52690,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52691,slot_type=LeftParen}
        |           |___Token:) {id=52693,slot_type=RightParen}
        |___compoundStatement {id=52641,slot_type=compoundStatement}
            |___Token:{ {id=52642,slot_type=LeftBrace}
            |___(?) {id=52643,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52646,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52650,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52653,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52654,slot_type=Return}
            |           |   |___(?) {id=52655,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52672,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52675,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52685,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52677,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52684,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52674,slot_type=RightParen}
            |           |___Token:; {id=52652,slot_type=Semi}
            |___Token:} {id=52644,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52636, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52636
------------------------------------------------------------


================Reducing node 52638, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52638
------------------------------------------------------------


================Reducing node 52641, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52641
------------------------------------------------------------


================Reducing node 52643, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52643
------------------------------------------------------------


================Reducing node 52646, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52646
------------------------------------------------------------


================Reducing node 52650, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52650
------------------------------------------------------------


================Reducing node 52653, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52653
------------------------------------------------------------


================Reducing node 52655, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52655
------------------------------------------------------------


================Reducing node 52672, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52672
------------------------------------------------------------


================Reducing node 52686, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52686
------------------------------------------------------------


================Reducing node 52675, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52675
------------------------------------------------------------


================Reducing node 52688, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52688
------------------------------------------------------------


================Reducing node 52690, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52690
------------------------------------------------------------


================Reducing node 52694, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52694
------------------------------------------------------------


================Reducing node 52693, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52693
------------------------------------------------------------


================Reducing node 52691, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52691
------------------------------------------------------------


================Reducing node 52685, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52685
------------------------------------------------------------


================Reducing node 52684, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52684
------------------------------------------------------------


================Reducing node 52677, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52677
------------------------------------------------------------


================Reducing node 52674, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52674
------------------------------------------------------------


================Reducing node 52654, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52654
------------------------------------------------------------


================Reducing node 52652, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52652
------------------------------------------------------------


================Reducing node 52644, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52644
------------------------------------------------------------


================Reducing node 52642, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52642
------------------------------------------------------------


================Reducing node 52639, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52639
------------------------------------------------------------


================Reducing node 52695, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52695
------------------------------------------------------------


================Reducing node 52699, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52699
------------------------------------------------------------


======Fixpoint iteration 44. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52635,slot_type=translationUnit}
|___(+) {id=52636,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52638,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52639,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52695,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52699,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52686,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52694,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52688,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52690,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52691,slot_type=LeftParen}
        |           |___Token:) {id=52693,slot_type=RightParen}
        |___compoundStatement {id=52641,slot_type=compoundStatement}
            |___Token:{ {id=52642,slot_type=LeftBrace}
            |___(?) {id=52643,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52646,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52650,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52653,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52654,slot_type=Return}
            |           |   |___(?) {id=52655,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52672,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52675,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52685,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52677,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52684,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52674,slot_type=RightParen}
            |           |___Token:; {id=52652,slot_type=Semi}
            |___Token:} {id=52644,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 45. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52770,slot_type=translationUnit}
|___(+) {id=52771,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52773,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52774,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52830,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52834,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52821,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52829,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52823,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52825,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52826,slot_type=LeftParen}
        |           |___Token:) {id=52828,slot_type=RightParen}
        |___compoundStatement {id=52776,slot_type=compoundStatement}
            |___Token:{ {id=52777,slot_type=LeftBrace}
            |___(?) {id=52778,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52781,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52785,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52788,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52789,slot_type=Return}
            |           |   |___(?) {id=52790,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52807,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52810,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52820,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52812,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52819,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52809,slot_type=RightParen}
            |           |___Token:; {id=52787,slot_type=Semi}
            |___Token:} {id=52779,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52771, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52771
------------------------------------------------------------


================Reducing node 52773, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52773
------------------------------------------------------------


================Reducing node 52776, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52776
------------------------------------------------------------


================Reducing node 52778, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52778
------------------------------------------------------------


================Reducing node 52781, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52781
------------------------------------------------------------


================Reducing node 52785, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52785
------------------------------------------------------------


================Reducing node 52788, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52788
------------------------------------------------------------


================Reducing node 52790, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52790
------------------------------------------------------------


================Reducing node 52807, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52807
------------------------------------------------------------


================Reducing node 52821, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52821
------------------------------------------------------------


================Reducing node 52810, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52810
------------------------------------------------------------


================Reducing node 52823, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52823
------------------------------------------------------------


================Reducing node 52825, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52825
------------------------------------------------------------


================Reducing node 52829, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52829
------------------------------------------------------------


================Reducing node 52828, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52828
------------------------------------------------------------


================Reducing node 52826, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52826
------------------------------------------------------------


================Reducing node 52820, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52820
------------------------------------------------------------


================Reducing node 52819, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52819
------------------------------------------------------------


================Reducing node 52812, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52812
------------------------------------------------------------


================Reducing node 52809, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52809
------------------------------------------------------------


================Reducing node 52789, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52789
------------------------------------------------------------


================Reducing node 52787, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52787
------------------------------------------------------------


================Reducing node 52779, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52779
------------------------------------------------------------


================Reducing node 52777, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52777
------------------------------------------------------------


================Reducing node 52774, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52774
------------------------------------------------------------


================Reducing node 52830, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52830
------------------------------------------------------------


================Reducing node 52834, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52834
------------------------------------------------------------


======Fixpoint iteration 46. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52770,slot_type=translationUnit}
|___(+) {id=52771,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52773,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52774,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52830,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52834,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52821,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52829,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52823,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52825,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52826,slot_type=LeftParen}
        |           |___Token:) {id=52828,slot_type=RightParen}
        |___compoundStatement {id=52776,slot_type=compoundStatement}
            |___Token:{ {id=52777,slot_type=LeftBrace}
            |___(?) {id=52778,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52781,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52785,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52788,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52789,slot_type=Return}
            |           |   |___(?) {id=52790,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52807,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52810,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52820,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52812,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52819,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52809,slot_type=RightParen}
            |           |___Token:; {id=52787,slot_type=Semi}
            |___Token:} {id=52779,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 47. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52859,slot_type=translationUnit}
|___(+) {id=52860,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52862,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52863,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52919,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52923,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52910,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52918,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52912,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52914,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52915,slot_type=LeftParen}
        |           |___Token:) {id=52917,slot_type=RightParen}
        |___compoundStatement {id=52865,slot_type=compoundStatement}
            |___Token:{ {id=52866,slot_type=LeftBrace}
            |___(?) {id=52867,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52870,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52874,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52877,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52878,slot_type=Return}
            |           |   |___(?) {id=52879,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52896,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52899,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52909,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52901,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52908,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52898,slot_type=RightParen}
            |           |___Token:; {id=52876,slot_type=Semi}
            |___Token:} {id=52868,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52860, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52860
------------------------------------------------------------


================Reducing node 52862, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52862
------------------------------------------------------------


================Reducing node 52865, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52865
------------------------------------------------------------


================Reducing node 52867, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52867
------------------------------------------------------------


================Reducing node 52870, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52870
------------------------------------------------------------


================Reducing node 52874, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52874
------------------------------------------------------------


================Reducing node 52877, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52877
------------------------------------------------------------


================Reducing node 52879, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52879
------------------------------------------------------------


================Reducing node 52896, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52896
------------------------------------------------------------


================Reducing node 52910, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52910
------------------------------------------------------------


================Reducing node 52899, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52899
------------------------------------------------------------


================Reducing node 52912, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52912
------------------------------------------------------------


================Reducing node 52914, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52914
------------------------------------------------------------


================Reducing node 52918, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52918
------------------------------------------------------------


================Reducing node 52917, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52917
------------------------------------------------------------


================Reducing node 52915, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52915
------------------------------------------------------------


================Reducing node 52909, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52909
------------------------------------------------------------


================Reducing node 52908, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52908
------------------------------------------------------------


================Reducing node 52901, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52901
------------------------------------------------------------


================Reducing node 52898, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52898
------------------------------------------------------------


================Reducing node 52878, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52878
------------------------------------------------------------


================Reducing node 52876, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52876
------------------------------------------------------------


================Reducing node 52868, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52868
------------------------------------------------------------


================Reducing node 52866, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52866
------------------------------------------------------------


================Reducing node 52863, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52863
------------------------------------------------------------


================Reducing node 52919, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52919
------------------------------------------------------------


================Reducing node 52923, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52923
------------------------------------------------------------


======Fixpoint iteration 48. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52859,slot_type=translationUnit}
|___(+) {id=52860,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52862,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52863,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52919,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52923,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52910,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52918,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52912,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52914,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52915,slot_type=LeftParen}
        |           |___Token:) {id=52917,slot_type=RightParen}
        |___compoundStatement {id=52865,slot_type=compoundStatement}
            |___Token:{ {id=52866,slot_type=LeftBrace}
            |___(?) {id=52867,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52870,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52874,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52877,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52878,slot_type=Return}
            |           |   |___(?) {id=52879,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52896,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52899,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52909,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52901,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52908,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52898,slot_type=RightParen}
            |           |___Token:; {id=52876,slot_type=Semi}
            |___Token:} {id=52868,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 49. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53003,slot_type=translationUnit}
|___(+) {id=53004,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53006,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53007,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53063,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53067,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53054,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53062,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53056,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53058,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53059,slot_type=LeftParen}
        |           |___Token:) {id=53061,slot_type=RightParen}
        |___compoundStatement {id=53009,slot_type=compoundStatement}
            |___Token:{ {id=53010,slot_type=LeftBrace}
            |___(?) {id=53011,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53014,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53018,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53021,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53022,slot_type=Return}
            |           |   |___(?) {id=53023,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53040,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53043,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53053,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53045,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53052,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53042,slot_type=RightParen}
            |           |___Token:; {id=53020,slot_type=Semi}
            |___Token:} {id=53012,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53004, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53004
------------------------------------------------------------


================Reducing node 53006, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53006
------------------------------------------------------------


================Reducing node 53009, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53009
------------------------------------------------------------


================Reducing node 53011, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53011
------------------------------------------------------------


================Reducing node 53014, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53014
------------------------------------------------------------


================Reducing node 53018, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53018
------------------------------------------------------------


================Reducing node 53021, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53021
------------------------------------------------------------


================Reducing node 53023, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53023
------------------------------------------------------------


================Reducing node 53040, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53040
------------------------------------------------------------


================Reducing node 53054, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53054
------------------------------------------------------------


================Reducing node 53043, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53043
------------------------------------------------------------


================Reducing node 53056, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53056
------------------------------------------------------------


================Reducing node 53058, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53058
------------------------------------------------------------


================Reducing node 53062, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53062
------------------------------------------------------------


================Reducing node 53061, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53061
------------------------------------------------------------


================Reducing node 53059, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53059
------------------------------------------------------------


================Reducing node 53053, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53053
------------------------------------------------------------


================Reducing node 53052, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53052
------------------------------------------------------------


================Reducing node 53045, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53045
------------------------------------------------------------


================Reducing node 53042, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53042
------------------------------------------------------------


================Reducing node 53022, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53022
------------------------------------------------------------


================Reducing node 53020, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53020
------------------------------------------------------------


================Reducing node 53012, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53012
------------------------------------------------------------


================Reducing node 53010, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53010
------------------------------------------------------------


================Reducing node 53007, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53007
------------------------------------------------------------


================Reducing node 53063, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53063
------------------------------------------------------------


================Reducing node 53067, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53067
------------------------------------------------------------


======Fixpoint iteration 50. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53003,slot_type=translationUnit}
|___(+) {id=53004,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53006,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53007,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53063,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53067,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53054,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53062,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53056,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53058,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53059,slot_type=LeftParen}
        |           |___Token:) {id=53061,slot_type=RightParen}
        |___compoundStatement {id=53009,slot_type=compoundStatement}
            |___Token:{ {id=53010,slot_type=LeftBrace}
            |___(?) {id=53011,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53014,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53018,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53021,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53022,slot_type=Return}
            |           |   |___(?) {id=53023,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53040,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53043,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53053,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53045,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53052,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53042,slot_type=RightParen}
            |           |___Token:; {id=53020,slot_type=Semi}
            |___Token:} {id=53012,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 51. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53096,slot_type=translationUnit}
|___(+) {id=53097,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53099,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53100,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53156,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53160,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53147,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53155,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53149,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53151,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53152,slot_type=LeftParen}
        |           |___Token:) {id=53154,slot_type=RightParen}
        |___compoundStatement {id=53102,slot_type=compoundStatement}
            |___Token:{ {id=53103,slot_type=LeftBrace}
            |___(?) {id=53104,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53107,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53111,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53114,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53115,slot_type=Return}
            |           |   |___(?) {id=53116,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53133,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53136,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53146,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53138,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53145,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53135,slot_type=RightParen}
            |           |___Token:; {id=53113,slot_type=Semi}
            |___Token:} {id=53105,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53097, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53097
------------------------------------------------------------


================Reducing node 53099, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53099
------------------------------------------------------------


================Reducing node 53102, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53102
------------------------------------------------------------


================Reducing node 53104, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53104
------------------------------------------------------------


================Reducing node 53107, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53107
------------------------------------------------------------


================Reducing node 53111, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53111
------------------------------------------------------------


================Reducing node 53114, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53114
------------------------------------------------------------


================Reducing node 53116, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53116
------------------------------------------------------------


================Reducing node 53133, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53133
------------------------------------------------------------


================Reducing node 53147, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53147
------------------------------------------------------------


================Reducing node 53136, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53136
------------------------------------------------------------


================Reducing node 53149, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53149
------------------------------------------------------------


================Reducing node 53151, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53151
------------------------------------------------------------


================Reducing node 53155, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53155
------------------------------------------------------------


================Reducing node 53154, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53154
------------------------------------------------------------


================Reducing node 53152, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53152
------------------------------------------------------------


================Reducing node 53146, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53146
------------------------------------------------------------


================Reducing node 53145, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53145
------------------------------------------------------------


================Reducing node 53138, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53138
------------------------------------------------------------


================Reducing node 53135, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53135
------------------------------------------------------------


================Reducing node 53115, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53115
------------------------------------------------------------


================Reducing node 53113, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53113
------------------------------------------------------------


================Reducing node 53105, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53105
------------------------------------------------------------


================Reducing node 53103, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53103
------------------------------------------------------------


================Reducing node 53100, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53100
------------------------------------------------------------


================Reducing node 53156, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53156
------------------------------------------------------------


================Reducing node 53160, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53160
------------------------------------------------------------


======Fixpoint iteration 52. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53096,slot_type=translationUnit}
|___(+) {id=53097,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53099,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53100,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53156,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53160,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53147,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53155,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53149,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53151,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53152,slot_type=LeftParen}
        |           |___Token:) {id=53154,slot_type=RightParen}
        |___compoundStatement {id=53102,slot_type=compoundStatement}
            |___Token:{ {id=53103,slot_type=LeftBrace}
            |___(?) {id=53104,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53107,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53111,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53114,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53115,slot_type=Return}
            |           |   |___(?) {id=53116,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53133,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53136,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53146,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53138,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53145,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53135,slot_type=RightParen}
            |           |___Token:; {id=53113,slot_type=Semi}
            |___Token:} {id=53105,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 53. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53230,slot_type=translationUnit}
|___(+) {id=53231,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53233,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53234,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53290,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53294,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53281,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53289,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53283,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53285,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53286,slot_type=LeftParen}
        |           |___Token:) {id=53288,slot_type=RightParen}
        |___compoundStatement {id=53236,slot_type=compoundStatement}
            |___Token:{ {id=53237,slot_type=LeftBrace}
            |___(?) {id=53238,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53241,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53245,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53248,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53249,slot_type=Return}
            |           |   |___(?) {id=53250,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53267,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53270,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53280,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53272,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53279,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53269,slot_type=RightParen}
            |           |___Token:; {id=53247,slot_type=Semi}
            |___Token:} {id=53239,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53231, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53231
------------------------------------------------------------


================Reducing node 53233, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53233
------------------------------------------------------------


================Reducing node 53236, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53236
------------------------------------------------------------


================Reducing node 53238, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53238
------------------------------------------------------------


================Reducing node 53241, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53241
------------------------------------------------------------


================Reducing node 53245, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53245
------------------------------------------------------------


================Reducing node 53248, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53248
------------------------------------------------------------


================Reducing node 53250, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53250
------------------------------------------------------------


================Reducing node 53267, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53267
------------------------------------------------------------


================Reducing node 53281, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53281
------------------------------------------------------------


================Reducing node 53270, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53270
------------------------------------------------------------


================Reducing node 53283, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53283
------------------------------------------------------------


================Reducing node 53285, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53285
------------------------------------------------------------


================Reducing node 53289, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53289
------------------------------------------------------------


================Reducing node 53288, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53288
------------------------------------------------------------


================Reducing node 53286, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53286
------------------------------------------------------------


================Reducing node 53280, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53280
------------------------------------------------------------


================Reducing node 53279, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53279
------------------------------------------------------------


================Reducing node 53272, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53272
------------------------------------------------------------


================Reducing node 53269, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53269
------------------------------------------------------------


================Reducing node 53249, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53249
------------------------------------------------------------


================Reducing node 53247, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53247
------------------------------------------------------------


================Reducing node 53239, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53239
------------------------------------------------------------


================Reducing node 53237, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53237
------------------------------------------------------------


================Reducing node 53234, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53234
------------------------------------------------------------


================Reducing node 53290, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53290
------------------------------------------------------------


================Reducing node 53294, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53294
------------------------------------------------------------


======Fixpoint iteration 54. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53230,slot_type=translationUnit}
|___(+) {id=53231,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53233,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53234,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53290,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53294,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53281,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53289,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53283,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53285,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53286,slot_type=LeftParen}
        |           |___Token:) {id=53288,slot_type=RightParen}
        |___compoundStatement {id=53236,slot_type=compoundStatement}
            |___Token:{ {id=53237,slot_type=LeftBrace}
            |___(?) {id=53238,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53241,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53245,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53248,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53249,slot_type=Return}
            |           |   |___(?) {id=53250,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53267,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53270,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53280,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53272,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53279,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53269,slot_type=RightParen}
            |           |___Token:; {id=53247,slot_type=Semi}
            |___Token:} {id=53239,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 55. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53319,slot_type=translationUnit}
|___(+) {id=53320,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53322,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53323,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53379,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53383,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53370,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53378,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53372,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53374,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53375,slot_type=LeftParen}
        |           |___Token:) {id=53377,slot_type=RightParen}
        |___compoundStatement {id=53325,slot_type=compoundStatement}
            |___Token:{ {id=53326,slot_type=LeftBrace}
            |___(?) {id=53327,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53330,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53334,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53337,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53338,slot_type=Return}
            |           |   |___(?) {id=53339,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53356,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53359,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53369,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53361,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53368,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53358,slot_type=RightParen}
            |           |___Token:; {id=53336,slot_type=Semi}
            |___Token:} {id=53328,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53320, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53320
------------------------------------------------------------


================Reducing node 53322, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53322
------------------------------------------------------------


================Reducing node 53325, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53325
------------------------------------------------------------


================Reducing node 53327, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53327
------------------------------------------------------------


================Reducing node 53330, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53330
------------------------------------------------------------


================Reducing node 53334, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53334
------------------------------------------------------------


================Reducing node 53337, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53337
------------------------------------------------------------


================Reducing node 53339, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53339
------------------------------------------------------------


================Reducing node 53356, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53356
------------------------------------------------------------


================Reducing node 53370, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53370
------------------------------------------------------------


================Reducing node 53359, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53359
------------------------------------------------------------


================Reducing node 53372, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53372
------------------------------------------------------------


================Reducing node 53374, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53374
------------------------------------------------------------


================Reducing node 53378, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53378
------------------------------------------------------------


================Reducing node 53377, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53377
------------------------------------------------------------


================Reducing node 53375, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53375
------------------------------------------------------------


================Reducing node 53369, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53369
------------------------------------------------------------


================Reducing node 53368, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53368
------------------------------------------------------------


================Reducing node 53361, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53361
------------------------------------------------------------


================Reducing node 53358, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53358
------------------------------------------------------------


================Reducing node 53338, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53338
------------------------------------------------------------


================Reducing node 53336, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53336
------------------------------------------------------------


================Reducing node 53328, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53328
------------------------------------------------------------


================Reducing node 53326, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53326
------------------------------------------------------------


================Reducing node 53323, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53323
------------------------------------------------------------


================Reducing node 53379, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53379
------------------------------------------------------------


================Reducing node 53383, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53383
------------------------------------------------------------


======Fixpoint iteration 56. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53319,slot_type=translationUnit}
|___(+) {id=53320,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53322,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53323,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53379,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53383,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53370,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53378,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53372,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53374,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53375,slot_type=LeftParen}
        |           |___Token:) {id=53377,slot_type=RightParen}
        |___compoundStatement {id=53325,slot_type=compoundStatement}
            |___Token:{ {id=53326,slot_type=LeftBrace}
            |___(?) {id=53327,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53330,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53334,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53337,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53338,slot_type=Return}
            |           |   |___(?) {id=53339,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53356,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53359,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53369,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53361,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53368,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53358,slot_type=RightParen}
            |           |___Token:; {id=53336,slot_type=Semi}
            |___Token:} {id=53328,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 57. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53464,slot_type=translationUnit}
|___(+) {id=53465,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53467,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53468,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53524,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53528,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53515,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53523,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53517,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53519,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53520,slot_type=LeftParen}
        |           |___Token:) {id=53522,slot_type=RightParen}
        |___compoundStatement {id=53470,slot_type=compoundStatement}
            |___Token:{ {id=53471,slot_type=LeftBrace}
            |___(?) {id=53472,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53475,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53479,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53482,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53483,slot_type=Return}
            |           |   |___(?) {id=53484,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53501,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53504,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53514,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53506,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53513,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53503,slot_type=RightParen}
            |           |___Token:; {id=53481,slot_type=Semi}
            |___Token:} {id=53473,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53465, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53465
------------------------------------------------------------


================Reducing node 53467, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53467
------------------------------------------------------------


================Reducing node 53470, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53470
------------------------------------------------------------


================Reducing node 53472, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53472
------------------------------------------------------------


================Reducing node 53475, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53475
------------------------------------------------------------


================Reducing node 53479, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53479
------------------------------------------------------------


================Reducing node 53482, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53482
------------------------------------------------------------


================Reducing node 53484, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53484
------------------------------------------------------------


================Reducing node 53501, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53501
------------------------------------------------------------


================Reducing node 53515, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53515
------------------------------------------------------------


================Reducing node 53504, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53504
------------------------------------------------------------


================Reducing node 53517, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53517
------------------------------------------------------------


================Reducing node 53519, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53519
------------------------------------------------------------


================Reducing node 53523, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53523
------------------------------------------------------------


================Reducing node 53522, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53522
------------------------------------------------------------


================Reducing node 53520, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53520
------------------------------------------------------------


================Reducing node 53514, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53514
------------------------------------------------------------


================Reducing node 53513, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53513
------------------------------------------------------------


================Reducing node 53506, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53506
------------------------------------------------------------


================Reducing node 53503, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53503
------------------------------------------------------------


================Reducing node 53483, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53483
------------------------------------------------------------


================Reducing node 53481, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53481
------------------------------------------------------------


================Reducing node 53473, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53473
------------------------------------------------------------


================Reducing node 53471, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53471
------------------------------------------------------------


================Reducing node 53468, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53468
------------------------------------------------------------


================Reducing node 53524, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53524
------------------------------------------------------------


================Reducing node 53528, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53528
------------------------------------------------------------


======Fixpoint iteration 58. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53464,slot_type=translationUnit}
|___(+) {id=53465,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53467,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53468,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53524,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53528,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53515,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53523,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53517,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53519,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53520,slot_type=LeftParen}
        |           |___Token:) {id=53522,slot_type=RightParen}
        |___compoundStatement {id=53470,slot_type=compoundStatement}
            |___Token:{ {id=53471,slot_type=LeftBrace}
            |___(?) {id=53472,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53475,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53479,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53482,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53483,slot_type=Return}
            |           |   |___(?) {id=53484,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53501,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53504,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53514,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53506,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53513,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53503,slot_type=RightParen}
            |           |___Token:; {id=53481,slot_type=Semi}
            |___Token:} {id=53473,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 59. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53557,slot_type=translationUnit}
|___(+) {id=53558,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53560,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53561,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53617,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53621,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53608,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53616,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53610,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53612,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53613,slot_type=LeftParen}
        |           |___Token:) {id=53615,slot_type=RightParen}
        |___compoundStatement {id=53563,slot_type=compoundStatement}
            |___Token:{ {id=53564,slot_type=LeftBrace}
            |___(?) {id=53565,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53568,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53572,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53575,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53576,slot_type=Return}
            |           |   |___(?) {id=53577,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53594,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53597,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53607,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53599,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53606,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53596,slot_type=RightParen}
            |           |___Token:; {id=53574,slot_type=Semi}
            |___Token:} {id=53566,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53558, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53558
------------------------------------------------------------


================Reducing node 53560, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53560
------------------------------------------------------------


================Reducing node 53563, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53563
------------------------------------------------------------


================Reducing node 53565, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53565
------------------------------------------------------------


================Reducing node 53568, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53568
------------------------------------------------------------


================Reducing node 53572, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53572
------------------------------------------------------------


================Reducing node 53575, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53575
------------------------------------------------------------


================Reducing node 53577, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53577
------------------------------------------------------------


================Reducing node 53594, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53594
------------------------------------------------------------


================Reducing node 53608, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53608
------------------------------------------------------------


================Reducing node 53597, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53597
------------------------------------------------------------


================Reducing node 53610, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53610
------------------------------------------------------------


================Reducing node 53612, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53612
------------------------------------------------------------


================Reducing node 53616, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53616
------------------------------------------------------------


================Reducing node 53615, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53615
------------------------------------------------------------


================Reducing node 53613, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53613
------------------------------------------------------------


================Reducing node 53607, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53607
------------------------------------------------------------


================Reducing node 53606, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53606
------------------------------------------------------------


================Reducing node 53599, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53599
------------------------------------------------------------


================Reducing node 53596, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53596
------------------------------------------------------------


================Reducing node 53576, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53576
------------------------------------------------------------


================Reducing node 53574, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53574
------------------------------------------------------------


================Reducing node 53566, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53566
------------------------------------------------------------


================Reducing node 53564, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53564
------------------------------------------------------------


================Reducing node 53561, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53561
------------------------------------------------------------


================Reducing node 53617, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53617
------------------------------------------------------------


================Reducing node 53621, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53621
------------------------------------------------------------


======Fixpoint iteration 60. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53557,slot_type=translationUnit}
|___(+) {id=53558,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53560,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53561,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53617,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53621,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53608,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53616,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53610,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53612,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53613,slot_type=LeftParen}
        |           |___Token:) {id=53615,slot_type=RightParen}
        |___compoundStatement {id=53563,slot_type=compoundStatement}
            |___Token:{ {id=53564,slot_type=LeftBrace}
            |___(?) {id=53565,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53568,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53572,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53575,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53576,slot_type=Return}
            |           |   |___(?) {id=53577,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53594,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53597,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53607,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53599,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53606,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53596,slot_type=RightParen}
            |           |___Token:; {id=53574,slot_type=Semi}
            |___Token:} {id=53566,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 61. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53692,slot_type=translationUnit}
|___(+) {id=53693,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53695,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53696,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53752,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53756,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53743,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53751,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53745,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53747,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53748,slot_type=LeftParen}
        |           |___Token:) {id=53750,slot_type=RightParen}
        |___compoundStatement {id=53698,slot_type=compoundStatement}
            |___Token:{ {id=53699,slot_type=LeftBrace}
            |___(?) {id=53700,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53703,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53707,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53710,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53711,slot_type=Return}
            |           |   |___(?) {id=53712,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53729,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53732,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53742,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53734,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53741,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53731,slot_type=RightParen}
            |           |___Token:; {id=53709,slot_type=Semi}
            |___Token:} {id=53701,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53693, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53693
------------------------------------------------------------


================Reducing node 53695, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53695
------------------------------------------------------------


================Reducing node 53698, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53698
------------------------------------------------------------


================Reducing node 53700, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53700
------------------------------------------------------------


================Reducing node 53703, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53703
------------------------------------------------------------


================Reducing node 53707, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53707
------------------------------------------------------------


================Reducing node 53710, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53710
------------------------------------------------------------


================Reducing node 53712, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53712
------------------------------------------------------------


================Reducing node 53729, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53729
------------------------------------------------------------


================Reducing node 53743, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53743
------------------------------------------------------------


================Reducing node 53732, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53732
------------------------------------------------------------


================Reducing node 53745, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53745
------------------------------------------------------------


================Reducing node 53747, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53747
------------------------------------------------------------


================Reducing node 53751, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53751
------------------------------------------------------------


================Reducing node 53750, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53750
------------------------------------------------------------


================Reducing node 53748, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53748
------------------------------------------------------------


================Reducing node 53742, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53742
------------------------------------------------------------


================Reducing node 53741, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53741
------------------------------------------------------------


================Reducing node 53734, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53734
------------------------------------------------------------


================Reducing node 53731, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53731
------------------------------------------------------------


================Reducing node 53711, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53711
------------------------------------------------------------


================Reducing node 53709, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53709
------------------------------------------------------------


================Reducing node 53701, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53701
------------------------------------------------------------


================Reducing node 53699, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53699
------------------------------------------------------------


================Reducing node 53696, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53696
------------------------------------------------------------


================Reducing node 53752, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53752
------------------------------------------------------------


================Reducing node 53756, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53756
------------------------------------------------------------


======Fixpoint iteration 62. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53692,slot_type=translationUnit}
|___(+) {id=53693,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53695,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53696,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53752,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53756,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53743,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53751,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53745,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53747,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53748,slot_type=LeftParen}
        |           |___Token:) {id=53750,slot_type=RightParen}
        |___compoundStatement {id=53698,slot_type=compoundStatement}
            |___Token:{ {id=53699,slot_type=LeftBrace}
            |___(?) {id=53700,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53703,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53707,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53710,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53711,slot_type=Return}
            |           |   |___(?) {id=53712,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53729,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53732,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53742,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53734,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53741,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53731,slot_type=RightParen}
            |           |___Token:; {id=53709,slot_type=Semi}
            |___Token:} {id=53701,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 63. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53781,slot_type=translationUnit}
|___(+) {id=53782,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53784,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53785,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53841,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53845,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53832,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53840,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53834,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53836,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53837,slot_type=LeftParen}
        |           |___Token:) {id=53839,slot_type=RightParen}
        |___compoundStatement {id=53787,slot_type=compoundStatement}
            |___Token:{ {id=53788,slot_type=LeftBrace}
            |___(?) {id=53789,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53792,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53796,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53799,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53800,slot_type=Return}
            |           |   |___(?) {id=53801,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53818,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53821,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53831,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53823,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53830,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53820,slot_type=RightParen}
            |           |___Token:; {id=53798,slot_type=Semi}
            |___Token:} {id=53790,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53782, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53782
------------------------------------------------------------


================Reducing node 53784, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53784
------------------------------------------------------------


================Reducing node 53787, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53787
------------------------------------------------------------


================Reducing node 53789, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53789
------------------------------------------------------------


================Reducing node 53792, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53792
------------------------------------------------------------


================Reducing node 53796, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53796
------------------------------------------------------------


================Reducing node 53799, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53799
------------------------------------------------------------


================Reducing node 53801, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53801
------------------------------------------------------------


================Reducing node 53818, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53818
------------------------------------------------------------


================Reducing node 53832, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53832
------------------------------------------------------------


================Reducing node 53821, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53821
------------------------------------------------------------


================Reducing node 53834, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53834
------------------------------------------------------------


================Reducing node 53836, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53836
------------------------------------------------------------


================Reducing node 53840, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53840
------------------------------------------------------------


================Reducing node 53839, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53839
------------------------------------------------------------


================Reducing node 53837, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53837
------------------------------------------------------------


================Reducing node 53831, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53831
------------------------------------------------------------


================Reducing node 53830, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53830
------------------------------------------------------------


================Reducing node 53823, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53823
------------------------------------------------------------


================Reducing node 53820, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53820
------------------------------------------------------------


================Reducing node 53800, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53800
------------------------------------------------------------


================Reducing node 53798, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53798
------------------------------------------------------------


================Reducing node 53790, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53790
------------------------------------------------------------


================Reducing node 53788, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53788
------------------------------------------------------------


================Reducing node 53785, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53785
------------------------------------------------------------


================Reducing node 53841, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53841
------------------------------------------------------------


================Reducing node 53845, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53845
------------------------------------------------------------


======Fixpoint iteration 64. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53781,slot_type=translationUnit}
|___(+) {id=53782,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53784,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53785,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53841,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53845,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53832,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53840,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53834,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53836,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53837,slot_type=LeftParen}
        |           |___Token:) {id=53839,slot_type=RightParen}
        |___compoundStatement {id=53787,slot_type=compoundStatement}
            |___Token:{ {id=53788,slot_type=LeftBrace}
            |___(?) {id=53789,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53792,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53796,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53799,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53800,slot_type=Return}
            |           |   |___(?) {id=53801,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53818,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53821,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53831,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53823,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53830,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53820,slot_type=RightParen}
            |           |___Token:; {id=53798,slot_type=Semi}
            |___Token:} {id=53790,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 65. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53927,slot_type=translationUnit}
|___(+) {id=53928,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53930,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53931,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53987,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53991,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53978,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53986,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53980,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53982,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53983,slot_type=LeftParen}
        |           |___Token:) {id=53985,slot_type=RightParen}
        |___compoundStatement {id=53933,slot_type=compoundStatement}
            |___Token:{ {id=53934,slot_type=LeftBrace}
            |___(?) {id=53935,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53938,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53942,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53945,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53946,slot_type=Return}
            |           |   |___(?) {id=53947,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53964,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53967,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53977,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53969,slot_type=LeftParen}
            |           |           |   |___Token:signed {id=53976,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Signed]}
            |           |           |___Token:) {id=53966,slot_type=RightParen}
            |           |___Token:; {id=53944,slot_type=Semi}
            |___Token:} {id=53936,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53928, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53928
------------------------------------------------------------


================Reducing node 53930, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53930
------------------------------------------------------------


================Reducing node 53933, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53933
------------------------------------------------------------


================Reducing node 53935, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53935
------------------------------------------------------------


================Reducing node 53938, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53938
------------------------------------------------------------


================Reducing node 53942, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53942
------------------------------------------------------------


================Reducing node 53945, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53945
------------------------------------------------------------


================Reducing node 53947, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53947
------------------------------------------------------------


================Reducing node 53964, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53964
------------------------------------------------------------


================Reducing node 53978, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53978
------------------------------------------------------------


================Reducing node 53967, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53967
------------------------------------------------------------


================Reducing node 53980, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53980
------------------------------------------------------------


================Reducing node 53982, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53982
------------------------------------------------------------


================Reducing node 53986, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53986
------------------------------------------------------------


================Reducing node 53985, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53985
------------------------------------------------------------


================Reducing node 53983, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53983
------------------------------------------------------------


================Reducing node 53977, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53977
------------------------------------------------------------


================Reducing node 53976, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53976
------------------------------------------------------------


================Reducing node 53969, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53969
------------------------------------------------------------


================Reducing node 53966, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53966
------------------------------------------------------------


================Reducing node 53946, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53946
------------------------------------------------------------


================Reducing node 53944, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53944
------------------------------------------------------------


================Reducing node 53936, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53936
------------------------------------------------------------


================Reducing node 53934, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53934
------------------------------------------------------------


================Reducing node 53931, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53931
------------------------------------------------------------


================Reducing node 53987, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53987
------------------------------------------------------------


================Reducing node 53991, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53991
------------------------------------------------------------


======Fixpoint iteration 66. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53927,slot_type=translationUnit}
|___(+) {id=53928,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53930,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53931,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53987,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53991,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53978,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53986,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53980,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53982,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53983,slot_type=LeftParen}
        |           |___Token:) {id=53985,slot_type=RightParen}
        |___compoundStatement {id=53933,slot_type=compoundStatement}
            |___Token:{ {id=53934,slot_type=LeftBrace}
            |___(?) {id=53935,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53938,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53942,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53945,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53946,slot_type=Return}
            |           |   |___(?) {id=53947,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53964,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53967,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53977,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53969,slot_type=LeftParen}
            |           |           |   |___Token:signed {id=53976,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Signed]}
            |           |           |___Token:) {id=53966,slot_type=RightParen}
            |           |___Token:; {id=53944,slot_type=Semi}
            |___Token:} {id=53936,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 67. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54020,slot_type=translationUnit}
|___(+) {id=54021,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54023,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54024,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54080,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=54084,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=54071,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54079,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54073,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54075,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54076,slot_type=LeftParen}
        |           |___Token:) {id=54078,slot_type=RightParen}
        |___compoundStatement {id=54026,slot_type=compoundStatement}
            |___Token:{ {id=54027,slot_type=LeftBrace}
            |___(?) {id=54028,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54031,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54035,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54038,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54039,slot_type=Return}
            |           |   |___(?) {id=54040,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54057,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54060,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54070,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54062,slot_type=LeftParen}
            |           |           |   |___Token:signed {id=54069,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Signed]}
            |           |           |___Token:) {id=54059,slot_type=RightParen}
            |           |___Token:; {id=54037,slot_type=Semi}
            |___Token:} {id=54029,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54021, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54021
------------------------------------------------------------


================Reducing node 54023, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54023
------------------------------------------------------------


================Reducing node 54026, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54026
------------------------------------------------------------


================Reducing node 54028, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54028
------------------------------------------------------------


================Reducing node 54031, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54031
------------------------------------------------------------


================Reducing node 54035, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54035
------------------------------------------------------------


================Reducing node 54038, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54038
------------------------------------------------------------


================Reducing node 54040, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54040
------------------------------------------------------------


================Reducing node 54057, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54057
------------------------------------------------------------


================Reducing node 54071, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54071
------------------------------------------------------------


================Reducing node 54060, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54060
------------------------------------------------------------


================Reducing node 54073, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54073
------------------------------------------------------------


================Reducing node 54075, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54075
------------------------------------------------------------


================Reducing node 54079, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54079
------------------------------------------------------------


================Reducing node 54078, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54078
------------------------------------------------------------


================Reducing node 54076, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54076
------------------------------------------------------------


================Reducing node 54070, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54070
------------------------------------------------------------


================Reducing node 54069, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54069
------------------------------------------------------------


================Reducing node 54062, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54062
------------------------------------------------------------


================Reducing node 54059, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54059
------------------------------------------------------------


================Reducing node 54039, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54039
------------------------------------------------------------


================Reducing node 54037, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54037
------------------------------------------------------------


================Reducing node 54029, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54029
------------------------------------------------------------


================Reducing node 54027, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54027
------------------------------------------------------------


================Reducing node 54024, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54024
------------------------------------------------------------


================Reducing node 54080, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54080
------------------------------------------------------------


================Reducing node 54084, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54084
------------------------------------------------------------


======Fixpoint iteration 68. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54020,slot_type=translationUnit}
|___(+) {id=54021,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54023,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54024,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54080,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=54084,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=54071,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54079,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54073,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54075,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54076,slot_type=LeftParen}
        |           |___Token:) {id=54078,slot_type=RightParen}
        |___compoundStatement {id=54026,slot_type=compoundStatement}
            |___Token:{ {id=54027,slot_type=LeftBrace}
            |___(?) {id=54028,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54031,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54035,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54038,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54039,slot_type=Return}
            |           |   |___(?) {id=54040,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54057,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54060,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54070,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54062,slot_type=LeftParen}
            |           |           |   |___Token:signed {id=54069,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Signed]}
            |           |           |___Token:) {id=54059,slot_type=RightParen}
            |           |___Token:; {id=54037,slot_type=Semi}
            |___Token:} {id=54029,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return __alignof__(signed) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 69. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54154,slot_type=translationUnit}
|___(+) {id=54155,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54157,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54158,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54214,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=54218,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=54205,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54213,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54207,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54209,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54210,slot_type=LeftParen}
        |           |___Token:) {id=54212,slot_type=RightParen}
        |___compoundStatement {id=54160,slot_type=compoundStatement}
            |___Token:{ {id=54161,slot_type=LeftBrace}
            |___(?) {id=54162,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54165,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54169,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54172,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54173,slot_type=Return}
            |           |   |___(?) {id=54174,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54191,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54194,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=54204,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=54196,slot_type=LeftParen}
            |           |           |   |___Token:signed {id=54203,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Signed]}
            |           |           |___Token:) {id=54193,slot_type=RightParen}
            |           |___Token:; {id=54171,slot_type=Semi}
            |___Token:} {id=54163,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54155, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54155
------------------------------------------------------------


================Reducing node 54157, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54157
------------------------------------------------------------


================Reducing node 54160, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54160
------------------------------------------------------------


================Reducing node 54162, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54162
------------------------------------------------------------


================Reducing node 54165, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54165
------------------------------------------------------------


================Reducing node 54169, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54169
------------------------------------------------------------


================Reducing node 54172, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54172
------------------------------------------------------------


================Reducing node 54174, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54174
------------------------------------------------------------


================Reducing node 54191, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54191
------------------------------------------------------------


================Reducing node 54205, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54205
------------------------------------------------------------


================Reducing node 54194, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54194
------------------------------------------------------------


================Reducing node 54207, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54207
------------------------------------------------------------


================Reducing node 54209, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54209
------------------------------------------------------------


================Reducing node 54213, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54213
------------------------------------------------------------


================Reducing node 54212, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54212
------------------------------------------------------------


================Reducing node 54210, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54210
------------------------------------------------------------


================Reducing node 54204, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54204
------------------------------------------------------------


================Reducing node 54203, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54203
------------------------------------------------------------


================Reducing node 54196, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54196
------------------------------------------------------------


================Reducing node 54193, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54193
------------------------------------------------------------


================Reducing node 54173, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54173
------------------------------------------------------------


================Reducing node 54171, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54171
------------------------------------------------------------


================Reducing node 54163, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54163
------------------------------------------------------------


================Reducing node 54161, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54161
------------------------------------------------------------


================Reducing node 54158, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54158
------------------------------------------------------------


================Reducing node 54214, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54214
------------------------------------------------------------


================Reducing node 54218, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54218
------------------------------------------------------------


======Fixpoint iteration 70. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54154,slot_type=translationUnit}
|___(+) {id=54155,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54157,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54158,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54214,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=54218,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=54205,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54213,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54207,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54209,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54210,slot_type=LeftParen}
        |           |___Token:) {id=54212,slot_type=RightParen}
        |___compoundStatement {id=54160,slot_type=compoundStatement}
            |___Token:{ {id=54161,slot_type=LeftBrace}
            |___(?) {id=54162,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54165,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54169,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54172,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54173,slot_type=Return}
            |           |   |___(?) {id=54174,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54191,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54194,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=54204,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=54196,slot_type=LeftParen}
            |           |           |   |___Token:signed {id=54203,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Signed]}
            |           |           |___Token:) {id=54193,slot_type=RightParen}
            |           |___Token:; {id=54171,slot_type=Semi}
            |___Token:} {id=54163,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 71. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54243,slot_type=translationUnit}
|___(+) {id=54244,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54246,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54247,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54303,slot_type=declarationSpecifiers}
        |       |___Token:int {id=54307,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=54294,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54302,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54296,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54298,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54299,slot_type=LeftParen}
        |           |___Token:) {id=54301,slot_type=RightParen}
        |___compoundStatement {id=54249,slot_type=compoundStatement}
            |___Token:{ {id=54250,slot_type=LeftBrace}
            |___(?) {id=54251,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54254,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54258,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54261,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54262,slot_type=Return}
            |           |   |___(?) {id=54263,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54280,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54283,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=54293,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=54285,slot_type=LeftParen}
            |           |           |   |___Token:signed {id=54292,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Signed]}
            |           |           |___Token:) {id=54282,slot_type=RightParen}
            |           |___Token:; {id=54260,slot_type=Semi}
            |___Token:} {id=54252,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54244, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54244
------------------------------------------------------------


================Reducing node 54246, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54246
------------------------------------------------------------


================Reducing node 54249, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54249
------------------------------------------------------------


================Reducing node 54251, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54251
------------------------------------------------------------


================Reducing node 54254, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54254
------------------------------------------------------------


================Reducing node 54258, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54258
------------------------------------------------------------


================Reducing node 54261, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54261
------------------------------------------------------------


================Reducing node 54263, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54263
------------------------------------------------------------


================Reducing node 54280, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54280
------------------------------------------------------------


================Reducing node 54294, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54294
------------------------------------------------------------


================Reducing node 54283, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54283
------------------------------------------------------------


================Reducing node 54296, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54296
------------------------------------------------------------


================Reducing node 54298, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54298
------------------------------------------------------------


================Reducing node 54302, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54302
------------------------------------------------------------


================Reducing node 54301, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54301
------------------------------------------------------------


================Reducing node 54299, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54299
------------------------------------------------------------


================Reducing node 54293, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54293
------------------------------------------------------------


================Reducing node 54292, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54292
------------------------------------------------------------


================Reducing node 54285, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54285
------------------------------------------------------------


================Reducing node 54282, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54282
------------------------------------------------------------


================Reducing node 54262, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54262
------------------------------------------------------------


================Reducing node 54260, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54260
------------------------------------------------------------


================Reducing node 54252, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54252
------------------------------------------------------------


================Reducing node 54250, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54250
------------------------------------------------------------


================Reducing node 54247, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54247
------------------------------------------------------------


================Reducing node 54303, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54303
------------------------------------------------------------


================Reducing node 54307, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54307
------------------------------------------------------------


======Fixpoint iteration 72. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54243,slot_type=translationUnit}
|___(+) {id=54244,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54246,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54247,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54303,slot_type=declarationSpecifiers}
        |       |___Token:int {id=54307,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=54294,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54302,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54296,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54298,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54299,slot_type=LeftParen}
        |           |___Token:) {id=54301,slot_type=RightParen}
        |___compoundStatement {id=54249,slot_type=compoundStatement}
            |___Token:{ {id=54250,slot_type=LeftBrace}
            |___(?) {id=54251,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54254,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54258,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54261,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54262,slot_type=Return}
            |           |   |___(?) {id=54263,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54280,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54283,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=54293,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=54285,slot_type=LeftParen}
            |           |           |   |___Token:signed {id=54292,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Signed]}
            |           |           |___Token:) {id=54282,slot_type=RightParen}
            |           |___Token:; {id=54260,slot_type=Semi}
            |___Token:} {id=54252,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return _Alignof   (signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return _Alignof   (signed) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 73. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54390,slot_type=translationUnit}
|___(+) {id=54391,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54393,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54394,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54450,slot_type=declarationSpecifiers}
        |       |___Token:int {id=54454,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=54441,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54449,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54443,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54445,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54446,slot_type=LeftParen}
        |           |___Token:) {id=54448,slot_type=RightParen}
        |___compoundStatement {id=54396,slot_type=compoundStatement}
            |___Token:{ {id=54397,slot_type=LeftBrace}
            |___(?) {id=54398,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54401,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54405,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54408,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54409,slot_type=Return}
            |           |   |___(?) {id=54410,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54427,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54430,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=54440,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=54432,slot_type=LeftParen}
            |           |           |   |___Token:unsigned {id=54439,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Unsigned]}
            |           |           |___Token:) {id=54429,slot_type=RightParen}
            |           |___Token:; {id=54407,slot_type=Semi}
            |___Token:} {id=54399,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54391, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54391
------------------------------------------------------------


================Reducing node 54393, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                    ;
    --file: <formatted tokenized program in its original format>--
                                    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54393
------------------------------------------------------------


================Reducing node 54396, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54396
------------------------------------------------------------


================Reducing node 54398, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54398
------------------------------------------------------------


================Reducing node 54401, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54401
------------------------------------------------------------


================Reducing node 54405, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54405
------------------------------------------------------------


================Reducing node 54408, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54408
------------------------------------------------------------


================Reducing node 54410, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54410
------------------------------------------------------------


================Reducing node 54427, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54427
------------------------------------------------------------


================Reducing node 54441, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54441
------------------------------------------------------------


================Reducing node 54430, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54430
------------------------------------------------------------


================Reducing node 54443, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54443
------------------------------------------------------------


================Reducing node 54445, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54445
------------------------------------------------------------


================Reducing node 54449, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54449
------------------------------------------------------------


================Reducing node 54448, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54448
------------------------------------------------------------


================Reducing node 54446, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54446
------------------------------------------------------------


================Reducing node 54440, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54440
------------------------------------------------------------


================Reducing node 54439, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54439
------------------------------------------------------------


================Reducing node 54432, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54432
------------------------------------------------------------


================Reducing node 54429, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54429
------------------------------------------------------------


================Reducing node 54409, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54409
------------------------------------------------------------


================Reducing node 54407, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54407
------------------------------------------------------------


================Reducing node 54399, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54399
------------------------------------------------------------


================Reducing node 54397, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54397
------------------------------------------------------------


================Reducing node 54394, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54394
------------------------------------------------------------


================Reducing node 54450, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54450
------------------------------------------------------------


================Reducing node 54454, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54454
------------------------------------------------------------


======Fixpoint iteration 74. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54390,slot_type=translationUnit}
|___(+) {id=54391,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54393,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54394,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54450,slot_type=declarationSpecifiers}
        |       |___Token:int {id=54454,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=54441,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54449,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54443,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54445,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54446,slot_type=LeftParen}
        |           |___Token:) {id=54448,slot_type=RightParen}
        |___compoundStatement {id=54396,slot_type=compoundStatement}
            |___Token:{ {id=54397,slot_type=LeftBrace}
            |___(?) {id=54398,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54401,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54405,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54408,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54409,slot_type=Return}
            |           |   |___(?) {id=54410,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54427,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54430,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=54440,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=54432,slot_type=LeftParen}
            |           |           |   |___Token:unsigned {id=54439,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Unsigned]}
            |           |           |___Token:) {id=54429,slot_type=RightParen}
            |           |___Token:; {id=54407,slot_type=Semi}
            |___Token:} {id=54399,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 75. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54483,slot_type=translationUnit}
|___(+) {id=54484,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54486,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54487,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54543,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=54547,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=54534,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54542,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54536,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54538,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54539,slot_type=LeftParen}
        |           |___Token:) {id=54541,slot_type=RightParen}
        |___compoundStatement {id=54489,slot_type=compoundStatement}
            |___Token:{ {id=54490,slot_type=LeftBrace}
            |___(?) {id=54491,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54494,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54498,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54501,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54502,slot_type=Return}
            |           |   |___(?) {id=54503,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54520,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54523,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=54533,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=54525,slot_type=LeftParen}
            |           |           |   |___Token:unsigned {id=54532,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Unsigned]}
            |           |           |___Token:) {id=54522,slot_type=RightParen}
            |           |___Token:; {id=54500,slot_type=Semi}
            |___Token:} {id=54492,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54484, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54484
------------------------------------------------------------


================Reducing node 54486, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                    ;
    --file: <formatted tokenized program in its original format>--
                                    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54486
------------------------------------------------------------


================Reducing node 54489, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54489
------------------------------------------------------------


================Reducing node 54491, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54491
------------------------------------------------------------


================Reducing node 54494, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54494
------------------------------------------------------------


================Reducing node 54498, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54498
------------------------------------------------------------


================Reducing node 54501, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54501
------------------------------------------------------------


================Reducing node 54503, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54503
------------------------------------------------------------


================Reducing node 54520, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54520
------------------------------------------------------------


================Reducing node 54534, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54534
------------------------------------------------------------


================Reducing node 54523, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54523
------------------------------------------------------------


================Reducing node 54536, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54536
------------------------------------------------------------


================Reducing node 54538, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54538
------------------------------------------------------------


================Reducing node 54542, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54542
------------------------------------------------------------


================Reducing node 54541, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54541
------------------------------------------------------------


================Reducing node 54539, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54539
------------------------------------------------------------


================Reducing node 54533, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54533
------------------------------------------------------------


================Reducing node 54532, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54532
------------------------------------------------------------


================Reducing node 54525, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54525
------------------------------------------------------------


================Reducing node 54522, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54522
------------------------------------------------------------


================Reducing node 54502, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54502
------------------------------------------------------------


================Reducing node 54500, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54500
------------------------------------------------------------


================Reducing node 54492, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54492
------------------------------------------------------------


================Reducing node 54490, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54490
------------------------------------------------------------


================Reducing node 54487, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54487
------------------------------------------------------------


================Reducing node 54543, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54543
------------------------------------------------------------


================Reducing node 54547, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54547
------------------------------------------------------------


======Fixpoint iteration 76. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54483,slot_type=translationUnit}
|___(+) {id=54484,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54486,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54487,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54543,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=54547,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=54534,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54542,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54536,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54538,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54539,slot_type=LeftParen}
        |           |___Token:) {id=54541,slot_type=RightParen}
        |___compoundStatement {id=54489,slot_type=compoundStatement}
            |___Token:{ {id=54490,slot_type=LeftBrace}
            |___(?) {id=54491,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54494,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54498,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54501,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54502,slot_type=Return}
            |           |   |___(?) {id=54503,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54520,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54523,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=54533,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=54525,slot_type=LeftParen}
            |           |           |   |___Token:unsigned {id=54532,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Unsigned]}
            |           |           |___Token:) {id=54522,slot_type=RightParen}
            |           |___Token:; {id=54500,slot_type=Semi}
            |___Token:} {id=54492,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof   (unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof   (unsigned);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 77. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54618,slot_type=translationUnit}
|___(+) {id=54619,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54621,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54622,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54678,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=54682,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=54669,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54677,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54671,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54673,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54674,slot_type=LeftParen}
        |           |___Token:) {id=54676,slot_type=RightParen}
        |___compoundStatement {id=54624,slot_type=compoundStatement}
            |___Token:{ {id=54625,slot_type=LeftBrace}
            |___(?) {id=54626,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54629,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54633,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54636,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54637,slot_type=Return}
            |           |   |___(?) {id=54638,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54655,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54658,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54668,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54660,slot_type=LeftParen}
            |           |           |   |___Token:unsigned {id=54667,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Unsigned]}
            |           |           |___Token:) {id=54657,slot_type=RightParen}
            |           |___Token:; {id=54635,slot_type=Semi}
            |___Token:} {id=54627,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54619, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54619
------------------------------------------------------------


================Reducing node 54621, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                    ;
    --file: <formatted tokenized program in its original format>--
                                    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54621
------------------------------------------------------------


================Reducing node 54624, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54624
------------------------------------------------------------


================Reducing node 54626, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54626
------------------------------------------------------------


================Reducing node 54629, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54629
------------------------------------------------------------


================Reducing node 54633, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54633
------------------------------------------------------------


================Reducing node 54636, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54636
------------------------------------------------------------


================Reducing node 54638, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54638
------------------------------------------------------------


================Reducing node 54655, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54655
------------------------------------------------------------


================Reducing node 54669, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54669
------------------------------------------------------------


================Reducing node 54658, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54658
------------------------------------------------------------


================Reducing node 54671, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54671
------------------------------------------------------------


================Reducing node 54673, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54673
------------------------------------------------------------


================Reducing node 54677, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54677
------------------------------------------------------------


================Reducing node 54676, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54676
------------------------------------------------------------


================Reducing node 54674, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54674
------------------------------------------------------------


================Reducing node 54668, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54668
------------------------------------------------------------


================Reducing node 54667, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54667
------------------------------------------------------------


================Reducing node 54660, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54660
------------------------------------------------------------


================Reducing node 54657, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54657
------------------------------------------------------------


================Reducing node 54637, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54637
------------------------------------------------------------


================Reducing node 54635, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54635
------------------------------------------------------------


================Reducing node 54627, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54627
------------------------------------------------------------


================Reducing node 54625, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54625
------------------------------------------------------------


================Reducing node 54622, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54622
------------------------------------------------------------


================Reducing node 54678, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54678
------------------------------------------------------------


================Reducing node 54682, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54682
------------------------------------------------------------


======Fixpoint iteration 78. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54618,slot_type=translationUnit}
|___(+) {id=54619,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54621,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54622,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54678,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=54682,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=54669,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54677,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54671,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54673,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54674,slot_type=LeftParen}
        |           |___Token:) {id=54676,slot_type=RightParen}
        |___compoundStatement {id=54624,slot_type=compoundStatement}
            |___Token:{ {id=54625,slot_type=LeftBrace}
            |___(?) {id=54626,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54629,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54633,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54636,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54637,slot_type=Return}
            |           |   |___(?) {id=54638,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54655,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54658,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54668,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54660,slot_type=LeftParen}
            |           |           |   |___Token:unsigned {id=54667,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Unsigned]}
            |           |           |___Token:) {id=54657,slot_type=RightParen}
            |           |___Token:; {id=54635,slot_type=Semi}
            |___Token:} {id=54627,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 79. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54707,slot_type=translationUnit}
|___(+) {id=54708,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54710,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54711,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54767,slot_type=declarationSpecifiers}
        |       |___Token:int {id=54771,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=54758,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54766,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54760,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54762,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54763,slot_type=LeftParen}
        |           |___Token:) {id=54765,slot_type=RightParen}
        |___compoundStatement {id=54713,slot_type=compoundStatement}
            |___Token:{ {id=54714,slot_type=LeftBrace}
            |___(?) {id=54715,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54718,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54722,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54725,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54726,slot_type=Return}
            |           |   |___(?) {id=54727,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54744,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54747,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54757,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54749,slot_type=LeftParen}
            |           |           |   |___Token:unsigned {id=54756,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Unsigned]}
            |           |           |___Token:) {id=54746,slot_type=RightParen}
            |           |___Token:; {id=54724,slot_type=Semi}
            |___Token:} {id=54716,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54708, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54708
------------------------------------------------------------


================Reducing node 54710, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                    ;
    --file: <formatted tokenized program in its original format>--
                                    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54710
------------------------------------------------------------


================Reducing node 54713, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54713
------------------------------------------------------------


================Reducing node 54715, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54715
------------------------------------------------------------


================Reducing node 54718, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54718
------------------------------------------------------------


================Reducing node 54722, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54722
------------------------------------------------------------


================Reducing node 54725, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54725
------------------------------------------------------------


================Reducing node 54727, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54727
------------------------------------------------------------


================Reducing node 54744, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54744
------------------------------------------------------------


================Reducing node 54758, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54758
------------------------------------------------------------


================Reducing node 54747, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54747
------------------------------------------------------------


================Reducing node 54760, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54760
------------------------------------------------------------


================Reducing node 54762, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54762
------------------------------------------------------------


================Reducing node 54766, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54766
------------------------------------------------------------


================Reducing node 54765, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54765
------------------------------------------------------------


================Reducing node 54763, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54763
------------------------------------------------------------


================Reducing node 54757, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54757
------------------------------------------------------------


================Reducing node 54756, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54756
------------------------------------------------------------


================Reducing node 54749, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54749
------------------------------------------------------------


================Reducing node 54746, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54746
------------------------------------------------------------


================Reducing node 54726, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54726
------------------------------------------------------------


================Reducing node 54724, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54724
------------------------------------------------------------


================Reducing node 54716, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54716
------------------------------------------------------------


================Reducing node 54714, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54714
------------------------------------------------------------


================Reducing node 54711, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54711
------------------------------------------------------------


================Reducing node 54767, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54767
------------------------------------------------------------


================Reducing node 54771, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54771
------------------------------------------------------------


======Fixpoint iteration 80. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54707,slot_type=translationUnit}
|___(+) {id=54708,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54710,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54711,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54767,slot_type=declarationSpecifiers}
        |       |___Token:int {id=54771,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=54758,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54766,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54760,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54762,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54763,slot_type=LeftParen}
        |           |___Token:) {id=54765,slot_type=RightParen}
        |___compoundStatement {id=54713,slot_type=compoundStatement}
            |___Token:{ {id=54714,slot_type=LeftBrace}
            |___(?) {id=54715,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54718,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54722,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54725,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54726,slot_type=Return}
            |           |   |___(?) {id=54727,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54744,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54747,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54757,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54749,slot_type=LeftParen}
            |           |           |   |___Token:unsigned {id=54756,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Unsigned]}
            |           |           |___Token:) {id=54746,slot_type=RightParen}
            |           |___Token:; {id=54724,slot_type=Semi}
            |___Token:} {id=54716,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(unsigned);
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(unsigned);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(_Bool   );
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(_Bool   );
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 81. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54856,slot_type=translationUnit}
|___(+) {id=54857,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54859,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54860,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54916,slot_type=declarationSpecifiers}
        |       |___Token:int {id=54920,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=54907,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54915,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54909,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54911,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54912,slot_type=LeftParen}
        |           |___Token:) {id=54914,slot_type=RightParen}
        |___compoundStatement {id=54862,slot_type=compoundStatement}
            |___Token:{ {id=54863,slot_type=LeftBrace}
            |___(?) {id=54864,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54867,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54871,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54874,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54875,slot_type=Return}
            |           |   |___(?) {id=54876,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54893,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54896,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54906,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54898,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=54905,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=54895,slot_type=RightParen}
            |           |___Token:; {id=54873,slot_type=Semi}
            |___Token:} {id=54865,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54857, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54857
------------------------------------------------------------


================Reducing node 54859, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                    ;
    --file: <formatted tokenized program in its original format>--
                                    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54859
------------------------------------------------------------


================Reducing node 54862, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54862
------------------------------------------------------------


================Reducing node 54864, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54864
------------------------------------------------------------


================Reducing node 54867, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54867
------------------------------------------------------------


================Reducing node 54871, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54871
------------------------------------------------------------


================Reducing node 54874, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54874
------------------------------------------------------------


================Reducing node 54876, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54876
------------------------------------------------------------


================Reducing node 54893, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54893
------------------------------------------------------------


================Reducing node 54907, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54907
------------------------------------------------------------


================Reducing node 54896, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54896
------------------------------------------------------------


================Reducing node 54909, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54909
------------------------------------------------------------


================Reducing node 54911, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54911
------------------------------------------------------------


================Reducing node 54915, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54915
------------------------------------------------------------


================Reducing node 54914, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54914
------------------------------------------------------------


================Reducing node 54912, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54912
------------------------------------------------------------


================Reducing node 54906, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54906
------------------------------------------------------------


================Reducing node 54905, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54905
------------------------------------------------------------


================Reducing node 54898, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54898
------------------------------------------------------------


================Reducing node 54895, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54895
------------------------------------------------------------


================Reducing node 54875, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54875
------------------------------------------------------------


================Reducing node 54873, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54873
------------------------------------------------------------


================Reducing node 54865, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54865
------------------------------------------------------------


================Reducing node 54863, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54863
------------------------------------------------------------


================Reducing node 54860, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54860
------------------------------------------------------------


================Reducing node 54916, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54916
------------------------------------------------------------


================Reducing node 54920, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54920
------------------------------------------------------------


======Fixpoint iteration 82. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54856,slot_type=translationUnit}
|___(+) {id=54857,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54859,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54860,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=54916,slot_type=declarationSpecifiers}
        |       |___Token:int {id=54920,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=54907,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=54915,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=54909,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=54911,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=54912,slot_type=LeftParen}
        |           |___Token:) {id=54914,slot_type=RightParen}
        |___compoundStatement {id=54862,slot_type=compoundStatement}
            |___Token:{ {id=54863,slot_type=LeftBrace}
            |___(?) {id=54864,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54867,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54871,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54874,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54875,slot_type=Return}
            |           |   |___(?) {id=54876,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54893,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54896,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54906,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54898,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=54905,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=54895,slot_type=RightParen}
            |           |___Token:; {id=54873,slot_type=Semi}
            |___Token:} {id=54865,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 83. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=54949,slot_type=translationUnit}
|___(+) {id=54950,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54952,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54953,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=55009,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=55013,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=55000,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=55008,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=55002,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=55004,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=55005,slot_type=LeftParen}
        |           |___Token:) {id=55007,slot_type=RightParen}
        |___compoundStatement {id=54955,slot_type=compoundStatement}
            |___Token:{ {id=54956,slot_type=LeftBrace}
            |___(?) {id=54957,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54960,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54964,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54967,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54968,slot_type=Return}
            |           |   |___(?) {id=54969,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54986,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54989,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54999,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54991,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=54998,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=54988,slot_type=RightParen}
            |           |___Token:; {id=54966,slot_type=Semi}
            |___Token:} {id=54958,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 54950, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54950
------------------------------------------------------------


================Reducing node 54952, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                    ;
    --file: <formatted tokenized program in its original format>--
                                    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54952
------------------------------------------------------------


================Reducing node 54955, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54955
------------------------------------------------------------


================Reducing node 54957, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54957
------------------------------------------------------------


================Reducing node 54960, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54960
------------------------------------------------------------


================Reducing node 54964, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54964
------------------------------------------------------------


================Reducing node 54967, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54967
------------------------------------------------------------


================Reducing node 54969, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54969
------------------------------------------------------------


================Reducing node 54986, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54986
------------------------------------------------------------


================Reducing node 55000, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55000
------------------------------------------------------------


================Reducing node 54989, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54989
------------------------------------------------------------


================Reducing node 55002, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55002
------------------------------------------------------------


================Reducing node 55004, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55004
------------------------------------------------------------


================Reducing node 55008, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55008
------------------------------------------------------------


================Reducing node 55007, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55007
------------------------------------------------------------


================Reducing node 55005, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55005
------------------------------------------------------------


================Reducing node 54999, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54999
------------------------------------------------------------


================Reducing node 54998, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54998
------------------------------------------------------------


================Reducing node 54991, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54991
------------------------------------------------------------


================Reducing node 54988, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54988
------------------------------------------------------------


================Reducing node 54968, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54968
------------------------------------------------------------


================Reducing node 54966, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54966
------------------------------------------------------------


================Reducing node 54958, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54958
------------------------------------------------------------


================Reducing node 54956, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54956
------------------------------------------------------------


================Reducing node 54953, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54953
------------------------------------------------------------


================Reducing node 55009, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55009
------------------------------------------------------------


================Reducing node 55013, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55013
------------------------------------------------------------


======Fixpoint iteration 84. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=54949,slot_type=translationUnit}
|___(+) {id=54950,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=54952,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=54953,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=55009,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=55013,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=55000,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=55008,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=55002,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=55004,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=55005,slot_type=LeftParen}
        |           |___Token:) {id=55007,slot_type=RightParen}
        |___compoundStatement {id=54955,slot_type=compoundStatement}
            |___Token:{ {id=54956,slot_type=LeftBrace}
            |___(?) {id=54957,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=54960,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=54964,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=54967,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=54968,slot_type=Return}
            |           |   |___(?) {id=54969,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=54986,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=54989,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=54999,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=54991,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=54998,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=54988,slot_type=RightParen}
            |           |___Token:; {id=54966,slot_type=Semi}
            |___Token:} {id=54958,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return __alignof__(_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return __alignof__(_Complex);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 85. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=55083,slot_type=translationUnit}
|___(+) {id=55084,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=55086,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=55087,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=55143,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=55147,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=55134,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=55142,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=55136,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=55138,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=55139,slot_type=LeftParen}
        |           |___Token:) {id=55141,slot_type=RightParen}
        |___compoundStatement {id=55089,slot_type=compoundStatement}
            |___Token:{ {id=55090,slot_type=LeftBrace}
            |___(?) {id=55091,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=55094,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=55098,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=55101,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=55102,slot_type=Return}
            |           |   |___(?) {id=55103,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=55120,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=55123,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=55133,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=55125,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=55132,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=55122,slot_type=RightParen}
            |           |___Token:; {id=55100,slot_type=Semi}
            |___Token:} {id=55092,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 55084, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55084
------------------------------------------------------------


================Reducing node 55086, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                    ;
    --file: <formatted tokenized program in its original format>--
                                    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55086
------------------------------------------------------------


================Reducing node 55089, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55089
------------------------------------------------------------


================Reducing node 55091, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55091
------------------------------------------------------------


================Reducing node 55094, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55094
------------------------------------------------------------


================Reducing node 55098, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55098
------------------------------------------------------------


================Reducing node 55101, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55101
------------------------------------------------------------


================Reducing node 55103, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55103
------------------------------------------------------------


================Reducing node 55120, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55120
------------------------------------------------------------


================Reducing node 55134, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55134
------------------------------------------------------------


================Reducing node 55123, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55123
------------------------------------------------------------


================Reducing node 55136, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55136
------------------------------------------------------------


================Reducing node 55138, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55138
------------------------------------------------------------


================Reducing node 55142, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55142
------------------------------------------------------------


================Reducing node 55141, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55141
------------------------------------------------------------


================Reducing node 55139, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55139
------------------------------------------------------------


================Reducing node 55133, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55133
------------------------------------------------------------


================Reducing node 55132, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55132
------------------------------------------------------------


================Reducing node 55125, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55125
------------------------------------------------------------


================Reducing node 55122, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55122
------------------------------------------------------------


================Reducing node 55102, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55102
------------------------------------------------------------


================Reducing node 55100, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55100
------------------------------------------------------------


================Reducing node 55092, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55092
------------------------------------------------------------


================Reducing node 55090, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55090
------------------------------------------------------------


================Reducing node 55087, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55087
------------------------------------------------------------


================Reducing node 55143, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55143
------------------------------------------------------------


================Reducing node 55147, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55147
------------------------------------------------------------


======Fixpoint iteration 86. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=55083,slot_type=translationUnit}
|___(+) {id=55084,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=55086,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=55087,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=55143,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=55147,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=55134,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=55142,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=55136,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=55138,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=55139,slot_type=LeftParen}
        |           |___Token:) {id=55141,slot_type=RightParen}
        |___compoundStatement {id=55089,slot_type=compoundStatement}
            |___Token:{ {id=55090,slot_type=LeftBrace}
            |___(?) {id=55091,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=55094,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=55098,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=55101,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=55102,slot_type=Return}
            |           |   |___(?) {id=55103,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=55120,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=55123,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=55133,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=55125,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=55132,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=55122,slot_type=RightParen}
            |           |___Token:; {id=55100,slot_type=Semi}
            |___Token:} {id=55092,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 87. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=55172,slot_type=translationUnit}
|___(+) {id=55173,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=55175,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=55176,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=55232,slot_type=declarationSpecifiers}
        |       |___Token:int {id=55236,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=55223,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=55231,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=55225,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=55227,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=55228,slot_type=LeftParen}
        |           |___Token:) {id=55230,slot_type=RightParen}
        |___compoundStatement {id=55178,slot_type=compoundStatement}
            |___Token:{ {id=55179,slot_type=LeftBrace}
            |___(?) {id=55180,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=55183,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=55187,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=55190,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=55191,slot_type=Return}
            |           |   |___(?) {id=55192,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=55209,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=55212,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=55222,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=55214,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=55221,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=55211,slot_type=RightParen}
            |           |___Token:; {id=55189,slot_type=Semi}
            |___Token:} {id=55181,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 55173, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55173
------------------------------------------------------------


================Reducing node 55175, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                    ;
    --file: <formatted tokenized program in its original format>--
                                    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55175
------------------------------------------------------------


================Reducing node 55178, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55178
------------------------------------------------------------


================Reducing node 55180, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55180
------------------------------------------------------------


================Reducing node 55183, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55183
------------------------------------------------------------


================Reducing node 55187, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55187
------------------------------------------------------------


================Reducing node 55190, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55190
------------------------------------------------------------


================Reducing node 55192, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55192
------------------------------------------------------------


================Reducing node 55209, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55209
------------------------------------------------------------


================Reducing node 55223, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55223
------------------------------------------------------------


================Reducing node 55212, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55212
------------------------------------------------------------


================Reducing node 55225, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55225
------------------------------------------------------------


================Reducing node 55227, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55227
------------------------------------------------------------


================Reducing node 55231, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55231
------------------------------------------------------------


================Reducing node 55230, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55230
------------------------------------------------------------


================Reducing node 55228, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55228
------------------------------------------------------------


================Reducing node 55222, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55222
------------------------------------------------------------


================Reducing node 55221, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55221
------------------------------------------------------------


================Reducing node 55214, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55214
------------------------------------------------------------


================Reducing node 55211, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55211
------------------------------------------------------------


================Reducing node 55191, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55191
------------------------------------------------------------


================Reducing node 55189, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55189
------------------------------------------------------------


================Reducing node 55181, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55181
------------------------------------------------------------


================Reducing node 55179, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55179
------------------------------------------------------------


================Reducing node 55176, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55176
------------------------------------------------------------


================Reducing node 55232, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55232
------------------------------------------------------------


================Reducing node 55236, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55236
------------------------------------------------------------


======Fixpoint iteration 88. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=55172,slot_type=translationUnit}
|___(+) {id=55173,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=55175,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=55176,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=55232,slot_type=declarationSpecifiers}
        |       |___Token:int {id=55236,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=55223,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=55231,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=55225,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=55227,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=55228,slot_type=LeftParen}
        |           |___Token:) {id=55230,slot_type=RightParen}
        |___compoundStatement {id=55178,slot_type=compoundStatement}
            |___Token:{ {id=55179,slot_type=LeftBrace}
            |___(?) {id=55180,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=55183,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=55187,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=55190,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=55191,slot_type=Return}
            |           |   |___(?) {id=55192,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=55209,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=55212,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=55222,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=55214,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=55221,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=55211,slot_type=RightParen}
            |           |___Token:; {id=55189,slot_type=Semi}
            |___Token:} {id=55181,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return _Alignof   (_Complex);
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return _Alignof   (_Complex);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (_Bool   );
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (_Bool   );
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (__m128  );
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (__m128  );
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (__m128d );
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (__m128d );
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (__m128i );
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (__m128i );
    }
------------------------------------------------------------


The history of the reducer invocation.
[0]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 32
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[1]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[2]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 32
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[3]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[4]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 1
fileContentChangedWrtPrevious: true

[5]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[6]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 1
fileContentChangedWrtPrevious: false

[7]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[8]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 2
fileContentChangedWrtPrevious: true

[9]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[10]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 2
fileContentChangedWrtPrevious: false

[11]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[12]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 32
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 3
fileContentChangedWrtPrevious: true

[13]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[14]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 32
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 3
fileContentChangedWrtPrevious: false

[15]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[16]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 4
fileContentChangedWrtPrevious: true

[17]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[18]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 4
fileContentChangedWrtPrevious: false

[19]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[20]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 5
fileContentChangedWrtPrevious: true

[21]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[22]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 5
fileContentChangedWrtPrevious: false

[23]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[24]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 40
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 6
fileContentChangedWrtPrevious: true

[25]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[26]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 40
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 6
fileContentChangedWrtPrevious: false

[27]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[28]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 7
fileContentChangedWrtPrevious: true

[29]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[30]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 7
fileContentChangedWrtPrevious: false

[31]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[32]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 8
fileContentChangedWrtPrevious: true

[33]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[34]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 8
fileContentChangedWrtPrevious: false

[35]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[36]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 40
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 9
fileContentChangedWrtPrevious: true

[37]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[38]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 40
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 9
fileContentChangedWrtPrevious: false

[39]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[40]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 10
fileContentChangedWrtPrevious: true

[41]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[42]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 10
fileContentChangedWrtPrevious: false

[43]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[44]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 11
fileContentChangedWrtPrevious: true

[45]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[46]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 11
fileContentChangedWrtPrevious: false

[47]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[48]: StatsSnapshotEvent
---
stats:
  tokenCount: 14
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 12
fileContentChangedWrtPrevious: true

[49]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[50]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 33
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: true

[51]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[52]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 1
fileContentChangedWrtPrevious: true

[53]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[54]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 1
fileContentChangedWrtPrevious: false

[55]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[56]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 2
fileContentChangedWrtPrevious: true

[57]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[58]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 2
fileContentChangedWrtPrevious: false

[59]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[60]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 3
fileContentChangedWrtPrevious: true

[61]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[62]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 3
fileContentChangedWrtPrevious: false

[63]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[64]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 4
fileContentChangedWrtPrevious: true

[65]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[66]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 4
fileContentChangedWrtPrevious: false

[67]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[68]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 5
fileContentChangedWrtPrevious: true

[69]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[70]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 5
fileContentChangedWrtPrevious: false

[71]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[72]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 6
fileContentChangedWrtPrevious: true

[73]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[74]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 6
fileContentChangedWrtPrevious: false

[75]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[76]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 31
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 7
fileContentChangedWrtPrevious: true

[77]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[78]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 31
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 7
fileContentChangedWrtPrevious: false

[79]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[80]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 32
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 8
fileContentChangedWrtPrevious: true

[81]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[82]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 32
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 8
fileContentChangedWrtPrevious: false

[83]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[84]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 9
fileContentChangedWrtPrevious: true

[85]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[86]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 9
fileContentChangedWrtPrevious: false

[87]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[88]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 38
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 10
fileContentChangedWrtPrevious: true

[89]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[90]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 38
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 10
fileContentChangedWrtPrevious: false

[91]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[92]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 11
fileContentChangedWrtPrevious: true

[93]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[94]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 35
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 11
fileContentChangedWrtPrevious: false

[95]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[96]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 12
fileContentChangedWrtPrevious: true

[97]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[98]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 12
fileContentChangedWrtPrevious: false

[99]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[100]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 13
fileContentChangedWrtPrevious: true

[101]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[102]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 13
fileContentChangedWrtPrevious: false

[103]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[104]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 14
fileContentChangedWrtPrevious: true

[105]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[106]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 14
fileContentChangedWrtPrevious: false

[107]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[108]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 33
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 15
fileContentChangedWrtPrevious: true

[109]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[110]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 33
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 15
fileContentChangedWrtPrevious: false

[111]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[112]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 16
fileContentChangedWrtPrevious: true

[113]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[114]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 16
fileContentChangedWrtPrevious: false

[115]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[116]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 17
fileContentChangedWrtPrevious: true

[117]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[118]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 17
fileContentChangedWrtPrevious: false

[119]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[120]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 40
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 18
fileContentChangedWrtPrevious: true

[121]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[122]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 40
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 18
fileContentChangedWrtPrevious: false

[123]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[124]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 19
fileContentChangedWrtPrevious: true

[125]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[126]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 19
fileContentChangedWrtPrevious: false

[127]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[128]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 20
fileContentChangedWrtPrevious: true

[129]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[130]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 20
fileContentChangedWrtPrevious: false

[131]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[132]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 40
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 21
fileContentChangedWrtPrevious: true

[133]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[134]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 40
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 21
fileContentChangedWrtPrevious: false

[135]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[136]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 22
fileContentChangedWrtPrevious: true

[137]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[138]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 37
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 22
fileContentChangedWrtPrevious: false

[139]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[140]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 23
fileContentChangedWrtPrevious: true

[141]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[142]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 34
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 23
fileContentChangedWrtPrevious: false

[143]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[144]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 24
fileContentChangedWrtPrevious: true

[145]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[146]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 24
fileContentChangedWrtPrevious: false

[147]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[148]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 25
fileContentChangedWrtPrevious: true

[149]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[150]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 25
fileContentChangedWrtPrevious: false

[151]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[152]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 42
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 26
fileContentChangedWrtPrevious: true

[153]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[154]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 42
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 26
fileContentChangedWrtPrevious: false

[155]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[156]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 27
fileContentChangedWrtPrevious: true

[157]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[158]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 27
fileContentChangedWrtPrevious: false

[159]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[160]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 28
fileContentChangedWrtPrevious: true

[161]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[162]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 28
fileContentChangedWrtPrevious: false

[163]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[164]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 42
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 29
fileContentChangedWrtPrevious: true

[165]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[166]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 42
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 29
fileContentChangedWrtPrevious: false

[167]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[168]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 30
fileContentChangedWrtPrevious: true

[169]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[170]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 39
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 30
fileContentChangedWrtPrevious: false

[171]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[172]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 31
fileContentChangedWrtPrevious: true

[173]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[174]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 31
fileContentChangedWrtPrevious: false

[175]: ReducerCallEvent
---
reducer:
  shortName: "subtree_replacer"
  description: "Randomly pick up a subtree, and replace it with another subtree of\
    \ the same type."
  deterministic: false
  reductionResultSizeTrend: "BEST_RESULT_SIZE_REMAIN"

[176]: StatsSnapshotEvent
---
stats:
  tokenCount: 12
  characterCount: 36
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 31
fileContentChangedWrtPrevious: false


=Fixpoint iteration 89. Reducer: spartree_root_replacement_reducer

The spar-tree is the following.
translationUnit {id=55172,slot_type=translationUnit}
|___(+) {id=55173,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=55175,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=55176,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=55232,slot_type=declarationSpecifiers}
        |       |___Token:int {id=55236,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=55223,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=55231,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=55225,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=55227,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=55228,slot_type=LeftParen}
        |           |___Token:) {id=55230,slot_type=RightParen}
        |___compoundStatement {id=55178,slot_type=compoundStatement}
            |___Token:{ {id=55179,slot_type=LeftBrace}
            |___(?) {id=55180,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=55183,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=55187,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=55190,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=55191,slot_type=Return}
            |           |   |___(?) {id=55192,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=55209,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=55212,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=55222,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=55214,slot_type=LeftParen}
            |           |           |   |___Token:_Complex {id=55221,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Complex]}
            |           |           |___Token:) {id=55211,slot_type=RightParen}
            |           |___Token:; {id=55189,slot_type=Semi}
            |___Token:} {id=55181,slot_type=RightBrace}
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


================The best program is updated.================

token count change 12 -> 12
------------------------------------------------------------


#test success = 44
#test failure = 1183
#test result cache hits = 0
#test execution cancelled = 0
#node edit action set cache hits = 0
#external test execution cache hits = 0
