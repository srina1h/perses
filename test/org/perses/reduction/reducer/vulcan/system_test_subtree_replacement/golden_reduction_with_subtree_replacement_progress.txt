=====================Reduction starts.======================

The initial program size is 14
The command line options are:
---
help: false
verbosityFlags:
  groupName: "Verbosity"
  verbosity: "INFO"
  listVerbosity: false
versionFlags:
  groupName: "Version"
  version: false
inputFlags:
  groupName: "Inputs"
  testScript: "r.sh"
  inputFile: "t.c"
  deps: []
  sourceFile: "t.c"
resultOutputFlags:
  groupName: "Outputs"
  outputDir: "result_subtree_replacement_reduction_golden_test_perses_node_priority_with_dfs_delta_t.c"
reductionControlFlags:
  groupName: "General Reduction Control"
  fixpoint: true
  numOfThreads: 1
  codeFormat: "ORIG_FORMAT"
  testScriptExecutionTimeoutInSeconds: 600
  testScriptExecutionKeepWaitingAfterTimeout: true
outputRefiningFlags:
  groupName: "Output Refining Control"
  callFormatter: false
  formatCmd: ""
  callCReduce: false
  creduceCmd: "creduce"
algorithmControlFlags:
  groupName: "Reduction Algorithm Control"
  reductionAlgorithm: "perses_node_priority_with_dfs_delta"
  listAllReductionAlgorithms: false
  rebuildParseTreeEachIteration: true
  enableTokenSlicer: false
  enableTreeSlicer: false
  enableLineSlicer: false
  defaultDeltaDebuggerTypeForKleene: "DFS"
  maxEditCountForRegularRuleNode: 100
  maxBfsDepthForRegularRuleNode: 5
  stopAtFirstCompatibleChildForRegularRuleNode: false
  enableTrec: false
cacheControlFlags:
  groupName: "Cache Control"
  queryCaching: "FALSE"
  nodeActionSetCaching: false
  queryCacheRefreshThreshold: 0
  enableLightweightRefreshing: true
  enablePassCache: false
  globalCacheFile: null
  pathToSaveUpdatedGlobalCache: null
profilingFlags:
  groupName: "Profiling"
  progressDumpFile: "progress_dump_subtree_replacement.txt"
  appendToProgressDumpFile: true
  statDumpFile: null
  profileQueryCacheTime: null
  profileQueryCacheTimeCSV: null
  profileQueryCacheMemory: null
  actionSetProfiler: null
  profileDeltaDebugger: null
experimentFlags:
  groupName: "Experiment Control"
  cacheType: "COMPACT_QUERY_CACHE"
  onDemandReducerClasses:
  - "org.perses.reduction.reducer.vulcan.SubTreeReplacementReducer"
languageControlFlags:
  groupName: "Language Control"
  languageName: ""
  listLangs: false
  designatedParserFacadeClassName: ""
  listParserFacades: false
  languageJarFiles: []
vulcanFlags:
  groupName: "Vulcan Reducer Control"
  enableVulcan: false
  nonDeletionIterationLimit: 20
  windowSize: 4
  vulcanFixpoint: false

Parser Facade: class org.perses.grammar.c.PnfCParserFacade
------------------------------------------------------------


The sanity check has been performed. The result is PassingSanityCheckResult
=Fixpoint iteration 1. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=1}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=4,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=5,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=70,slot_type=declarationSpecifiers}
        |       |___Token:int {id=74,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=61,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=69,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=63,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=65,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=66,slot_type=LeftParen}
        |           |___Token:) {id=68,slot_type=RightParen}
        |___compoundStatement {id=7,slot_type=compoundStatement}
            |___Token:{ {id=8,slot_type=LeftBrace}
            |___(?) {id=9,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=12,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=16,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=19,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=20,slot_type=Return}
            |           |   |___(?) {id=21,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=33,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=49,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=52,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=53,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=54,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=60,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51,slot_type=RightParen}
            |           |           |___(*) {id=35,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=36,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=45,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=44,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=18,slot_type=Semi}
            |___Token:} {id=10,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 4, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 4
------------------------------------------------------------


==================Reducing node 7, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 9, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int main() {
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 12, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int main() {
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 16, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main() {
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main() {
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 19, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main() {
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 21, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int main() {
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 33, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main() {
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main() {
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main() {
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 33
------------------------------------------------------------


=================Reducing node 49, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 49
------------------------------------------------------------


=================Reducing node 61, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main   {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int main   {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 61
------------------------------------------------------------


=================Reducing node 52, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52
------------------------------------------------------------


=================Reducing node 63, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int main   {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int main   {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 63
------------------------------------------------------------


=================Reducing node 65, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main   {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int main   {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 35, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int main() {
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 35
------------------------------------------------------------


=================Reducing node 36, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main() {
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 36
------------------------------------------------------------


=================Reducing node 69, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 69
------------------------------------------------------------


=================Reducing node 68, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 68
------------------------------------------------------------


=================Reducing node 66, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 66
------------------------------------------------------------


=================Reducing node 60, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 60
------------------------------------------------------------


=================Reducing node 54, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54
------------------------------------------------------------


=================Reducing node 53, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53
------------------------------------------------------------


=================Reducing node 51, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51
------------------------------------------------------------


=================Reducing node 45, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 45
------------------------------------------------------------


=================Reducing node 44, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 44
------------------------------------------------------------


=================Reducing node 20, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 18, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 10, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


==================Reducing node 8, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


==================Reducing node 5, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
        main() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
        main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


=================Reducing node 70, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
        main() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
        main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 70
------------------------------------------------------------


=================Reducing node 74, size=14==================

The current best program is the following

    --file: t.c--
    int main() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 74
------------------------------------------------------------


======Fixpoint iteration 2. Reducer: subtree_replacer=======

The spar-tree is the following.
translationUnit {id=1}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=4,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=5,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=70,slot_type=declarationSpecifiers}
        |       |___Token:int {id=74,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=61,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=69,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=63,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=65,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=66,slot_type=LeftParen}
        |           |___Token:) {id=68,slot_type=RightParen}
        |___compoundStatement {id=7,slot_type=compoundStatement}
            |___Token:{ {id=8,slot_type=LeftBrace}
            |___(?) {id=9,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=12,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=16,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=19,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=20,slot_type=Return}
            |           |   |___(?) {id=21,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=33,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=49,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=52,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=53,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=54,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=60,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51,slot_type=RightParen}
            |           |           |___(*) {id=35,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=36,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=45,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=44,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=18,slot_type=Semi}
            |___Token:} {id=10,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
        main{}
    --file: <formatted tokenized program in its original format>--
        main{}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedef;
    --file: <formatted tokenized program in its original format>--
    typedef;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    ;
    --file: <formatted tokenized program in its original format>--
    ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedef main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    typedef main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    automain() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    automain() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    voidmain() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    voidmain() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    const main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    charmain() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    charmain() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    short main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    longmain() {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    longmain() {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    float main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 3. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50210}
|___(+) {id=50211,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50213,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50214,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50279,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50283,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50270,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50278,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50272,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50274,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50275,slot_type=LeftParen}
        |           |___Token:) {id=50277,slot_type=RightParen}
        |___compoundStatement {id=50216,slot_type=compoundStatement}
            |___Token:{ {id=50217,slot_type=LeftBrace}
            |___(?) {id=50218,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50221,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50225,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50228,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50229,slot_type=Return}
            |           |   |___(?) {id=50230,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50242,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50258,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50261,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50262,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50263,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=50269,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=50260,slot_type=RightParen}
            |           |           |___(*) {id=50244,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50245,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50254,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50253,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50227,slot_type=Semi}
            |___Token:} {id=50219,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50211, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50211
------------------------------------------------------------


================Reducing node 50213, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50213
------------------------------------------------------------


================Reducing node 50216, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50216
------------------------------------------------------------


================Reducing node 50218, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50218
------------------------------------------------------------


================Reducing node 50221, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50221
------------------------------------------------------------


================Reducing node 50225, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50225
------------------------------------------------------------


================Reducing node 50228, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50228
------------------------------------------------------------


================Reducing node 50230, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50230
------------------------------------------------------------


================Reducing node 50242, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50242
------------------------------------------------------------


================Reducing node 50258, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50258
------------------------------------------------------------


================Reducing node 50270, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50270
------------------------------------------------------------


================Reducing node 50261, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50261
------------------------------------------------------------


================Reducing node 50272, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50272
------------------------------------------------------------


================Reducing node 50274, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50274
------------------------------------------------------------


================Reducing node 50244, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50244
------------------------------------------------------------


================Reducing node 50245, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return sizeof(char)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(char)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50245
------------------------------------------------------------


================Reducing node 50278, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50278
------------------------------------------------------------


================Reducing node 50277, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50277
------------------------------------------------------------


================Reducing node 50275, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50275
------------------------------------------------------------


================Reducing node 50269, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50269
------------------------------------------------------------


================Reducing node 50263, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50263
------------------------------------------------------------


================Reducing node 50262, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50262
------------------------------------------------------------


================Reducing node 50260, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50260
------------------------------------------------------------


================Reducing node 50254, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50254
------------------------------------------------------------


================Reducing node 50253, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50253
------------------------------------------------------------


================Reducing node 50229, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50229
------------------------------------------------------------


================Reducing node 50227, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50227
------------------------------------------------------------


================Reducing node 50219, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50219
------------------------------------------------------------


================Reducing node 50217, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50217
------------------------------------------------------------


================Reducing node 50214, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50214
------------------------------------------------------------


================Reducing node 50279, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50279
------------------------------------------------------------


================Reducing node 50283, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50283
------------------------------------------------------------


======Fixpoint iteration 4. Reducer: subtree_replacer=======

The spar-tree is the following.
translationUnit {id=50210}
|___(+) {id=50211,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50213,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50214,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50279,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50283,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50270,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50278,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50272,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50274,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50275,slot_type=LeftParen}
        |           |___Token:) {id=50277,slot_type=RightParen}
        |___compoundStatement {id=50216,slot_type=compoundStatement}
            |___Token:{ {id=50217,slot_type=LeftBrace}
            |___(?) {id=50218,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50221,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50225,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50228,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50229,slot_type=Return}
            |           |   |___(?) {id=50230,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50242,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50258,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50261,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50262,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50263,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=50269,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=50260,slot_type=RightParen}
            |           |           |___(*) {id=50244,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50245,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50254,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50253,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50227,slot_type=Semi}
            |___Token:} {id=50219,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return sizeof(char) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return sizeof(char) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    typedef;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    typedef;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    {}
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    {}
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    continue;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    continue;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    asm();
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    asm();
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    break                      ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    break                      ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
    return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    return                     ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 5. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50349}
|___(+) {id=50350,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50352,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50353,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50418,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50422,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50409,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50417,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50411,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50413,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50414,slot_type=LeftParen}
        |           |___Token:) {id=50416,slot_type=RightParen}
        |___compoundStatement {id=50355,slot_type=compoundStatement}
            |___Token:{ {id=50356,slot_type=LeftBrace}
            |___(?) {id=50357,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50360,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50364,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50367,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50368,slot_type=Return}
            |           |   |___(?) {id=50369,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50381,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50397,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50400,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50401,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50402,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50408,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50399,slot_type=RightParen}
            |           |           |___(*) {id=50383,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50384,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50393,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50392,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50366,slot_type=Semi}
            |___Token:} {id=50358,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50350, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50350
------------------------------------------------------------


================Reducing node 50352, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50352
------------------------------------------------------------


================Reducing node 50355, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50355
------------------------------------------------------------


================Reducing node 50357, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50357
------------------------------------------------------------


================Reducing node 50360, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50360
------------------------------------------------------------


================Reducing node 50364, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50364
------------------------------------------------------------


================Reducing node 50367, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50367
------------------------------------------------------------


================Reducing node 50369, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50369
------------------------------------------------------------


================Reducing node 50381, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50381
------------------------------------------------------------


================Reducing node 50397, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50397
------------------------------------------------------------


================Reducing node 50409, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50409
------------------------------------------------------------


================Reducing node 50400, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50400
------------------------------------------------------------


================Reducing node 50411, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50411
------------------------------------------------------------


================Reducing node 50413, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50413
------------------------------------------------------------


================Reducing node 50383, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50383
------------------------------------------------------------


================Reducing node 50384, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50384
------------------------------------------------------------


================Reducing node 50417, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50417
------------------------------------------------------------


================Reducing node 50416, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50416
------------------------------------------------------------


================Reducing node 50414, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50414
------------------------------------------------------------


================Reducing node 50408, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50408
------------------------------------------------------------


================Reducing node 50402, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50402
------------------------------------------------------------


================Reducing node 50401, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50401
------------------------------------------------------------


================Reducing node 50399, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50399
------------------------------------------------------------


================Reducing node 50393, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50393
------------------------------------------------------------


================Reducing node 50392, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50392
------------------------------------------------------------


================Reducing node 50368, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50368
------------------------------------------------------------


================Reducing node 50366, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50366
------------------------------------------------------------


================Reducing node 50358, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50358
------------------------------------------------------------


================Reducing node 50356, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50356
------------------------------------------------------------


================Reducing node 50353, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50353
------------------------------------------------------------


================Reducing node 50418, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50418
------------------------------------------------------------


================Reducing node 50422, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50422
------------------------------------------------------------


======Fixpoint iteration 6. Reducer: subtree_replacer=======

The spar-tree is the following.
translationUnit {id=50349}
|___(+) {id=50350,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50352,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50353,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50418,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50422,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50409,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50417,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50411,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50413,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50414,slot_type=LeftParen}
        |           |___Token:) {id=50416,slot_type=RightParen}
        |___compoundStatement {id=50355,slot_type=compoundStatement}
            |___Token:{ {id=50356,slot_type=LeftBrace}
            |___(?) {id=50357,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50360,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50364,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50367,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50368,slot_type=Return}
            |           |   |___(?) {id=50369,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50381,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50397,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50400,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50401,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50402,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50408,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50399,slot_type=RightParen}
            |           |           |___(*) {id=50383,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50384,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50393,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50392,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50366,slot_type=Semi}
            |___Token:} {id=50358,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 7. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50446}
|___(+) {id=50447,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50449,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50450,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50515,slot_type=declarationSpecifiers}
        |       |___Token:int {id=50519,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=50506,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50514,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50508,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50510,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50511,slot_type=LeftParen}
        |           |___Token:) {id=50513,slot_type=RightParen}
        |___compoundStatement {id=50452,slot_type=compoundStatement}
            |___Token:{ {id=50453,slot_type=LeftBrace}
            |___(?) {id=50454,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50457,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50461,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50464,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50465,slot_type=Return}
            |           |   |___(?) {id=50466,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50478,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50494,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50497,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50498,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50499,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50505,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50496,slot_type=RightParen}
            |           |           |___(*) {id=50480,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50481,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50490,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50489,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50463,slot_type=Semi}
            |___Token:} {id=50455,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50447, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50447
------------------------------------------------------------


================Reducing node 50449, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50449
------------------------------------------------------------


================Reducing node 50452, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50452
------------------------------------------------------------


================Reducing node 50454, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50454
------------------------------------------------------------


================Reducing node 50457, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50457
------------------------------------------------------------


================Reducing node 50461, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50461
------------------------------------------------------------


================Reducing node 50464, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50464
------------------------------------------------------------


================Reducing node 50466, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50466
------------------------------------------------------------


================Reducing node 50478, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50478
------------------------------------------------------------


================Reducing node 50494, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50494
------------------------------------------------------------


================Reducing node 50506, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50506
------------------------------------------------------------


================Reducing node 50497, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50497
------------------------------------------------------------


================Reducing node 50508, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50508
------------------------------------------------------------


================Reducing node 50510, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50510
------------------------------------------------------------


================Reducing node 50480, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50480
------------------------------------------------------------


================Reducing node 50481, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return sizeof(void)    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void)    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50481
------------------------------------------------------------


================Reducing node 50514, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50514
------------------------------------------------------------


================Reducing node 50513, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50513
------------------------------------------------------------


================Reducing node 50511, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50511
------------------------------------------------------------


================Reducing node 50505, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50505
------------------------------------------------------------


================Reducing node 50499, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50499
------------------------------------------------------------


================Reducing node 50498, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50498
------------------------------------------------------------


================Reducing node 50496, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50496
------------------------------------------------------------


================Reducing node 50490, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50490
------------------------------------------------------------


================Reducing node 50489, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50489
------------------------------------------------------------


================Reducing node 50465, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50465
------------------------------------------------------------


================Reducing node 50463, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50463
------------------------------------------------------------


================Reducing node 50455, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50455
------------------------------------------------------------


================Reducing node 50453, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50453
------------------------------------------------------------


================Reducing node 50450, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50450
------------------------------------------------------------


================Reducing node 50515, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50515
------------------------------------------------------------


================Reducing node 50519, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50519
------------------------------------------------------------


======Fixpoint iteration 8. Reducer: subtree_replacer=======

The spar-tree is the following.
translationUnit {id=50446}
|___(+) {id=50447,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50449,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50450,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50515,slot_type=declarationSpecifiers}
        |       |___Token:int {id=50519,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=50506,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50514,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50508,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50510,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50511,slot_type=LeftParen}
        |           |___Token:) {id=50513,slot_type=RightParen}
        |___compoundStatement {id=50452,slot_type=compoundStatement}
            |___Token:{ {id=50453,slot_type=LeftBrace}
            |___(?) {id=50454,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50457,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50461,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50464,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50465,slot_type=Return}
            |           |   |___(?) {id=50466,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50478,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50494,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_10 {id=50497,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_10]}
            |           |           |   |   |___Token:sizeof {id=50498,slot_type=Sizeof}
            |           |           |   |   |___Token:( {id=50499,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50505,slot_type=[typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50496,slot_type=RightParen}
            |           |           |___(*) {id=50480,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50481,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50490,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50489,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50463,slot_type=Semi}
            |___Token:} {id=50455,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return sizeof(void) + 1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return sizeof(void) + 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    typedef;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    typedef;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    {}
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    {}
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    continue;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    continue;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    asm();
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    asm();
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    break                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    break                      ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
    return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    return                     ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 9. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50591}
|___(+) {id=50592,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50594,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50595,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50662,slot_type=declarationSpecifiers}
        |       |___Token:int {id=50666,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=50653,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50661,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50655,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50657,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50658,slot_type=LeftParen}
        |           |___Token:) {id=50660,slot_type=RightParen}
        |___compoundStatement {id=50597,slot_type=compoundStatement}
            |___Token:{ {id=50598,slot_type=LeftBrace}
            |___(?) {id=50599,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50602,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50606,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50609,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50610,slot_type=Return}
            |           |   |___(?) {id=50611,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50623,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50639,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50642,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=50652,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=50644,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50651,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50641,slot_type=RightParen}
            |           |           |___(*) {id=50625,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50626,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50635,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50634,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50608,slot_type=Semi}
            |___Token:} {id=50600,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50592, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50592
------------------------------------------------------------


================Reducing node 50594, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50594
------------------------------------------------------------


================Reducing node 50597, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50597
------------------------------------------------------------


================Reducing node 50599, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50599
------------------------------------------------------------


================Reducing node 50602, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50602
------------------------------------------------------------


================Reducing node 50606, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50606
------------------------------------------------------------


================Reducing node 50609, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50609
------------------------------------------------------------


================Reducing node 50611, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50611
------------------------------------------------------------


================Reducing node 50623, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50623
------------------------------------------------------------


================Reducing node 50639, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50639
------------------------------------------------------------


================Reducing node 50653, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50653
------------------------------------------------------------


================Reducing node 50642, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50642
------------------------------------------------------------


================Reducing node 50655, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50655
------------------------------------------------------------


================Reducing node 50657, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50657
------------------------------------------------------------


================Reducing node 50625, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50625
------------------------------------------------------------


================Reducing node 50626, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50626
------------------------------------------------------------


================Reducing node 50661, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50661
------------------------------------------------------------


================Reducing node 50660, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50660
------------------------------------------------------------


================Reducing node 50658, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50658
------------------------------------------------------------


================Reducing node 50652, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50652
------------------------------------------------------------


================Reducing node 50651, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50651
------------------------------------------------------------


================Reducing node 50644, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50644
------------------------------------------------------------


================Reducing node 50641, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50641
------------------------------------------------------------


================Reducing node 50635, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50635
------------------------------------------------------------


================Reducing node 50634, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50634
------------------------------------------------------------


================Reducing node 50610, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50610
------------------------------------------------------------


================Reducing node 50608, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50608
------------------------------------------------------------


================Reducing node 50600, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50600
------------------------------------------------------------


================Reducing node 50598, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50598
------------------------------------------------------------


================Reducing node 50595, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50595
------------------------------------------------------------


================Reducing node 50662, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50662
------------------------------------------------------------


================Reducing node 50666, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50666
------------------------------------------------------------


======Fixpoint iteration 10. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=50591}
|___(+) {id=50592,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50594,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50595,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50662,slot_type=declarationSpecifiers}
        |       |___Token:int {id=50666,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=50653,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50661,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50655,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50657,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50658,slot_type=LeftParen}
        |           |___Token:) {id=50660,slot_type=RightParen}
        |___compoundStatement {id=50597,slot_type=compoundStatement}
            |___Token:{ {id=50598,slot_type=LeftBrace}
            |___(?) {id=50599,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50602,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50606,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50609,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50610,slot_type=Return}
            |           |   |___(?) {id=50611,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50623,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50639,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50642,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=50652,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=50644,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50651,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50641,slot_type=RightParen}
            |           |           |___(*) {id=50625,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50626,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50635,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50634,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50608,slot_type=Semi}
            |___Token:} {id=50600,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 11. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50694}
|___(+) {id=50695,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50697,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50698,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50765,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50769,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50756,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50764,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50758,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50760,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50761,slot_type=LeftParen}
        |           |___Token:) {id=50763,slot_type=RightParen}
        |___compoundStatement {id=50700,slot_type=compoundStatement}
            |___Token:{ {id=50701,slot_type=LeftBrace}
            |___(?) {id=50702,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50705,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50709,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50712,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50713,slot_type=Return}
            |           |   |___(?) {id=50714,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50726,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50742,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50745,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=50755,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=50747,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50754,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50744,slot_type=RightParen}
            |           |           |___(*) {id=50728,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50729,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50738,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50737,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50711,slot_type=Semi}
            |___Token:} {id=50703,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50695, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50695
------------------------------------------------------------


================Reducing node 50697, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                               ;
    --file: <formatted tokenized program in its original format>--
                               ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50697
------------------------------------------------------------


================Reducing node 50700, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50700
------------------------------------------------------------


================Reducing node 50702, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50702
------------------------------------------------------------


================Reducing node 50705, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50705
------------------------------------------------------------


================Reducing node 50709, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                               ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50709
------------------------------------------------------------


================Reducing node 50712, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50712
------------------------------------------------------------


================Reducing node 50714, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50714
------------------------------------------------------------


================Reducing node 50726, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                 ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                 ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50726
------------------------------------------------------------


================Reducing node 50742, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50742
------------------------------------------------------------


================Reducing node 50756, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50756
------------------------------------------------------------


================Reducing node 50745, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50745
------------------------------------------------------------


================Reducing node 50758, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50758
------------------------------------------------------------


================Reducing node 50760, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50760
------------------------------------------------------------


================Reducing node 50728, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50728
------------------------------------------------------------


================Reducing node 50729, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return _Alignof(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50729
------------------------------------------------------------


================Reducing node 50764, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50764
------------------------------------------------------------


================Reducing node 50763, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50763
------------------------------------------------------------


================Reducing node 50761, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50761
------------------------------------------------------------


================Reducing node 50755, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50755
------------------------------------------------------------


================Reducing node 50754, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50754
------------------------------------------------------------


================Reducing node 50747, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50747
------------------------------------------------------------


================Reducing node 50744, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50744
------------------------------------------------------------


================Reducing node 50738, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50738
------------------------------------------------------------


================Reducing node 50737, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50737
------------------------------------------------------------


================Reducing node 50713, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50713
------------------------------------------------------------


================Reducing node 50711, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50711
------------------------------------------------------------


================Reducing node 50703, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50703
------------------------------------------------------------


================Reducing node 50701, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50701
------------------------------------------------------------


================Reducing node 50698, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50698
------------------------------------------------------------


================Reducing node 50765, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50765
------------------------------------------------------------


================Reducing node 50769, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50769
------------------------------------------------------------


======Fixpoint iteration 12. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=50694}
|___(+) {id=50695,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50697,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50698,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50765,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50769,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50756,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50764,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50758,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50760,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50761,slot_type=LeftParen}
        |           |___Token:) {id=50763,slot_type=RightParen}
        |___compoundStatement {id=50700,slot_type=compoundStatement}
            |___Token:{ {id=50701,slot_type=LeftBrace}
            |___(?) {id=50702,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50705,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50709,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50712,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50713,slot_type=Return}
            |           |   |___(?) {id=50714,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50726,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50742,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50745,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=50755,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=50747,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50754,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50744,slot_type=RightParen}
            |           |           |___(*) {id=50728,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50729,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50738,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50737,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50711,slot_type=Semi}
            |___Token:} {id=50703,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof(void)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 13. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50843}
|___(+) {id=50844,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50846,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50847,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50914,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50918,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50905,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50913,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50907,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50909,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50910,slot_type=LeftParen}
        |           |___Token:) {id=50912,slot_type=RightParen}
        |___compoundStatement {id=50849,slot_type=compoundStatement}
            |___Token:{ {id=50850,slot_type=LeftBrace}
            |___(?) {id=50851,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50854,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50858,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50861,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50862,slot_type=Return}
            |           |   |___(?) {id=50863,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50875,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50891,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50894,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=50904,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=50896,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50903,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50893,slot_type=RightParen}
            |           |           |___(*) {id=50877,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50878,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50887,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50886,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50860,slot_type=Semi}
            |___Token:} {id=50852,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50844, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50844
------------------------------------------------------------


================Reducing node 50846, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50846
------------------------------------------------------------


================Reducing node 50849, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50849
------------------------------------------------------------


================Reducing node 50851, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50851
------------------------------------------------------------


================Reducing node 50854, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50854
------------------------------------------------------------


================Reducing node 50858, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50858
------------------------------------------------------------


================Reducing node 50861, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50861
------------------------------------------------------------


================Reducing node 50863, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50863
------------------------------------------------------------


================Reducing node 50875, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50875
------------------------------------------------------------


================Reducing node 50891, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50891
------------------------------------------------------------


================Reducing node 50905, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50905
------------------------------------------------------------


================Reducing node 50894, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50894
------------------------------------------------------------


================Reducing node 50907, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50907
------------------------------------------------------------


================Reducing node 50909, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50909
------------------------------------------------------------


================Reducing node 50877, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50877
------------------------------------------------------------


================Reducing node 50878, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50878
------------------------------------------------------------


================Reducing node 50913, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50913
------------------------------------------------------------


================Reducing node 50912, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50912
------------------------------------------------------------


================Reducing node 50910, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50910
------------------------------------------------------------


================Reducing node 50904, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50904
------------------------------------------------------------


================Reducing node 50903, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50903
------------------------------------------------------------


================Reducing node 50896, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50896
------------------------------------------------------------


================Reducing node 50893, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50893
------------------------------------------------------------


================Reducing node 50887, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50887
------------------------------------------------------------


================Reducing node 50886, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50886
------------------------------------------------------------


================Reducing node 50862, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50862
------------------------------------------------------------


================Reducing node 50860, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50860
------------------------------------------------------------


================Reducing node 50852, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50852
------------------------------------------------------------


================Reducing node 50850, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50850
------------------------------------------------------------


================Reducing node 50847, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50847
------------------------------------------------------------


================Reducing node 50914, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50914
------------------------------------------------------------


================Reducing node 50918, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50918
------------------------------------------------------------


======Fixpoint iteration 14. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=50843}
|___(+) {id=50844,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50846,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50847,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=50914,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=50918,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=50905,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=50913,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=50907,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=50909,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=50910,slot_type=LeftParen}
        |           |___Token:) {id=50912,slot_type=RightParen}
        |___compoundStatement {id=50849,slot_type=compoundStatement}
            |___Token:{ {id=50850,slot_type=LeftBrace}
            |___(?) {id=50851,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50854,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50858,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50861,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50862,slot_type=Return}
            |           |   |___(?) {id=50863,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50875,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50891,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50894,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=50904,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=50896,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=50903,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50893,slot_type=RightParen}
            |           |           |___(*) {id=50877,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50878,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50887,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50886,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50860,slot_type=Semi}
            |___Token:} {id=50852,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 15. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=50942}
|___(+) {id=50943,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50945,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50946,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51013,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51017,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51004,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51012,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51006,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51008,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51009,slot_type=LeftParen}
        |           |___Token:) {id=51011,slot_type=RightParen}
        |___compoundStatement {id=50948,slot_type=compoundStatement}
            |___Token:{ {id=50949,slot_type=LeftBrace}
            |___(?) {id=50950,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50953,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50957,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50960,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50961,slot_type=Return}
            |           |   |___(?) {id=50962,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50974,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50990,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50993,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51003,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=50995,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=51002,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50992,slot_type=RightParen}
            |           |           |___(*) {id=50976,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50977,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50986,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50985,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50959,slot_type=Semi}
            |___Token:} {id=50951,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 50943, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50943
------------------------------------------------------------


================Reducing node 50945, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50945
------------------------------------------------------------


================Reducing node 50948, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50948
------------------------------------------------------------


================Reducing node 50950, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50950
------------------------------------------------------------


================Reducing node 50953, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50953
------------------------------------------------------------


================Reducing node 50957, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50957
------------------------------------------------------------


================Reducing node 50960, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50960
------------------------------------------------------------


================Reducing node 50962, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50962
------------------------------------------------------------


================Reducing node 50974, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50974
------------------------------------------------------------


================Reducing node 50990, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50990
------------------------------------------------------------


================Reducing node 51004, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51004
------------------------------------------------------------


================Reducing node 50993, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50993
------------------------------------------------------------


================Reducing node 51006, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51006
------------------------------------------------------------


================Reducing node 51008, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51008
------------------------------------------------------------


================Reducing node 50976, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50976
------------------------------------------------------------


================Reducing node 50977, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return __alignof__(void)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50977
------------------------------------------------------------


================Reducing node 51012, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51012
------------------------------------------------------------


================Reducing node 51011, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51011
------------------------------------------------------------


================Reducing node 51009, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51009
------------------------------------------------------------


================Reducing node 51003, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51003
------------------------------------------------------------


================Reducing node 51002, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51002
------------------------------------------------------------


================Reducing node 50995, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50995
------------------------------------------------------------


================Reducing node 50992, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50992
------------------------------------------------------------


================Reducing node 50986, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50986
------------------------------------------------------------


================Reducing node 50985, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50985
------------------------------------------------------------


================Reducing node 50961, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50961
------------------------------------------------------------


================Reducing node 50959, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50959
------------------------------------------------------------


================Reducing node 50951, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50951
------------------------------------------------------------


================Reducing node 50949, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50949
------------------------------------------------------------


================Reducing node 50946, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50946
------------------------------------------------------------


================Reducing node 51013, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51013
------------------------------------------------------------


================Reducing node 51017, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51017
------------------------------------------------------------


======Fixpoint iteration 16. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=50942}
|___(+) {id=50943,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=50945,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=50946,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51013,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51017,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51004,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51012,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51006,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51008,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51009,slot_type=LeftParen}
        |           |___Token:) {id=51011,slot_type=RightParen}
        |___compoundStatement {id=50948,slot_type=compoundStatement}
            |___Token:{ {id=50949,slot_type=LeftBrace}
            |___(?) {id=50950,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=50953,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=50957,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=50960,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=50961,slot_type=Return}
            |           |   |___(?) {id=50962,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=50974,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=50990,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=50993,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51003,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=50995,slot_type=LeftParen}
            |           |           |   |   |___Token:void {id=51002,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Void]}
            |           |           |   |___Token:) {id=50992,slot_type=RightParen}
            |           |           |___(*) {id=50976,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=50977,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=50986,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=50985,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=50959,slot_type=Semi}
            |___Token:} {id=50951,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(void)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(void)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(const)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(const)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 17. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51096}
|___(+) {id=51097,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51099,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51100,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51167,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51171,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51158,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51166,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51160,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51162,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51163,slot_type=LeftParen}
        |           |___Token:) {id=51165,slot_type=RightParen}
        |___compoundStatement {id=51102,slot_type=compoundStatement}
            |___Token:{ {id=51103,slot_type=LeftBrace}
            |___(?) {id=51104,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51107,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51111,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51114,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51115,slot_type=Return}
            |           |   |___(?) {id=51116,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51128,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51144,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51147,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51157,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51149,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51156,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51146,slot_type=RightParen}
            |           |           |___(*) {id=51130,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51131,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51140,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51139,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51113,slot_type=Semi}
            |___Token:} {id=51105,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51097, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51097
------------------------------------------------------------


================Reducing node 51099, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51099
------------------------------------------------------------


================Reducing node 51102, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51102
------------------------------------------------------------


================Reducing node 51104, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51104
------------------------------------------------------------


================Reducing node 51107, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51107
------------------------------------------------------------


================Reducing node 51111, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51111
------------------------------------------------------------


================Reducing node 51114, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51114
------------------------------------------------------------


================Reducing node 51116, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51116
------------------------------------------------------------


================Reducing node 51128, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51128
------------------------------------------------------------


================Reducing node 51144, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51144
------------------------------------------------------------


================Reducing node 51158, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51158
------------------------------------------------------------


================Reducing node 51147, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51147
------------------------------------------------------------


================Reducing node 51160, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51160
------------------------------------------------------------


================Reducing node 51162, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51162
------------------------------------------------------------


================Reducing node 51130, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51130
------------------------------------------------------------


================Reducing node 51131, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51131
------------------------------------------------------------


================Reducing node 51166, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51166
------------------------------------------------------------


================Reducing node 51165, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51165
------------------------------------------------------------


================Reducing node 51163, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51163
------------------------------------------------------------


================Reducing node 51157, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51157
------------------------------------------------------------


================Reducing node 51156, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51156
------------------------------------------------------------


================Reducing node 51149, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51149
------------------------------------------------------------


================Reducing node 51146, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51146
------------------------------------------------------------


================Reducing node 51140, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51140
------------------------------------------------------------


================Reducing node 51139, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51139
------------------------------------------------------------


================Reducing node 51115, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51115
------------------------------------------------------------


================Reducing node 51113, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51113
------------------------------------------------------------


================Reducing node 51105, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51105
------------------------------------------------------------


================Reducing node 51103, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51103
------------------------------------------------------------


================Reducing node 51100, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51100
------------------------------------------------------------


================Reducing node 51167, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51167
------------------------------------------------------------


================Reducing node 51171, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51171
------------------------------------------------------------


======Fixpoint iteration 18. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51096}
|___(+) {id=51097,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51099,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51100,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51167,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51171,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51158,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51166,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51160,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51162,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51163,slot_type=LeftParen}
        |           |___Token:) {id=51165,slot_type=RightParen}
        |___compoundStatement {id=51102,slot_type=compoundStatement}
            |___Token:{ {id=51103,slot_type=LeftBrace}
            |___(?) {id=51104,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51107,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51111,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51114,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51115,slot_type=Return}
            |           |   |___(?) {id=51116,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51128,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51144,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51147,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51157,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51149,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51156,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51146,slot_type=RightParen}
            |           |           |___(*) {id=51130,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51131,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51140,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51139,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51113,slot_type=Semi}
            |___Token:} {id=51105,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 19. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51199}
|___(+) {id=51200,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51202,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51203,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51270,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51274,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51261,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51269,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51263,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51265,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51266,slot_type=LeftParen}
        |           |___Token:) {id=51268,slot_type=RightParen}
        |___compoundStatement {id=51205,slot_type=compoundStatement}
            |___Token:{ {id=51206,slot_type=LeftBrace}
            |___(?) {id=51207,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51210,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51214,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51217,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51218,slot_type=Return}
            |           |   |___(?) {id=51219,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51231,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51247,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51250,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51260,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51252,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51259,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51249,slot_type=RightParen}
            |           |           |___(*) {id=51233,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51234,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51243,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51242,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51216,slot_type=Semi}
            |___Token:} {id=51208,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51200, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51200
------------------------------------------------------------


================Reducing node 51202, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51202
------------------------------------------------------------


================Reducing node 51205, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51205
------------------------------------------------------------


================Reducing node 51207, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51207
------------------------------------------------------------


================Reducing node 51210, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51210
------------------------------------------------------------


================Reducing node 51214, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51214
------------------------------------------------------------


================Reducing node 51217, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51217
------------------------------------------------------------


================Reducing node 51219, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51219
------------------------------------------------------------


================Reducing node 51231, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51231
------------------------------------------------------------


================Reducing node 51247, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51247
------------------------------------------------------------


================Reducing node 51261, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51261
------------------------------------------------------------


================Reducing node 51250, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51250
------------------------------------------------------------


================Reducing node 51263, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51263
------------------------------------------------------------


================Reducing node 51265, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51265
------------------------------------------------------------


================Reducing node 51233, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51233
------------------------------------------------------------


================Reducing node 51234, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return __alignof__(char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51234
------------------------------------------------------------


================Reducing node 51269, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51269
------------------------------------------------------------


================Reducing node 51268, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51268
------------------------------------------------------------


================Reducing node 51266, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51266
------------------------------------------------------------


================Reducing node 51260, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51260
------------------------------------------------------------


================Reducing node 51259, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51259
------------------------------------------------------------


================Reducing node 51252, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51252
------------------------------------------------------------


================Reducing node 51249, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51249
------------------------------------------------------------


================Reducing node 51243, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51243
------------------------------------------------------------


================Reducing node 51242, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51242
------------------------------------------------------------


================Reducing node 51218, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51218
------------------------------------------------------------


================Reducing node 51216, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51216
------------------------------------------------------------


================Reducing node 51208, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51208
------------------------------------------------------------


================Reducing node 51206, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51206
------------------------------------------------------------


================Reducing node 51203, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51203
------------------------------------------------------------


================Reducing node 51270, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51270
------------------------------------------------------------


================Reducing node 51274, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51274
------------------------------------------------------------


======Fixpoint iteration 20. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51199}
|___(+) {id=51200,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51202,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51203,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51270,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51274,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51261,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51269,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51263,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51265,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51266,slot_type=LeftParen}
        |           |___Token:) {id=51268,slot_type=RightParen}
        |___compoundStatement {id=51205,slot_type=compoundStatement}
            |___Token:{ {id=51206,slot_type=LeftBrace}
            |___(?) {id=51207,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51210,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51214,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51217,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51218,slot_type=Return}
            |           |   |___(?) {id=51219,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51231,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51247,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51250,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:__alignof__ {id=51260,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |   |___Token:( {id=51252,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51259,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51249,slot_type=RightParen}
            |           |           |___(*) {id=51233,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51234,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51243,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51242,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51216,slot_type=Semi}
            |___Token:} {id=51208,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return __alignof__(char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return __alignof__(char)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 21. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51347}
|___(+) {id=51348,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51350,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51351,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51418,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51422,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51409,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51417,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51411,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51413,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51414,slot_type=LeftParen}
        |           |___Token:) {id=51416,slot_type=RightParen}
        |___compoundStatement {id=51353,slot_type=compoundStatement}
            |___Token:{ {id=51354,slot_type=LeftBrace}
            |___(?) {id=51355,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51358,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51362,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51365,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51366,slot_type=Return}
            |           |   |___(?) {id=51367,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51379,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51395,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51398,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51408,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51400,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51407,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51397,slot_type=RightParen}
            |           |           |___(*) {id=51381,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51382,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51391,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51390,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51364,slot_type=Semi}
            |___Token:} {id=51356,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51348, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51348
------------------------------------------------------------


================Reducing node 51350, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51350
------------------------------------------------------------


================Reducing node 51353, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51353
------------------------------------------------------------


================Reducing node 51355, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51355
------------------------------------------------------------


================Reducing node 51358, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51358
------------------------------------------------------------


================Reducing node 51362, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51362
------------------------------------------------------------


================Reducing node 51365, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51365
------------------------------------------------------------


================Reducing node 51367, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51367
------------------------------------------------------------


================Reducing node 51379, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51379
------------------------------------------------------------


================Reducing node 51395, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51395
------------------------------------------------------------


================Reducing node 51409, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51409
------------------------------------------------------------


================Reducing node 51398, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51398
------------------------------------------------------------


================Reducing node 51411, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51411
------------------------------------------------------------


================Reducing node 51413, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51413
------------------------------------------------------------


================Reducing node 51381, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    signed main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51381
------------------------------------------------------------


================Reducing node 51382, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51382
------------------------------------------------------------


================Reducing node 51417, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51417
------------------------------------------------------------


================Reducing node 51416, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51416
------------------------------------------------------------


================Reducing node 51414, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51414
------------------------------------------------------------


================Reducing node 51408, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51408
------------------------------------------------------------


================Reducing node 51407, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51407
------------------------------------------------------------


================Reducing node 51400, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51400
------------------------------------------------------------


================Reducing node 51397, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51397
------------------------------------------------------------


================Reducing node 51391, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51391
------------------------------------------------------------


================Reducing node 51390, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51390
------------------------------------------------------------


================Reducing node 51366, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51366
------------------------------------------------------------


================Reducing node 51364, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51364
------------------------------------------------------------


================Reducing node 51356, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51356
------------------------------------------------------------


================Reducing node 51354, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51354
------------------------------------------------------------


================Reducing node 51351, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51351
------------------------------------------------------------


================Reducing node 51418, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51418
------------------------------------------------------------


================Reducing node 51422, size=14================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51422
------------------------------------------------------------


======Fixpoint iteration 22. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51347}
|___(+) {id=51348,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51350,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51351,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51418,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51422,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51409,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51417,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51411,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51413,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51414,slot_type=LeftParen}
        |           |___Token:) {id=51416,slot_type=RightParen}
        |___compoundStatement {id=51353,slot_type=compoundStatement}
            |___Token:{ {id=51354,slot_type=LeftBrace}
            |___(?) {id=51355,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51358,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51362,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51365,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51366,slot_type=Return}
            |           |   |___(?) {id=51367,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51379,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51395,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51398,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51408,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51400,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51407,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51397,slot_type=RightParen}
            |           |           |___(*) {id=51381,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51382,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51391,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51390,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51364,slot_type=Semi}
            |___Token:} {id=51356,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 23. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51446}
|___(+) {id=51447,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51449,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51450,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51517,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51521,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51508,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51516,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51510,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51512,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51513,slot_type=LeftParen}
        |           |___Token:) {id=51515,slot_type=RightParen}
        |___compoundStatement {id=51452,slot_type=compoundStatement}
            |___Token:{ {id=51453,slot_type=LeftBrace}
            |___(?) {id=51454,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51457,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51461,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51464,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51465,slot_type=Return}
            |           |   |___(?) {id=51466,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51478,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51494,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51497,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51507,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51499,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51506,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51496,slot_type=RightParen}
            |           |           |___(*) {id=51480,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51481,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51490,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51489,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51463,slot_type=Semi}
            |___Token:} {id=51455,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51447, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51447
------------------------------------------------------------


================Reducing node 51449, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                  ;
    --file: <formatted tokenized program in its original format>--
                                  ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51449
------------------------------------------------------------


================Reducing node 51452, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51452
------------------------------------------------------------


================Reducing node 51454, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51454
------------------------------------------------------------


================Reducing node 51457, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51457
------------------------------------------------------------


================Reducing node 51461, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51461
------------------------------------------------------------


================Reducing node 51464, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51464
------------------------------------------------------------


================Reducing node 51466, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51466
------------------------------------------------------------


================Reducing node 51478, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                    ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                   1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                   1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51478
------------------------------------------------------------


================Reducing node 51494, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51494
------------------------------------------------------------


================Reducing node 51508, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51508
------------------------------------------------------------


================Reducing node 51497, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51497
------------------------------------------------------------


================Reducing node 51510, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51510
------------------------------------------------------------


================Reducing node 51512, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51512
------------------------------------------------------------


================Reducing node 51480, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__additiveExpression_1]dd@1
    --file: t.c--
    int    main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51480
------------------------------------------------------------


================Reducing node 51481, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return _Alignof   (char)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51481
------------------------------------------------------------


================Reducing node 51516, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51516
------------------------------------------------------------


================Reducing node 51515, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51515
------------------------------------------------------------


================Reducing node 51513, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51513
------------------------------------------------------------


================Reducing node 51507, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51507
------------------------------------------------------------


================Reducing node 51506, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51506
------------------------------------------------------------


================Reducing node 51499, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51499
------------------------------------------------------------


================Reducing node 51496, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51496
------------------------------------------------------------


================Reducing node 51490, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51490
------------------------------------------------------------


================Reducing node 51489, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51489
------------------------------------------------------------


================Reducing node 51465, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51465
------------------------------------------------------------


================Reducing node 51463, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51463
------------------------------------------------------------


================Reducing node 51455, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51455
------------------------------------------------------------


================Reducing node 51453, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51453
------------------------------------------------------------


================Reducing node 51450, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51450
------------------------------------------------------------


================Reducing node 51517, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51517
------------------------------------------------------------


================Reducing node 51521, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51521
------------------------------------------------------------


======Fixpoint iteration 24. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51446}
|___(+) {id=51447,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51449,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51450,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51517,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51521,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51508,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51516,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51510,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51512,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51513,slot_type=LeftParen}
        |           |___Token:) {id=51515,slot_type=RightParen}
        |___compoundStatement {id=51452,slot_type=compoundStatement}
            |___Token:{ {id=51453,slot_type=LeftBrace}
            |___(?) {id=51454,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51457,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51461,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51464,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51465,slot_type=Return}
            |           |   |___(?) {id=51466,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51478,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51494,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51497,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51507,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51499,slot_type=LeftParen}
            |           |           |   |   |___Token:char {id=51506,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Char]}
            |           |           |   |___Token:) {id=51496,slot_type=RightParen}
            |           |           |___(*) {id=51480,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51481,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51490,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51489,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51463,slot_type=Semi}
            |___Token:} {id=51455,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return _Alignof   (char)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return _Alignof   (char)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (const)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (const)+1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 25. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51601}
|___(+) {id=51602,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51604,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51605,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51672,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51676,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51663,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51671,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51665,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51667,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51668,slot_type=LeftParen}
        |           |___Token:) {id=51670,slot_type=RightParen}
        |___compoundStatement {id=51607,slot_type=compoundStatement}
            |___Token:{ {id=51608,slot_type=LeftBrace}
            |___(?) {id=51609,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51612,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51616,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51619,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51620,slot_type=Return}
            |           |   |___(?) {id=51621,slot_type=optional__postfixExpression_1}
            |           |       |___additiveExpression {id=51633,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |           |           |___aux_rule__unaryExpression_9 {id=51649,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |   |___aux_rule__unaryExpression_11 {id=51652,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |   |___Token:_Alignof {id=51662,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |   |___Token:( {id=51654,slot_type=LeftParen}
            |           |           |   |   |___Token:short {id=51661,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |   |___Token:) {id=51651,slot_type=RightParen}
            |           |           |___(*) {id=51635,slot_type=kleene_star__additiveExpression_1}
            |           |               |___aux_rule__additiveExpression_2 {id=51636,slot_type=aux_rule__additiveExpression_2}
            |           |                   |___Token:+ {id=51645,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |           |                   |___Token:1 {id=51644,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=51618,slot_type=Semi}
            |___Token:} {id=51610,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51602, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51602
------------------------------------------------------------


================Reducing node 51604, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51604
------------------------------------------------------------


================Reducing node 51607, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51607
------------------------------------------------------------


================Reducing node 51609, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51609
------------------------------------------------------------


================Reducing node 51612, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51612
------------------------------------------------------------


================Reducing node 51616, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51616
------------------------------------------------------------


================Reducing node 51619, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51619
------------------------------------------------------------


================Reducing node 51621, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51621
------------------------------------------------------------


================Reducing node 51633, size=14================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)+1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                    1;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                    1;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 51633 from 14 to 12
------------------------------------------------------------


================Reducing node 51649, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51649
------------------------------------------------------------


================Reducing node 51663, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51663
------------------------------------------------------------


================Reducing node 51652, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51652
------------------------------------------------------------


================Reducing node 51665, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51665
------------------------------------------------------------


================Reducing node 51667, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51667
------------------------------------------------------------


================Reducing node 51671, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51671
------------------------------------------------------------


================Reducing node 51670, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51670
------------------------------------------------------------


================Reducing node 51668, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51668
------------------------------------------------------------


================Reducing node 51662, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51662
------------------------------------------------------------


================Reducing node 51661, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51661
------------------------------------------------------------


================Reducing node 51654, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51654
------------------------------------------------------------


================Reducing node 51651, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51651
------------------------------------------------------------


================Reducing node 51620, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51620
------------------------------------------------------------


================Reducing node 51618, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51618
------------------------------------------------------------


================Reducing node 51610, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51610
------------------------------------------------------------


================Reducing node 51608, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51608
------------------------------------------------------------


================Reducing node 51605, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51605
------------------------------------------------------------


================Reducing node 51672, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51672
------------------------------------------------------------


================Reducing node 51676, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51676
------------------------------------------------------------


======Fixpoint iteration 26. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51601}
|___(+) {id=51602,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51604,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51605,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51672,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51676,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51663,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51671,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51665,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51667,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51668,slot_type=LeftParen}
        |           |___Token:) {id=51670,slot_type=RightParen}
        |___compoundStatement {id=51607,slot_type=compoundStatement}
            |___Token:{ {id=51608,slot_type=LeftBrace}
            |___(?) {id=51609,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51612,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51616,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51619,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51620,slot_type=Return}
            |           |   |___(?) {id=51621,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51649,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51652,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=51662,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=51654,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51661,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51651,slot_type=RightParen}
            |           |___Token:; {id=51618,slot_type=Semi}
            |___Token:} {id=51610,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 27. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51704}
|___(+) {id=51705,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51707,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51708,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51764,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51768,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51755,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51763,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51757,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51759,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51760,slot_type=LeftParen}
        |           |___Token:) {id=51762,slot_type=RightParen}
        |___compoundStatement {id=51710,slot_type=compoundStatement}
            |___Token:{ {id=51711,slot_type=LeftBrace}
            |___(?) {id=51712,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51715,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51719,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51722,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51723,slot_type=Return}
            |           |   |___(?) {id=51724,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51741,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51744,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=51754,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=51746,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51753,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51743,slot_type=RightParen}
            |           |___Token:; {id=51721,slot_type=Semi}
            |___Token:} {id=51713,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51705, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51705
------------------------------------------------------------


================Reducing node 51707, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51707
------------------------------------------------------------


================Reducing node 51710, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51710
------------------------------------------------------------


================Reducing node 51712, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51712
------------------------------------------------------------


================Reducing node 51715, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51715
------------------------------------------------------------


================Reducing node 51719, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51719
------------------------------------------------------------


================Reducing node 51722, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51722
------------------------------------------------------------


================Reducing node 51724, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51724
------------------------------------------------------------


================Reducing node 51741, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51741
------------------------------------------------------------


================Reducing node 51755, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51755
------------------------------------------------------------


================Reducing node 51744, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51744
------------------------------------------------------------


================Reducing node 51757, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51757
------------------------------------------------------------


================Reducing node 51759, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51759
------------------------------------------------------------


================Reducing node 51763, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51763
------------------------------------------------------------


================Reducing node 51762, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51762
------------------------------------------------------------


================Reducing node 51760, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51760
------------------------------------------------------------


================Reducing node 51754, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51754
------------------------------------------------------------


================Reducing node 51753, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51753
------------------------------------------------------------


================Reducing node 51746, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51746
------------------------------------------------------------


================Reducing node 51743, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51743
------------------------------------------------------------


================Reducing node 51723, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51723
------------------------------------------------------------


================Reducing node 51721, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51721
------------------------------------------------------------


================Reducing node 51713, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51713
------------------------------------------------------------


================Reducing node 51711, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51711
------------------------------------------------------------


================Reducing node 51708, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51708
------------------------------------------------------------


================Reducing node 51764, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51764
------------------------------------------------------------


================Reducing node 51768, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51768
------------------------------------------------------------


======Fixpoint iteration 28. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51704}
|___(+) {id=51705,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51707,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51708,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51764,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51768,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51755,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51763,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51757,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51759,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51760,slot_type=LeftParen}
        |           |___Token:) {id=51762,slot_type=RightParen}
        |___compoundStatement {id=51710,slot_type=compoundStatement}
            |___Token:{ {id=51711,slot_type=LeftBrace}
            |___(?) {id=51712,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51715,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51719,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51722,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51723,slot_type=Return}
            |           |   |___(?) {id=51724,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51741,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51744,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=51754,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=51746,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51753,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51743,slot_type=RightParen}
            |           |___Token:; {id=51721,slot_type=Semi}
            |___Token:} {id=51713,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof   (short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof   (short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return sizeof(void)        ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return sizeof(void)        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof(void    )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof(void    )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 29. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51838}
|___(+) {id=51839,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51841,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51842,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51898,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51902,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51889,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51897,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51891,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51893,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51894,slot_type=LeftParen}
        |           |___Token:) {id=51896,slot_type=RightParen}
        |___compoundStatement {id=51844,slot_type=compoundStatement}
            |___Token:{ {id=51845,slot_type=LeftBrace}
            |___(?) {id=51846,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51849,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51853,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51856,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51857,slot_type=Return}
            |           |   |___(?) {id=51858,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51875,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51878,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=51888,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=51880,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51887,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51877,slot_type=RightParen}
            |           |___Token:; {id=51855,slot_type=Semi}
            |___Token:} {id=51847,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51839, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51839
------------------------------------------------------------


================Reducing node 51841, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51841
------------------------------------------------------------


================Reducing node 51844, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51844
------------------------------------------------------------


================Reducing node 51846, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51846
------------------------------------------------------------


================Reducing node 51849, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51849
------------------------------------------------------------


================Reducing node 51853, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51853
------------------------------------------------------------


================Reducing node 51856, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51856
------------------------------------------------------------


================Reducing node 51858, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51858
------------------------------------------------------------


================Reducing node 51875, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51875
------------------------------------------------------------


================Reducing node 51889, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51889
------------------------------------------------------------


================Reducing node 51878, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51878
------------------------------------------------------------


================Reducing node 51891, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51891
------------------------------------------------------------


================Reducing node 51893, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51893
------------------------------------------------------------


================Reducing node 51897, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51897
------------------------------------------------------------


================Reducing node 51896, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51896
------------------------------------------------------------


================Reducing node 51894, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51894
------------------------------------------------------------


================Reducing node 51888, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51888
------------------------------------------------------------


================Reducing node 51887, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51887
------------------------------------------------------------


================Reducing node 51880, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51880
------------------------------------------------------------


================Reducing node 51877, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51877
------------------------------------------------------------


================Reducing node 51857, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51857
------------------------------------------------------------


================Reducing node 51855, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51855
------------------------------------------------------------


================Reducing node 51847, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51847
------------------------------------------------------------


================Reducing node 51845, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51845
------------------------------------------------------------


================Reducing node 51842, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51842
------------------------------------------------------------


================Reducing node 51898, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51898
------------------------------------------------------------


================Reducing node 51902, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51902
------------------------------------------------------------


======Fixpoint iteration 30. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51838}
|___(+) {id=51839,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51841,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51842,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51898,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=51902,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=51889,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51897,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51891,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51893,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51894,slot_type=LeftParen}
        |           |___Token:) {id=51896,slot_type=RightParen}
        |___compoundStatement {id=51844,slot_type=compoundStatement}
            |___Token:{ {id=51845,slot_type=LeftBrace}
            |___(?) {id=51846,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51849,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51853,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51856,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51857,slot_type=Return}
            |           |   |___(?) {id=51858,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51875,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51878,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=51888,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=51880,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51887,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51877,slot_type=RightParen}
            |           |___Token:; {id=51855,slot_type=Semi}
            |___Token:} {id=51847,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 31. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=51926}
|___(+) {id=51927,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51929,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51930,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51986,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51990,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51977,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51985,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51979,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51981,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51982,slot_type=LeftParen}
        |           |___Token:) {id=51984,slot_type=RightParen}
        |___compoundStatement {id=51932,slot_type=compoundStatement}
            |___Token:{ {id=51933,slot_type=LeftBrace}
            |___(?) {id=51934,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51937,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51941,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51944,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51945,slot_type=Return}
            |           |   |___(?) {id=51946,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51963,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51966,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=51976,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=51968,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51975,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51965,slot_type=RightParen}
            |           |___Token:; {id=51943,slot_type=Semi}
            |___Token:} {id=51935,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 51927, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51927
------------------------------------------------------------


================Reducing node 51929, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51929
------------------------------------------------------------


================Reducing node 51932, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51932
------------------------------------------------------------


================Reducing node 51934, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51934
------------------------------------------------------------


================Reducing node 51937, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51937
------------------------------------------------------------


================Reducing node 51941, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51941
------------------------------------------------------------


================Reducing node 51944, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51944
------------------------------------------------------------


================Reducing node 51946, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51946
------------------------------------------------------------


================Reducing node 51963, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51963
------------------------------------------------------------


================Reducing node 51977, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51977
------------------------------------------------------------


================Reducing node 51966, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51966
------------------------------------------------------------


================Reducing node 51979, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51979
------------------------------------------------------------


================Reducing node 51981, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51981
------------------------------------------------------------


================Reducing node 51985, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51985
------------------------------------------------------------


================Reducing node 51984, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51984
------------------------------------------------------------


================Reducing node 51982, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51982
------------------------------------------------------------


================Reducing node 51976, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51976
------------------------------------------------------------


================Reducing node 51975, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51975
------------------------------------------------------------


================Reducing node 51968, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51968
------------------------------------------------------------


================Reducing node 51965, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51965
------------------------------------------------------------


================Reducing node 51945, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51945
------------------------------------------------------------


================Reducing node 51943, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51943
------------------------------------------------------------


================Reducing node 51935, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51935
------------------------------------------------------------


================Reducing node 51933, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51933
------------------------------------------------------------


================Reducing node 51930, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51930
------------------------------------------------------------


================Reducing node 51986, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51986
------------------------------------------------------------


================Reducing node 51990, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51990
------------------------------------------------------------


======Fixpoint iteration 32. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=51926}
|___(+) {id=51927,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=51929,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=51930,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=51986,slot_type=declarationSpecifiers}
        |       |___Token:int {id=51990,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=51977,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=51985,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=51979,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=51981,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=51982,slot_type=LeftParen}
        |           |___Token:) {id=51984,slot_type=RightParen}
        |___compoundStatement {id=51932,slot_type=compoundStatement}
            |___Token:{ {id=51933,slot_type=LeftBrace}
            |___(?) {id=51934,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=51937,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=51941,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=51944,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=51945,slot_type=Return}
            |           |   |___(?) {id=51946,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=51963,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=51966,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=51976,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=51968,slot_type=LeftParen}
            |           |           |   |___Token:short {id=51975,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Short]}
            |           |           |___Token:) {id=51965,slot_type=RightParen}
            |           |___Token:; {id=51943,slot_type=Semi}
            |___Token:} {id=51935,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(short)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(short)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return sizeof(void)        ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return sizeof(void)        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof(void    )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof(void    )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(void )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(void )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(const)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(const)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(char )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(char )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 33. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52067}
|___(+) {id=52068,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52070,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52071,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52127,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52131,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52118,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52126,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52120,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52122,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52123,slot_type=LeftParen}
        |           |___Token:) {id=52125,slot_type=RightParen}
        |___compoundStatement {id=52073,slot_type=compoundStatement}
            |___Token:{ {id=52074,slot_type=LeftBrace}
            |___(?) {id=52075,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52078,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52082,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52085,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52086,slot_type=Return}
            |           |   |___(?) {id=52087,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52104,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52107,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52117,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52109,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52116,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52106,slot_type=RightParen}
            |           |___Token:; {id=52084,slot_type=Semi}
            |___Token:} {id=52076,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52068, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52068
------------------------------------------------------------


================Reducing node 52070, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52070
------------------------------------------------------------


================Reducing node 52073, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52073
------------------------------------------------------------


================Reducing node 52075, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52075
------------------------------------------------------------


================Reducing node 52078, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52078
------------------------------------------------------------


================Reducing node 52082, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52082
------------------------------------------------------------


================Reducing node 52085, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52085
------------------------------------------------------------


================Reducing node 52087, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52087
------------------------------------------------------------


================Reducing node 52104, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52104
------------------------------------------------------------


================Reducing node 52118, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52118
------------------------------------------------------------


================Reducing node 52107, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52107
------------------------------------------------------------


================Reducing node 52120, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52120
------------------------------------------------------------


================Reducing node 52122, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52122
------------------------------------------------------------


================Reducing node 52126, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52126
------------------------------------------------------------


================Reducing node 52125, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52125
------------------------------------------------------------


================Reducing node 52123, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52123
------------------------------------------------------------


================Reducing node 52117, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52117
------------------------------------------------------------


================Reducing node 52116, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52116
------------------------------------------------------------


================Reducing node 52109, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52109
------------------------------------------------------------


================Reducing node 52106, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52106
------------------------------------------------------------


================Reducing node 52086, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52086
------------------------------------------------------------


================Reducing node 52084, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52084
------------------------------------------------------------


================Reducing node 52076, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52076
------------------------------------------------------------


================Reducing node 52074, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52074
------------------------------------------------------------


================Reducing node 52071, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52071
------------------------------------------------------------


================Reducing node 52127, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52127
------------------------------------------------------------


================Reducing node 52131, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52131
------------------------------------------------------------


======Fixpoint iteration 34. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52067}
|___(+) {id=52068,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52070,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52071,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52127,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52131,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52118,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52126,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52120,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52122,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52123,slot_type=LeftParen}
        |           |___Token:) {id=52125,slot_type=RightParen}
        |___compoundStatement {id=52073,slot_type=compoundStatement}
            |___Token:{ {id=52074,slot_type=LeftBrace}
            |___(?) {id=52075,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52078,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52082,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52085,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52086,slot_type=Return}
            |           |   |___(?) {id=52087,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52104,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52107,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52117,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52109,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52116,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52106,slot_type=RightParen}
            |           |___Token:; {id=52084,slot_type=Semi}
            |___Token:} {id=52076,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 35. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52159}
|___(+) {id=52160,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52162,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52163,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52219,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52223,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52210,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52218,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52212,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52214,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52215,slot_type=LeftParen}
        |           |___Token:) {id=52217,slot_type=RightParen}
        |___compoundStatement {id=52165,slot_type=compoundStatement}
            |___Token:{ {id=52166,slot_type=LeftBrace}
            |___(?) {id=52167,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52170,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52174,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52177,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52178,slot_type=Return}
            |           |   |___(?) {id=52179,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52196,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52199,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52209,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52201,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52208,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52198,slot_type=RightParen}
            |           |___Token:; {id=52176,slot_type=Semi}
            |___Token:} {id=52168,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52160, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52160
------------------------------------------------------------


================Reducing node 52162, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52162
------------------------------------------------------------


================Reducing node 52165, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52165
------------------------------------------------------------


================Reducing node 52167, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52167
------------------------------------------------------------


================Reducing node 52170, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52170
------------------------------------------------------------


================Reducing node 52174, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52174
------------------------------------------------------------


================Reducing node 52177, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52177
------------------------------------------------------------


================Reducing node 52179, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52179
------------------------------------------------------------


================Reducing node 52196, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52196
------------------------------------------------------------


================Reducing node 52210, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52210
------------------------------------------------------------


================Reducing node 52199, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52199
------------------------------------------------------------


================Reducing node 52212, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52212
------------------------------------------------------------


================Reducing node 52214, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52214
------------------------------------------------------------


================Reducing node 52218, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52218
------------------------------------------------------------


================Reducing node 52217, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52217
------------------------------------------------------------


================Reducing node 52215, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52215
------------------------------------------------------------


================Reducing node 52209, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52209
------------------------------------------------------------


================Reducing node 52208, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52208
------------------------------------------------------------


================Reducing node 52201, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52201
------------------------------------------------------------


================Reducing node 52198, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52198
------------------------------------------------------------


================Reducing node 52178, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52178
------------------------------------------------------------


================Reducing node 52176, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52176
------------------------------------------------------------


================Reducing node 52168, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52168
------------------------------------------------------------


================Reducing node 52166, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52166
------------------------------------------------------------


================Reducing node 52163, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52163
------------------------------------------------------------


================Reducing node 52219, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52219
------------------------------------------------------------


================Reducing node 52223, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52223
------------------------------------------------------------


======Fixpoint iteration 36. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52159}
|___(+) {id=52160,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52162,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52163,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52219,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52223,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52210,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52218,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52212,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52214,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52215,slot_type=LeftParen}
        |           |___Token:) {id=52217,slot_type=RightParen}
        |___compoundStatement {id=52165,slot_type=compoundStatement}
            |___Token:{ {id=52166,slot_type=LeftBrace}
            |___(?) {id=52167,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52170,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52174,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52177,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52178,slot_type=Return}
            |           |   |___(?) {id=52179,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52196,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52199,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52209,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52201,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52208,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52198,slot_type=RightParen}
            |           |___Token:; {id=52176,slot_type=Semi}
            |___Token:} {id=52168,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return __alignof__(int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return __alignof__(int  )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 37. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52292}
|___(+) {id=52293,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52295,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52296,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52352,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52356,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52343,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52351,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52345,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52347,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52348,slot_type=LeftParen}
        |           |___Token:) {id=52350,slot_type=RightParen}
        |___compoundStatement {id=52298,slot_type=compoundStatement}
            |___Token:{ {id=52299,slot_type=LeftBrace}
            |___(?) {id=52300,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52303,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52307,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52310,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52311,slot_type=Return}
            |           |   |___(?) {id=52312,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52329,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52332,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52342,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52334,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52341,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52331,slot_type=RightParen}
            |           |___Token:; {id=52309,slot_type=Semi}
            |___Token:} {id=52301,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52293, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52293
------------------------------------------------------------


================Reducing node 52295, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52295
------------------------------------------------------------


================Reducing node 52298, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52298
------------------------------------------------------------


================Reducing node 52300, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52300
------------------------------------------------------------


================Reducing node 52303, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52303
------------------------------------------------------------


================Reducing node 52307, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52307
------------------------------------------------------------


================Reducing node 52310, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52310
------------------------------------------------------------


================Reducing node 52312, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52312
------------------------------------------------------------


================Reducing node 52329, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52329
------------------------------------------------------------


================Reducing node 52343, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52343
------------------------------------------------------------


================Reducing node 52332, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52332
------------------------------------------------------------


================Reducing node 52345, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52345
------------------------------------------------------------


================Reducing node 52347, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52347
------------------------------------------------------------


================Reducing node 52351, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52351
------------------------------------------------------------


================Reducing node 52350, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52350
------------------------------------------------------------


================Reducing node 52348, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52348
------------------------------------------------------------


================Reducing node 52342, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52342
------------------------------------------------------------


================Reducing node 52341, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52341
------------------------------------------------------------


================Reducing node 52334, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52334
------------------------------------------------------------


================Reducing node 52331, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52331
------------------------------------------------------------


================Reducing node 52311, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52311
------------------------------------------------------------


================Reducing node 52309, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52309
------------------------------------------------------------


================Reducing node 52301, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52301
------------------------------------------------------------


================Reducing node 52299, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52299
------------------------------------------------------------


================Reducing node 52296, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52296
------------------------------------------------------------


================Reducing node 52352, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52352
------------------------------------------------------------


================Reducing node 52356, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52356
------------------------------------------------------------


======Fixpoint iteration 38. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52292}
|___(+) {id=52293,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52295,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52296,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52352,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52356,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52343,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52351,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52345,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52347,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52348,slot_type=LeftParen}
        |           |___Token:) {id=52350,slot_type=RightParen}
        |___compoundStatement {id=52298,slot_type=compoundStatement}
            |___Token:{ {id=52299,slot_type=LeftBrace}
            |___(?) {id=52300,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52303,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52307,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52310,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52311,slot_type=Return}
            |           |   |___(?) {id=52312,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52329,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52332,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52342,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52334,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52341,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52331,slot_type=RightParen}
            |           |___Token:; {id=52309,slot_type=Semi}
            |___Token:} {id=52301,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 39. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52380}
|___(+) {id=52381,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52383,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52384,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52440,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52444,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52431,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52439,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52433,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52435,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52436,slot_type=LeftParen}
        |           |___Token:) {id=52438,slot_type=RightParen}
        |___compoundStatement {id=52386,slot_type=compoundStatement}
            |___Token:{ {id=52387,slot_type=LeftBrace}
            |___(?) {id=52388,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52391,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52395,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52398,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52399,slot_type=Return}
            |           |   |___(?) {id=52400,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52417,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52420,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52430,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52422,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52429,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52419,slot_type=RightParen}
            |           |___Token:; {id=52397,slot_type=Semi}
            |___Token:} {id=52389,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52381, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52381
------------------------------------------------------------


================Reducing node 52383, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52383
------------------------------------------------------------


================Reducing node 52386, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52386
------------------------------------------------------------


================Reducing node 52388, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52388
------------------------------------------------------------


================Reducing node 52391, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52391
------------------------------------------------------------


================Reducing node 52395, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52395
------------------------------------------------------------


================Reducing node 52398, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52398
------------------------------------------------------------


================Reducing node 52400, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52400
------------------------------------------------------------


================Reducing node 52417, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52417
------------------------------------------------------------


================Reducing node 52431, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52431
------------------------------------------------------------


================Reducing node 52420, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52420
------------------------------------------------------------


================Reducing node 52433, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52433
------------------------------------------------------------


================Reducing node 52435, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52435
------------------------------------------------------------


================Reducing node 52439, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52439
------------------------------------------------------------


================Reducing node 52438, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52438
------------------------------------------------------------


================Reducing node 52436, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52436
------------------------------------------------------------


================Reducing node 52430, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52430
------------------------------------------------------------


================Reducing node 52429, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52429
------------------------------------------------------------


================Reducing node 52422, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52422
------------------------------------------------------------


================Reducing node 52419, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52419
------------------------------------------------------------


================Reducing node 52399, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52399
------------------------------------------------------------


================Reducing node 52397, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52397
------------------------------------------------------------


================Reducing node 52389, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52389
------------------------------------------------------------


================Reducing node 52387, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52387
------------------------------------------------------------


================Reducing node 52384, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52384
------------------------------------------------------------


================Reducing node 52440, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52440
------------------------------------------------------------


================Reducing node 52444, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52444
------------------------------------------------------------


======Fixpoint iteration 40. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52380}
|___(+) {id=52381,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52383,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52384,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52440,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52444,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52431,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52439,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52433,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52435,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52436,slot_type=LeftParen}
        |           |___Token:) {id=52438,slot_type=RightParen}
        |___compoundStatement {id=52386,slot_type=compoundStatement}
            |___Token:{ {id=52387,slot_type=LeftBrace}
            |___(?) {id=52388,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52391,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52395,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52398,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52399,slot_type=Return}
            |           |   |___(?) {id=52400,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52417,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52420,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52430,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52422,slot_type=LeftParen}
            |           |           |   |___Token:int {id=52429,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |           |           |___Token:) {id=52419,slot_type=RightParen}
            |           |___Token:; {id=52397,slot_type=Semi}
            |___Token:} {id=52389,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return _Alignof   (int  )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return _Alignof   (int  )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (const)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (const)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (char )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (char )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 41. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52522}
|___(+) {id=52523,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52525,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52526,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52582,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52586,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52573,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52581,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52575,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52577,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52578,slot_type=LeftParen}
        |           |___Token:) {id=52580,slot_type=RightParen}
        |___compoundStatement {id=52528,slot_type=compoundStatement}
            |___Token:{ {id=52529,slot_type=LeftBrace}
            |___(?) {id=52530,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52533,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52537,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52540,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52541,slot_type=Return}
            |           |   |___(?) {id=52542,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52559,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52562,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52572,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52564,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52571,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52561,slot_type=RightParen}
            |           |___Token:; {id=52539,slot_type=Semi}
            |___Token:} {id=52531,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52523, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52523
------------------------------------------------------------


================Reducing node 52525, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52525
------------------------------------------------------------


================Reducing node 52528, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52528
------------------------------------------------------------


================Reducing node 52530, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52530
------------------------------------------------------------


================Reducing node 52533, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52533
------------------------------------------------------------


================Reducing node 52537, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52537
------------------------------------------------------------


================Reducing node 52540, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52540
------------------------------------------------------------


================Reducing node 52542, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52542
------------------------------------------------------------


================Reducing node 52559, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52559
------------------------------------------------------------


================Reducing node 52573, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52573
------------------------------------------------------------


================Reducing node 52562, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52562
------------------------------------------------------------


================Reducing node 52575, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52575
------------------------------------------------------------


================Reducing node 52577, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52577
------------------------------------------------------------


================Reducing node 52581, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52581
------------------------------------------------------------


================Reducing node 52580, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52580
------------------------------------------------------------


================Reducing node 52578, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52578
------------------------------------------------------------


================Reducing node 52572, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52572
------------------------------------------------------------


================Reducing node 52571, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52571
------------------------------------------------------------


================Reducing node 52564, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52564
------------------------------------------------------------


================Reducing node 52561, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52561
------------------------------------------------------------


================Reducing node 52541, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52541
------------------------------------------------------------


================Reducing node 52539, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52539
------------------------------------------------------------


================Reducing node 52531, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52531
------------------------------------------------------------


================Reducing node 52529, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52529
------------------------------------------------------------


================Reducing node 52526, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52526
------------------------------------------------------------


================Reducing node 52582, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52582
------------------------------------------------------------


================Reducing node 52586, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52586
------------------------------------------------------------


======Fixpoint iteration 42. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52522}
|___(+) {id=52523,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52525,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52526,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52582,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52586,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52573,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52581,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52575,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52577,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52578,slot_type=LeftParen}
        |           |___Token:) {id=52580,slot_type=RightParen}
        |___compoundStatement {id=52528,slot_type=compoundStatement}
            |___Token:{ {id=52529,slot_type=LeftBrace}
            |___(?) {id=52530,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52533,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52537,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52540,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52541,slot_type=Return}
            |           |   |___(?) {id=52542,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52559,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52562,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52572,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52564,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52571,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52561,slot_type=RightParen}
            |           |___Token:; {id=52539,slot_type=Semi}
            |___Token:} {id=52531,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 43. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52614}
|___(+) {id=52615,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52617,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52618,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52674,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52678,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52665,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52673,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52667,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52669,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52670,slot_type=LeftParen}
        |           |___Token:) {id=52672,slot_type=RightParen}
        |___compoundStatement {id=52620,slot_type=compoundStatement}
            |___Token:{ {id=52621,slot_type=LeftBrace}
            |___(?) {id=52622,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52625,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52629,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52632,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52633,slot_type=Return}
            |           |   |___(?) {id=52634,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52651,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52654,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52664,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52656,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52663,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52653,slot_type=RightParen}
            |           |___Token:; {id=52631,slot_type=Semi}
            |___Token:} {id=52623,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52615, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52615
------------------------------------------------------------


================Reducing node 52617, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52617
------------------------------------------------------------


================Reducing node 52620, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52620
------------------------------------------------------------


================Reducing node 52622, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52622
------------------------------------------------------------


================Reducing node 52625, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52625
------------------------------------------------------------


================Reducing node 52629, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52629
------------------------------------------------------------


================Reducing node 52632, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52632
------------------------------------------------------------


================Reducing node 52634, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52634
------------------------------------------------------------


================Reducing node 52651, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52651
------------------------------------------------------------


================Reducing node 52665, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52665
------------------------------------------------------------


================Reducing node 52654, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52654
------------------------------------------------------------


================Reducing node 52667, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52667
------------------------------------------------------------


================Reducing node 52669, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52669
------------------------------------------------------------


================Reducing node 52673, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52673
------------------------------------------------------------


================Reducing node 52672, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52672
------------------------------------------------------------


================Reducing node 52670, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52670
------------------------------------------------------------


================Reducing node 52664, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52664
------------------------------------------------------------


================Reducing node 52663, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52663
------------------------------------------------------------


================Reducing node 52656, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52656
------------------------------------------------------------


================Reducing node 52653, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52653
------------------------------------------------------------


================Reducing node 52633, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52633
------------------------------------------------------------


================Reducing node 52631, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52631
------------------------------------------------------------


================Reducing node 52623, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52623
------------------------------------------------------------


================Reducing node 52621, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52621
------------------------------------------------------------


================Reducing node 52618, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52618
------------------------------------------------------------


================Reducing node 52674, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52674
------------------------------------------------------------


================Reducing node 52678, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52678
------------------------------------------------------------


======Fixpoint iteration 44. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52614}
|___(+) {id=52615,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52617,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52618,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52674,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52678,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52665,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52673,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52667,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52669,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52670,slot_type=LeftParen}
        |           |___Token:) {id=52672,slot_type=RightParen}
        |___compoundStatement {id=52620,slot_type=compoundStatement}
            |___Token:{ {id=52621,slot_type=LeftBrace}
            |___(?) {id=52622,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52625,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52629,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52632,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52633,slot_type=Return}
            |           |   |___(?) {id=52634,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52651,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52654,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=52664,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=52656,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52663,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52653,slot_type=RightParen}
            |           |___Token:; {id=52631,slot_type=Semi}
            |___Token:} {id=52623,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof   (long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof   (long )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 45. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52748}
|___(+) {id=52749,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52751,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52752,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52808,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52812,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52799,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52807,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52801,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52803,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52804,slot_type=LeftParen}
        |           |___Token:) {id=52806,slot_type=RightParen}
        |___compoundStatement {id=52754,slot_type=compoundStatement}
            |___Token:{ {id=52755,slot_type=LeftBrace}
            |___(?) {id=52756,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52759,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52763,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52766,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52767,slot_type=Return}
            |           |   |___(?) {id=52768,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52785,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52788,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52798,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52790,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52797,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52787,slot_type=RightParen}
            |           |___Token:; {id=52765,slot_type=Semi}
            |___Token:} {id=52757,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52749, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52749
------------------------------------------------------------


================Reducing node 52751, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52751
------------------------------------------------------------


================Reducing node 52754, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52754
------------------------------------------------------------


================Reducing node 52756, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52756
------------------------------------------------------------


================Reducing node 52759, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52759
------------------------------------------------------------


================Reducing node 52763, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52763
------------------------------------------------------------


================Reducing node 52766, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52766
------------------------------------------------------------


================Reducing node 52768, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52768
------------------------------------------------------------


================Reducing node 52785, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52785
------------------------------------------------------------


================Reducing node 52799, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52799
------------------------------------------------------------


================Reducing node 52788, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52788
------------------------------------------------------------


================Reducing node 52801, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52801
------------------------------------------------------------


================Reducing node 52803, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52803
------------------------------------------------------------


================Reducing node 52807, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52807
------------------------------------------------------------


================Reducing node 52806, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52806
------------------------------------------------------------


================Reducing node 52804, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52804
------------------------------------------------------------


================Reducing node 52798, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52798
------------------------------------------------------------


================Reducing node 52797, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52797
------------------------------------------------------------


================Reducing node 52790, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52790
------------------------------------------------------------


================Reducing node 52787, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52787
------------------------------------------------------------


================Reducing node 52767, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52767
------------------------------------------------------------


================Reducing node 52765, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52765
------------------------------------------------------------


================Reducing node 52757, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52757
------------------------------------------------------------


================Reducing node 52755, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52755
------------------------------------------------------------


================Reducing node 52752, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52752
------------------------------------------------------------


================Reducing node 52808, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52808
------------------------------------------------------------


================Reducing node 52812, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52812
------------------------------------------------------------


======Fixpoint iteration 46. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52748}
|___(+) {id=52749,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52751,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52752,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52808,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=52812,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=52799,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52807,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52801,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52803,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52804,slot_type=LeftParen}
        |           |___Token:) {id=52806,slot_type=RightParen}
        |___compoundStatement {id=52754,slot_type=compoundStatement}
            |___Token:{ {id=52755,slot_type=LeftBrace}
            |___(?) {id=52756,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52759,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52763,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52766,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52767,slot_type=Return}
            |           |   |___(?) {id=52768,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52785,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52788,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52798,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52790,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52797,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52787,slot_type=RightParen}
            |           |___Token:; {id=52765,slot_type=Semi}
            |___Token:} {id=52757,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 47. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52836}
|___(+) {id=52837,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52839,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52840,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52896,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52900,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52887,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52895,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52889,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52891,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52892,slot_type=LeftParen}
        |           |___Token:) {id=52894,slot_type=RightParen}
        |___compoundStatement {id=52842,slot_type=compoundStatement}
            |___Token:{ {id=52843,slot_type=LeftBrace}
            |___(?) {id=52844,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52847,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52851,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52854,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52855,slot_type=Return}
            |           |   |___(?) {id=52856,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52873,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52876,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52886,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52878,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52885,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52875,slot_type=RightParen}
            |           |___Token:; {id=52853,slot_type=Semi}
            |___Token:} {id=52845,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52837, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52837
------------------------------------------------------------


================Reducing node 52839, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52839
------------------------------------------------------------


================Reducing node 52842, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52842
------------------------------------------------------------


================Reducing node 52844, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52844
------------------------------------------------------------


================Reducing node 52847, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52847
------------------------------------------------------------


================Reducing node 52851, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52851
------------------------------------------------------------


================Reducing node 52854, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52854
------------------------------------------------------------


================Reducing node 52856, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52856
------------------------------------------------------------


================Reducing node 52873, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52873
------------------------------------------------------------


================Reducing node 52887, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52887
------------------------------------------------------------


================Reducing node 52876, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52876
------------------------------------------------------------


================Reducing node 52889, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52889
------------------------------------------------------------


================Reducing node 52891, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52891
------------------------------------------------------------


================Reducing node 52895, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52895
------------------------------------------------------------


================Reducing node 52894, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52894
------------------------------------------------------------


================Reducing node 52892, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52892
------------------------------------------------------------


================Reducing node 52886, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52886
------------------------------------------------------------


================Reducing node 52885, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52885
------------------------------------------------------------


================Reducing node 52878, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52878
------------------------------------------------------------


================Reducing node 52875, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52875
------------------------------------------------------------


================Reducing node 52855, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52855
------------------------------------------------------------


================Reducing node 52853, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52853
------------------------------------------------------------


================Reducing node 52845, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52845
------------------------------------------------------------


================Reducing node 52843, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52843
------------------------------------------------------------


================Reducing node 52840, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52840
------------------------------------------------------------


================Reducing node 52896, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52896
------------------------------------------------------------


================Reducing node 52900, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52900
------------------------------------------------------------


======Fixpoint iteration 48. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52836}
|___(+) {id=52837,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52839,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52840,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=52896,slot_type=declarationSpecifiers}
        |       |___Token:int {id=52900,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=52887,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=52895,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=52889,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=52891,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=52892,slot_type=LeftParen}
        |           |___Token:) {id=52894,slot_type=RightParen}
        |___compoundStatement {id=52842,slot_type=compoundStatement}
            |___Token:{ {id=52843,slot_type=LeftBrace}
            |___(?) {id=52844,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52847,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52851,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52854,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52855,slot_type=Return}
            |           |   |___(?) {id=52856,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=52873,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=52876,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=52886,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=52878,slot_type=LeftParen}
            |           |           |   |___Token:long {id=52885,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Long]}
            |           |           |___Token:) {id=52875,slot_type=RightParen}
            |           |___Token:; {id=52853,slot_type=Semi}
            |___Token:} {id=52845,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(long )  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(long )  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 49. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=52979}
|___(+) {id=52980,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52982,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52983,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53039,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53043,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53030,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53038,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53032,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53034,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53035,slot_type=LeftParen}
        |           |___Token:) {id=53037,slot_type=RightParen}
        |___compoundStatement {id=52985,slot_type=compoundStatement}
            |___Token:{ {id=52986,slot_type=LeftBrace}
            |___(?) {id=52987,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52990,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52994,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52997,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52998,slot_type=Return}
            |           |   |___(?) {id=52999,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53016,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53019,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53029,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53021,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53028,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53018,slot_type=RightParen}
            |           |___Token:; {id=52996,slot_type=Semi}
            |___Token:} {id=52988,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 52980, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52980
------------------------------------------------------------


================Reducing node 52982, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52982
------------------------------------------------------------


================Reducing node 52985, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52985
------------------------------------------------------------


================Reducing node 52987, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52987
------------------------------------------------------------


================Reducing node 52990, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52990
------------------------------------------------------------


================Reducing node 52994, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52994
------------------------------------------------------------


================Reducing node 52997, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52997
------------------------------------------------------------


================Reducing node 52999, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52999
------------------------------------------------------------


================Reducing node 53016, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53016
------------------------------------------------------------


================Reducing node 53030, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53030
------------------------------------------------------------


================Reducing node 53019, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53019
------------------------------------------------------------


================Reducing node 53032, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53032
------------------------------------------------------------


================Reducing node 53034, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53034
------------------------------------------------------------


================Reducing node 53038, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53038
------------------------------------------------------------


================Reducing node 53037, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53037
------------------------------------------------------------


================Reducing node 53035, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53035
------------------------------------------------------------


================Reducing node 53029, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53029
------------------------------------------------------------


================Reducing node 53028, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53028
------------------------------------------------------------


================Reducing node 53021, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53021
------------------------------------------------------------


================Reducing node 53018, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53018
------------------------------------------------------------


================Reducing node 52998, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52998
------------------------------------------------------------


================Reducing node 52996, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52996
------------------------------------------------------------


================Reducing node 52988, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52988
------------------------------------------------------------


================Reducing node 52986, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52986
------------------------------------------------------------


================Reducing node 52983, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 52983
------------------------------------------------------------


================Reducing node 53039, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53039
------------------------------------------------------------


================Reducing node 53043, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53043
------------------------------------------------------------


======Fixpoint iteration 50. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=52979}
|___(+) {id=52980,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=52982,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=52983,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53039,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53043,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53030,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53038,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53032,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53034,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53035,slot_type=LeftParen}
        |           |___Token:) {id=53037,slot_type=RightParen}
        |___compoundStatement {id=52985,slot_type=compoundStatement}
            |___Token:{ {id=52986,slot_type=LeftBrace}
            |___(?) {id=52987,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=52990,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=52994,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=52997,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=52998,slot_type=Return}
            |           |   |___(?) {id=52999,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53016,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53019,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53029,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53021,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53028,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53018,slot_type=RightParen}
            |           |___Token:; {id=52996,slot_type=Semi}
            |___Token:} {id=52988,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 51. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53071}
|___(+) {id=53072,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53074,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53075,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53131,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53135,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53122,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53130,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53124,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53126,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53127,slot_type=LeftParen}
        |           |___Token:) {id=53129,slot_type=RightParen}
        |___compoundStatement {id=53077,slot_type=compoundStatement}
            |___Token:{ {id=53078,slot_type=LeftBrace}
            |___(?) {id=53079,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53082,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53086,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53089,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53090,slot_type=Return}
            |           |   |___(?) {id=53091,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53108,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53111,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53121,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53113,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53120,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53110,slot_type=RightParen}
            |           |___Token:; {id=53088,slot_type=Semi}
            |___Token:} {id=53080,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53072, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53072
------------------------------------------------------------


================Reducing node 53074, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53074
------------------------------------------------------------


================Reducing node 53077, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53077
------------------------------------------------------------


================Reducing node 53079, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53079
------------------------------------------------------------


================Reducing node 53082, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53082
------------------------------------------------------------


================Reducing node 53086, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53086
------------------------------------------------------------


================Reducing node 53089, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53089
------------------------------------------------------------


================Reducing node 53091, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53091
------------------------------------------------------------


================Reducing node 53108, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53108
------------------------------------------------------------


================Reducing node 53122, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53122
------------------------------------------------------------


================Reducing node 53111, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53111
------------------------------------------------------------


================Reducing node 53124, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53124
------------------------------------------------------------


================Reducing node 53126, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53126
------------------------------------------------------------


================Reducing node 53130, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53130
------------------------------------------------------------


================Reducing node 53129, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53129
------------------------------------------------------------


================Reducing node 53127, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53127
------------------------------------------------------------


================Reducing node 53121, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53121
------------------------------------------------------------


================Reducing node 53120, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53120
------------------------------------------------------------


================Reducing node 53113, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53113
------------------------------------------------------------


================Reducing node 53110, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53110
------------------------------------------------------------


================Reducing node 53090, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53090
------------------------------------------------------------


================Reducing node 53088, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53088
------------------------------------------------------------


================Reducing node 53080, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53080
------------------------------------------------------------


================Reducing node 53078, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53078
------------------------------------------------------------


================Reducing node 53075, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53075
------------------------------------------------------------


================Reducing node 53131, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53131
------------------------------------------------------------


================Reducing node 53135, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53135
------------------------------------------------------------


======Fixpoint iteration 52. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53071}
|___(+) {id=53072,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53074,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53075,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53131,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53135,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53122,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53130,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53124,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53126,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53127,slot_type=LeftParen}
        |           |___Token:) {id=53129,slot_type=RightParen}
        |___compoundStatement {id=53077,slot_type=compoundStatement}
            |___Token:{ {id=53078,slot_type=LeftBrace}
            |___(?) {id=53079,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53082,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53086,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53089,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53090,slot_type=Return}
            |           |   |___(?) {id=53091,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53108,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53111,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53121,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53113,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53120,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53110,slot_type=RightParen}
            |           |___Token:; {id=53088,slot_type=Semi}
            |___Token:} {id=53080,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return __alignof__(float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return __alignof__(float)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 53. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53204}
|___(+) {id=53205,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53207,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53208,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53264,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53268,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53255,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53263,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53257,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53259,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53260,slot_type=LeftParen}
        |           |___Token:) {id=53262,slot_type=RightParen}
        |___compoundStatement {id=53210,slot_type=compoundStatement}
            |___Token:{ {id=53211,slot_type=LeftBrace}
            |___(?) {id=53212,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53215,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53219,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53222,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53223,slot_type=Return}
            |           |   |___(?) {id=53224,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53241,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53244,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53254,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53246,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53253,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53243,slot_type=RightParen}
            |           |___Token:; {id=53221,slot_type=Semi}
            |___Token:} {id=53213,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53205, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53205
------------------------------------------------------------


================Reducing node 53207, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53207
------------------------------------------------------------


================Reducing node 53210, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53210
------------------------------------------------------------


================Reducing node 53212, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53212
------------------------------------------------------------


================Reducing node 53215, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53215
------------------------------------------------------------


================Reducing node 53219, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53219
------------------------------------------------------------


================Reducing node 53222, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53222
------------------------------------------------------------


================Reducing node 53224, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53224
------------------------------------------------------------


================Reducing node 53241, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53241
------------------------------------------------------------


================Reducing node 53255, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53255
------------------------------------------------------------


================Reducing node 53244, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53244
------------------------------------------------------------


================Reducing node 53257, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53257
------------------------------------------------------------


================Reducing node 53259, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53259
------------------------------------------------------------


================Reducing node 53263, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53263
------------------------------------------------------------


================Reducing node 53262, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53262
------------------------------------------------------------


================Reducing node 53260, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53260
------------------------------------------------------------


================Reducing node 53254, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53254
------------------------------------------------------------


================Reducing node 53253, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53253
------------------------------------------------------------


================Reducing node 53246, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53246
------------------------------------------------------------


================Reducing node 53243, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53243
------------------------------------------------------------


================Reducing node 53223, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53223
------------------------------------------------------------


================Reducing node 53221, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53221
------------------------------------------------------------


================Reducing node 53213, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53213
------------------------------------------------------------


================Reducing node 53211, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53211
------------------------------------------------------------


================Reducing node 53208, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53208
------------------------------------------------------------


================Reducing node 53264, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53264
------------------------------------------------------------


================Reducing node 53268, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53268
------------------------------------------------------------


======Fixpoint iteration 54. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53204}
|___(+) {id=53205,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53207,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53208,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53264,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53268,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53255,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53263,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53257,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53259,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53260,slot_type=LeftParen}
        |           |___Token:) {id=53262,slot_type=RightParen}
        |___compoundStatement {id=53210,slot_type=compoundStatement}
            |___Token:{ {id=53211,slot_type=LeftBrace}
            |___(?) {id=53212,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53215,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53219,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53222,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53223,slot_type=Return}
            |           |   |___(?) {id=53224,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53241,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53244,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53254,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53246,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53253,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53243,slot_type=RightParen}
            |           |___Token:; {id=53221,slot_type=Semi}
            |___Token:} {id=53213,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 55. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53292}
|___(+) {id=53293,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53295,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53296,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53352,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53356,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53343,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53351,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53345,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53347,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53348,slot_type=LeftParen}
        |           |___Token:) {id=53350,slot_type=RightParen}
        |___compoundStatement {id=53298,slot_type=compoundStatement}
            |___Token:{ {id=53299,slot_type=LeftBrace}
            |___(?) {id=53300,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53303,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53307,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53310,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53311,slot_type=Return}
            |           |   |___(?) {id=53312,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53329,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53332,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53342,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53334,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53341,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53331,slot_type=RightParen}
            |           |___Token:; {id=53309,slot_type=Semi}
            |___Token:} {id=53301,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53293, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53293
------------------------------------------------------------


================Reducing node 53295, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53295
------------------------------------------------------------


================Reducing node 53298, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53298
------------------------------------------------------------


================Reducing node 53300, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53300
------------------------------------------------------------


================Reducing node 53303, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53303
------------------------------------------------------------


================Reducing node 53307, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53307
------------------------------------------------------------


================Reducing node 53310, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53310
------------------------------------------------------------


================Reducing node 53312, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53312
------------------------------------------------------------


================Reducing node 53329, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53329
------------------------------------------------------------


================Reducing node 53343, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53343
------------------------------------------------------------


================Reducing node 53332, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53332
------------------------------------------------------------


================Reducing node 53345, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53345
------------------------------------------------------------


================Reducing node 53347, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53347
------------------------------------------------------------


================Reducing node 53351, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53351
------------------------------------------------------------


================Reducing node 53350, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53350
------------------------------------------------------------


================Reducing node 53348, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53348
------------------------------------------------------------


================Reducing node 53342, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53342
------------------------------------------------------------


================Reducing node 53341, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53341
------------------------------------------------------------


================Reducing node 53334, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53334
------------------------------------------------------------


================Reducing node 53331, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53331
------------------------------------------------------------


================Reducing node 53311, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53311
------------------------------------------------------------


================Reducing node 53309, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53309
------------------------------------------------------------


================Reducing node 53301, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53301
------------------------------------------------------------


================Reducing node 53299, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53299
------------------------------------------------------------


================Reducing node 53296, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53296
------------------------------------------------------------


================Reducing node 53352, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53352
------------------------------------------------------------


================Reducing node 53356, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53356
------------------------------------------------------------


======Fixpoint iteration 56. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53292}
|___(+) {id=53293,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53295,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53296,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53352,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53356,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53343,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53351,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53345,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53347,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53348,slot_type=LeftParen}
        |           |___Token:) {id=53350,slot_type=RightParen}
        |___compoundStatement {id=53298,slot_type=compoundStatement}
            |___Token:{ {id=53299,slot_type=LeftBrace}
            |___(?) {id=53300,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53303,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53307,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53310,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53311,slot_type=Return}
            |           |   |___(?) {id=53312,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53329,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53332,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53342,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53334,slot_type=LeftParen}
            |           |           |   |___Token:float {id=53341,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Float]}
            |           |           |___Token:) {id=53331,slot_type=RightParen}
            |           |___Token:; {id=53309,slot_type=Semi}
            |___Token:} {id=53301,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return _Alignof   (float)  ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return _Alignof   (float)  ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 57. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53436}
|___(+) {id=53437,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53439,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53440,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53496,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53500,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53487,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53495,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53489,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53491,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53492,slot_type=LeftParen}
        |           |___Token:) {id=53494,slot_type=RightParen}
        |___compoundStatement {id=53442,slot_type=compoundStatement}
            |___Token:{ {id=53443,slot_type=LeftBrace}
            |___(?) {id=53444,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53447,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53451,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53454,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53455,slot_type=Return}
            |           |   |___(?) {id=53456,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53473,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53476,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53486,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53478,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53485,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53475,slot_type=RightParen}
            |           |___Token:; {id=53453,slot_type=Semi}
            |___Token:} {id=53445,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53437, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53437
------------------------------------------------------------


================Reducing node 53439, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53439
------------------------------------------------------------


================Reducing node 53442, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53442
------------------------------------------------------------


================Reducing node 53444, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53444
------------------------------------------------------------


================Reducing node 53447, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53447
------------------------------------------------------------


================Reducing node 53451, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53451
------------------------------------------------------------


================Reducing node 53454, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53454
------------------------------------------------------------


================Reducing node 53456, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53456
------------------------------------------------------------


================Reducing node 53473, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53473
------------------------------------------------------------


================Reducing node 53487, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53487
------------------------------------------------------------


================Reducing node 53476, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53476
------------------------------------------------------------


================Reducing node 53489, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53489
------------------------------------------------------------


================Reducing node 53491, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53491
------------------------------------------------------------


================Reducing node 53495, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53495
------------------------------------------------------------


================Reducing node 53494, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53494
------------------------------------------------------------


================Reducing node 53492, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53492
------------------------------------------------------------


================Reducing node 53486, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53486
------------------------------------------------------------


================Reducing node 53485, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53485
------------------------------------------------------------


================Reducing node 53478, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53478
------------------------------------------------------------


================Reducing node 53475, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53475
------------------------------------------------------------


================Reducing node 53455, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53455
------------------------------------------------------------


================Reducing node 53453, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53453
------------------------------------------------------------


================Reducing node 53445, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53445
------------------------------------------------------------


================Reducing node 53443, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53443
------------------------------------------------------------


================Reducing node 53440, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53440
------------------------------------------------------------


================Reducing node 53496, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53496
------------------------------------------------------------


================Reducing node 53500, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53500
------------------------------------------------------------


======Fixpoint iteration 58. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53436}
|___(+) {id=53437,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53439,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53440,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53496,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53500,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53487,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53495,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53489,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53491,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53492,slot_type=LeftParen}
        |           |___Token:) {id=53494,slot_type=RightParen}
        |___compoundStatement {id=53442,slot_type=compoundStatement}
            |___Token:{ {id=53443,slot_type=LeftBrace}
            |___(?) {id=53444,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53447,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53451,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53454,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53455,slot_type=Return}
            |           |   |___(?) {id=53456,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53473,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53476,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53486,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53478,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53485,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53475,slot_type=RightParen}
            |           |___Token:; {id=53453,slot_type=Semi}
            |___Token:} {id=53445,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 59. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53528}
|___(+) {id=53529,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53531,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53532,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53588,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53592,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53579,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53587,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53581,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53583,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53584,slot_type=LeftParen}
        |           |___Token:) {id=53586,slot_type=RightParen}
        |___compoundStatement {id=53534,slot_type=compoundStatement}
            |___Token:{ {id=53535,slot_type=LeftBrace}
            |___(?) {id=53536,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53539,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53543,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53546,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53547,slot_type=Return}
            |           |   |___(?) {id=53548,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53565,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53568,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53578,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53570,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53577,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53567,slot_type=RightParen}
            |           |___Token:; {id=53545,slot_type=Semi}
            |___Token:} {id=53537,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53529, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53529
------------------------------------------------------------


================Reducing node 53531, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53531
------------------------------------------------------------


================Reducing node 53534, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53534
------------------------------------------------------------


================Reducing node 53536, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53536
------------------------------------------------------------


================Reducing node 53539, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53539
------------------------------------------------------------


================Reducing node 53543, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53543
------------------------------------------------------------


================Reducing node 53546, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53546
------------------------------------------------------------


================Reducing node 53548, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53548
------------------------------------------------------------


================Reducing node 53565, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53565
------------------------------------------------------------


================Reducing node 53579, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53579
------------------------------------------------------------


================Reducing node 53568, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53568
------------------------------------------------------------


================Reducing node 53581, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53581
------------------------------------------------------------


================Reducing node 53583, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53583
------------------------------------------------------------


================Reducing node 53587, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53587
------------------------------------------------------------


================Reducing node 53586, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53586
------------------------------------------------------------


================Reducing node 53584, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53584
------------------------------------------------------------


================Reducing node 53578, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53578
------------------------------------------------------------


================Reducing node 53577, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53577
------------------------------------------------------------


================Reducing node 53570, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53570
------------------------------------------------------------


================Reducing node 53567, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53567
------------------------------------------------------------


================Reducing node 53547, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53547
------------------------------------------------------------


================Reducing node 53545, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53545
------------------------------------------------------------


================Reducing node 53537, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53537
------------------------------------------------------------


================Reducing node 53535, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53535
------------------------------------------------------------


================Reducing node 53532, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53532
------------------------------------------------------------


================Reducing node 53588, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53588
------------------------------------------------------------


================Reducing node 53592, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53592
------------------------------------------------------------


======Fixpoint iteration 60. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53528}
|___(+) {id=53529,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53531,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53532,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53588,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53592,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53579,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53587,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53581,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53583,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53584,slot_type=LeftParen}
        |           |___Token:) {id=53586,slot_type=RightParen}
        |___compoundStatement {id=53534,slot_type=compoundStatement}
            |___Token:{ {id=53535,slot_type=LeftBrace}
            |___(?) {id=53536,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53539,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53543,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53546,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53547,slot_type=Return}
            |           |   |___(?) {id=53548,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53565,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53568,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:_Alignof {id=53578,slot_type=[altnt_block__unaryExpression_5,Alignof]}
            |           |           |   |___Token:( {id=53570,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53577,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53567,slot_type=RightParen}
            |           |___Token:; {id=53545,slot_type=Semi}
            |___Token:} {id=53537,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main[]{
        return _Alignof   (double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main[]{
        return _Alignof   (double) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 61. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53662}
|___(+) {id=53663,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53665,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53666,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53722,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53726,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53713,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53721,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53715,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53717,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53718,slot_type=LeftParen}
        |           |___Token:) {id=53720,slot_type=RightParen}
        |___compoundStatement {id=53668,slot_type=compoundStatement}
            |___Token:{ {id=53669,slot_type=LeftBrace}
            |___(?) {id=53670,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53673,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53677,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53680,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53681,slot_type=Return}
            |           |   |___(?) {id=53682,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53699,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53702,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53712,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53704,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53711,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53701,slot_type=RightParen}
            |           |___Token:; {id=53679,slot_type=Semi}
            |___Token:} {id=53671,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53663, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53663
------------------------------------------------------------


================Reducing node 53665, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53665
------------------------------------------------------------


================Reducing node 53668, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53668
------------------------------------------------------------


================Reducing node 53670, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53670
------------------------------------------------------------


================Reducing node 53673, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53673
------------------------------------------------------------


================Reducing node 53677, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53677
------------------------------------------------------------


================Reducing node 53680, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53680
------------------------------------------------------------


================Reducing node 53682, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53682
------------------------------------------------------------


================Reducing node 53699, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53699
------------------------------------------------------------


================Reducing node 53713, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    signed main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53713
------------------------------------------------------------


================Reducing node 53702, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53702
------------------------------------------------------------


================Reducing node 53715, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    signed main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53715
------------------------------------------------------------


================Reducing node 53717, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    signed main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    signed main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53717
------------------------------------------------------------


================Reducing node 53721, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53721
------------------------------------------------------------


================Reducing node 53720, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53720
------------------------------------------------------------


================Reducing node 53718, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53718
------------------------------------------------------------


================Reducing node 53712, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53712
------------------------------------------------------------


================Reducing node 53711, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53711
------------------------------------------------------------


================Reducing node 53704, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53704
------------------------------------------------------------


================Reducing node 53701, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53701
------------------------------------------------------------


================Reducing node 53681, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53681
------------------------------------------------------------


================Reducing node 53679, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53679
------------------------------------------------------------


================Reducing node 53671, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53671
------------------------------------------------------------


================Reducing node 53669, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53669
------------------------------------------------------------


================Reducing node 53666, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53666
------------------------------------------------------------


================Reducing node 53722, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53722
------------------------------------------------------------


================Reducing node 53726, size=12================

The current best program is the following

    --file: t.c--
    signed main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53726
------------------------------------------------------------


======Fixpoint iteration 62. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53662}
|___(+) {id=53663,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53665,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53666,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53722,slot_type=declarationSpecifiers}
        |       |___Token:signed {id=53726,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Signed]}
        |___directDeclarator {id=53713,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53721,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53715,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53717,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53718,slot_type=LeftParen}
        |           |___Token:) {id=53720,slot_type=RightParen}
        |___compoundStatement {id=53668,slot_type=compoundStatement}
            |___Token:{ {id=53669,slot_type=LeftBrace}
            |___(?) {id=53670,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53673,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53677,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53680,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53681,slot_type=Return}
            |           |   |___(?) {id=53682,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53699,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53702,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53712,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53704,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53711,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53701,slot_type=RightParen}
            |           |___Token:; {id=53679,slot_type=Semi}
            |___Token:} {id=53671,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    typedefmain(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    typedefmain(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    extern main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    extern main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    static main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    static main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Thread_local main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Thread_local main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    auto   main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    auto   main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    register main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    register main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    void   main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    void   main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    const  main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    const  main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    inline main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    inline main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Noreturn main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Noreturn main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __inline__ main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __inline__ main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __stdcall main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __stdcall main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    char   main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    char   main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    short  main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    short  main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


=Fixpoint iteration 63. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=53750}
|___(+) {id=53751,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53753,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53754,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53810,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53814,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53801,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53809,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53803,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53805,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53806,slot_type=LeftParen}
        |           |___Token:) {id=53808,slot_type=RightParen}
        |___compoundStatement {id=53756,slot_type=compoundStatement}
            |___Token:{ {id=53757,slot_type=LeftBrace}
            |___(?) {id=53758,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53761,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53765,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53768,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53769,slot_type=Return}
            |           |   |___(?) {id=53770,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53787,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53790,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53800,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53792,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53799,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53789,slot_type=RightParen}
            |           |___Token:; {id=53767,slot_type=Semi}
            |___Token:} {id=53759,slot_type=RightBrace}
------------------------------------------------------------


================Reducing node 53751, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53751
------------------------------------------------------------


================Reducing node 53753, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                                   ;
    --file: <formatted tokenized program in its original format>--
                                   ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53753
------------------------------------------------------------


================Reducing node 53756, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53756
------------------------------------------------------------


================Reducing node 53758, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53758
------------------------------------------------------------


================Reducing node 53761, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53761
------------------------------------------------------------


================Reducing node 53765, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
                                   ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
                                   ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53765
------------------------------------------------------------


================Reducing node 53768, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53768
------------------------------------------------------------


================Reducing node 53770, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53770
------------------------------------------------------------


================Reducing node 53787, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main(){
        return                     ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return                     ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53787
------------------------------------------------------------


================Reducing node 53801, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int    main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53801
------------------------------------------------------------


================Reducing node 53790, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53790
------------------------------------------------------------


================Reducing node 53803, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    int    main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53803
------------------------------------------------------------


================Reducing node 53805, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int    main  {
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main  {
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53805
------------------------------------------------------------


================Reducing node 53809, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53809
------------------------------------------------------------


================Reducing node 53808, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53808
------------------------------------------------------------


================Reducing node 53806, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53806
------------------------------------------------------------


================Reducing node 53800, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53800
------------------------------------------------------------


================Reducing node 53799, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53799
------------------------------------------------------------


================Reducing node 53792, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53792
------------------------------------------------------------


================Reducing node 53789, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53789
------------------------------------------------------------


================Reducing node 53769, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53769
------------------------------------------------------------


================Reducing node 53767, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53767
------------------------------------------------------------


================Reducing node 53759, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53759
------------------------------------------------------------


================Reducing node 53757, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53757
------------------------------------------------------------


================Reducing node 53754, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
           main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53754
------------------------------------------------------------


================Reducing node 53810, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:declarationSpecifiers]can be epsilon
    --file: t.c--
           main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
           main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53810
------------------------------------------------------------


================Reducing node 53814, size=12================

The current best program is the following

    --file: t.c--
    int    main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53814
------------------------------------------------------------


======Fixpoint iteration 64. Reducer: subtree_replacer======

The spar-tree is the following.
translationUnit {id=53750}
|___(+) {id=53751,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=53753,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=53754,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=53810,slot_type=declarationSpecifiers}
        |       |___Token:int {id=53814,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=53801,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=53809,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=53803,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=53805,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=53806,slot_type=LeftParen}
        |           |___Token:) {id=53808,slot_type=RightParen}
        |___compoundStatement {id=53756,slot_type=compoundStatement}
            |___Token:{ {id=53757,slot_type=LeftBrace}
            |___(?) {id=53758,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=53761,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___jumpStatement {id=53765,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=53768,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=53769,slot_type=Return}
            |           |   |___(?) {id=53770,slot_type=optional__postfixExpression_1}
            |           |       |___aux_rule__unaryExpression_9 {id=53787,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,aux_rule__unaryExpression_9]}
            |           |           |___aux_rule__unaryExpression_11 {id=53790,slot_type=[altnt_block__unaryExpression_4,aux_rule__unaryExpression_11]}
            |           |           |   |___Token:__alignof__ {id=53800,slot_type=[altnt_block__unaryExpression_5,Alignof_gcc]}
            |           |           |   |___Token:( {id=53792,slot_type=LeftParen}
            |           |           |   |___Token:double {id=53799,slot_type=[altnt_block__unaryExpression_6,typeName,specifierQualifierList,altnt_block__specifierQualifierList_3,typeSpecifierWithAttrList,typeSpecifier,Double]}
            |           |           |___Token:) {id=53789,slot_type=RightParen}
            |           |___Token:; {id=53767,slot_type=Semi}
            |___Token:} {id=53759,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    long   main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    long   main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    float  main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    float  main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    double main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    double main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    unsigned main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    unsigned main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Bool  main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Bool  main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    _Complex main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    _Complex main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128 main(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128 main(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128dmain(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128dmain(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    __m128imain(){
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    __m128imain(){
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main[]{
        return __alignof__(double) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main[]{
        return __alignof__(double) ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: replace a node with a node generated by another alternative rule
    --file: t.c--
    int    main(){
        return __alignof__(signed) ;
    }
    --file: <formatted tokenized program in its original format>--
    int    main(){
        return __alignof__(signed) ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


#test success = 33
#test failure = 878
#test result cache hits = 0
#test execution cancelled = 0
#node edit action set cache hits = 0
#external test execution cache hits = 0
