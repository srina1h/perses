=====================Reduction starts.======================

The initial program size is 37
The command line options are:
---
help: false
verbosityFlags:
  groupName: "Verbosity"
  verbosity: "INFO"
  listVerbosity: false
versionFlags:
  groupName: "Version"
  version: false
inputFlags:
  groupName: "Inputs"
  testScript: "r.sh"
  inputFile: "t.c"
  deps: []
  sourceFile: "t.c"
resultOutputFlags:
  groupName: "Outputs"
  outputDir: "result_reduction_golden_test_perses_node_priority_with_dfs_delta_t.c"
reductionControlFlags:
  groupName: "General Reduction Control"
  fixpoint: true
  numOfThreads: 1
  codeFormat: "COMPACT_ORIG_FORMAT"
  testScriptExecutionTimeoutInSeconds: 600
  testScriptExecutionKeepWaitingAfterTimeout: true
outputRefiningFlags:
  groupName: "Output Refining Control"
  callFormatter: false
  formatCmd: ""
  callCReduce: false
  creduceCmd: "creduce"
algorithmControlFlags:
  groupName: "Reduction Algorithm Control"
  reductionAlgorithm: "perses_node_priority_with_dfs_delta"
  listAllReductionAlgorithms: false
  rebuildParseTreeEachIteration: true
  enableTokenSlicer: false
  enableTreeSlicer: false
  enableLineSlicer: false
  defaultDeltaDebuggerTypeForKleene: "DFS"
  maxEditCountForRegularRuleNode: 100
  maxBfsDepthForRegularRuleNode: 5
  stopAtFirstCompatibleChildForRegularRuleNode: false
  enableTrec: false
cacheControlFlags:
  groupName: "Cache Control"
  queryCaching: "FALSE"
  nodeActionSetCaching: false
  queryCacheRefreshThreshold: 0
  enableLightweightRefreshing: true
  enablePassCache: false
  globalCacheFile: null
  pathToSaveUpdatedGlobalCache: null
profilingFlags:
  groupName: "Profiling"
  progressDumpFile: "reduction_progress.txt"
  appendToProgressDumpFile: true
  statDumpFile: null
  profileQueryCacheTime: null
  profileQueryCacheTimeCSV: null
  profileQueryCacheMemory: null
  actionSetProfiler: null
  profileDeltaDebugger: null
experimentFlags:
  groupName: "Experiment Control"
  cacheType: "COMPACT_QUERY_CACHE"
  onDemandReducerClasses: null
languageControlFlags:
  groupName: "Language Control"
  languageName: ""
  listLangs: false
  designatedParserFacadeClassName: ""
  listParserFacades: false
  languageJarFiles: []
vulcanFlags:
  groupName: "Vulcan Reducer Control"
  enableVulcan: false
  nonDeletionIterationLimit: 10
  windowSize: 4
  vulcanFixpoint: false

Parser Facade: class org.perses.grammar.c.PnfCParserFacade
------------------------------------------------------------


The sanity check has been performed. The result is PassingSanityCheckResult
=Fixpoint iteration 1. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=1}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=185,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
    |   |___(?) {id=186,slot_type=optional__functionDefinition_2}
    |   |   |___(+) {id=243,slot_type=declarationSpecifiers}
    |   |       |___Token:void {id=247,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Void]}
    |   |___directDeclarator {id=191,slot_type=[declarator,directDeclarator]}
    |   |   |___Token:fun {id=242,slot_type=[aux_rule__directDeclarator_9,Identifier]}
    |   |   |___(*) {id=193,slot_type=kleene_star__directDeclarator_7}
    |   |       |___aux_rule__directDeclarator_15 {id=195,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
    |   |           |___Token:( {id=196,slot_type=LeftParen}
    |   |           |___parameterList {id=200,slot_type=[altnt_block__directDeclarator_11,parameterTypeList,parameterList]}
    |   |           |   |___(+) {id=231,slot_type=[parameterDeclaration,declarationSpecifiers]}
    |   |           |   |   |___Token:int {id=241,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
    |   |           |   |   |___Token:a {id=238,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,typedefName,Identifier]}
    |   |           |   |___(*) {id=202,slot_type=kleene_star__parameterList_1}
    |   |           |       |___aux_rule__parameterList_2 {id=203,slot_type=aux_rule__parameterList_2}
    |   |           |       |   |___Token:, {id=218,slot_type=Comma}
    |   |           |       |   |___(+) {id=220,slot_type=[parameterDeclaration,declarationSpecifiers]}
    |   |           |       |       |___Token:int {id=230,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
    |   |           |       |       |___Token:b {id=227,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,typedefName,Identifier]}
    |   |           |       |___aux_rule__parameterList_2 {id=204,slot_type=aux_rule__parameterList_2}
    |   |           |           |___Token:, {id=205,slot_type=Comma}
    |   |           |           |___(+) {id=207,slot_type=[parameterDeclaration,declarationSpecifiers]}
    |   |           |               |___Token:int {id=217,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
    |   |           |               |___Token:c {id=214,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,typedefName,Identifier]}
    |   |           |___Token:) {id=198,slot_type=RightParen}
    |   |___compoundStatement {id=188,slot_type=compoundStatement}
    |       |___Token:{ {id=189,slot_type=LeftBrace}
    |       |___Token:} {id=190,slot_type=RightBrace}
    |___functionDefinition {id=5,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=6,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=180,slot_type=declarationSpecifiers}
        |       |___Token:int {id=184,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=171,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=179,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=173,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=175,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=176,slot_type=LeftParen}
        |           |___Token:) {id=178,slot_type=RightParen}
        |___compoundStatement {id=8,slot_type=compoundStatement}
            |___Token:{ {id=9,slot_type=LeftBrace}
            |___(?) {id=10,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=13,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___aux_rule__declaration_3 {id=135,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=136,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=170,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=137,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=140,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:var {id=166,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=142,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=143,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=144,slot_type=Assign}
            |       |   |               |___Token:99 {id=163,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |___Token:; {id=138,slot_type=Semi}
            |       |___expressionStatement {id=46,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |       |   |___(?) {id=47,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=65,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression]}
            |       |   |       |___Token:fun {id=133,slot_type=[aux_rule__postfixExpression_4,Identifier]}
            |       |   |       |___(*) {id=67,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___aux_rule__postfixExpression_11 {id=69,slot_type=[aux_rule__postfixExpression_3,aux_rule__postfixExpression_11]}
            |       |   |               |___Token:( {id=70,slot_type=LeftParen}
            |       |   |               |___(?) {id=71,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___expression {id=73,slot_type=expression}
            |       |   |               |       |___Token:1 {id=132,slot_type=[assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |               |       |___(*) {id=75,slot_type=kleene_star__expression_1}
            |       |   |               |           |___aux_rule__expression_2 {id=76,slot_type=aux_rule__expression_2}
            |       |   |               |           |   |___Token:, {id=97,slot_type=Comma}
            |       |   |               |           |   |___Token:var {id=115,slot_type=[assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |       |   |               |           |___aux_rule__expression_2 {id=77,slot_type=aux_rule__expression_2}
            |       |   |               |               |___Token:, {id=78,slot_type=Comma}
            |       |   |               |               |___Token:2 {id=96,slot_type=[assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |               |___Token:) {id=72,slot_type=RightParen}
            |       |   |___Token:; {id=48,slot_type=Semi}
            |       |___jumpStatement {id=19,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=22,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=23,slot_type=Return}
            |           |   |___(?) {id=24,slot_type=optional__postfixExpression_1}
            |           |       |___Token:var {id=43,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |           |___Token:; {id=21,slot_type=Semi}
            |___Token:} {id=11,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=37==================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]remove whole except first
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]dd@1
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]dd@1
    --file: t.c--
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 5, size=37==================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(int a, int b, int c) {
    }
                  ;
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
                  ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(int a, int b, int c) {
    }
                    ;
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
                    ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(int a, int b, int c) {
    }
                ;
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
                ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(int a, int b, int c) {
    }
      int var = 99;
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
      int var = 99;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


==================Reducing node 8, size=37==================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 10, size=37==================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


=================Reducing node 13, size=37==================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]remove whole except first
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@2
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 185, size=37=================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 185
------------------------------------------------------------


=================Reducing node 191, size=37=================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun                      {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun                      {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void         a                {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void         a                {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 191
------------------------------------------------------------


=================Reducing node 193, size=37=================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    void fun                      {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun                      {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 193
------------------------------------------------------------


=================Reducing node 195, size=37=================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun                      {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun                      {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 195
------------------------------------------------------------


=================Reducing node 46, size=37==================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
                    ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
                    ;
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 46
------------------------------------------------------------


=================Reducing node 200, size=37=================

The current best program is the following

    --file: t.c--
    void fun(int a, int b, int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(int                ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int                ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(    a              ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(    a              ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(       int         ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(       int         ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(           b       ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(           b       ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(              int  ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(              int  ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(                  c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                  c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(int a              ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(int a              ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(       int b       ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(       int b       ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(              int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(              int c) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 200 from 37 to 29
------------------------------------------------------------


=================Reducing node 47, size=29==================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
                    ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
                    ;
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 47
------------------------------------------------------------


=================Reducing node 65, size=29==================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
                    ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
                    ;
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun           ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun           ;
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
          1         ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
          1         ;
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
          1, var, 2 ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
          1, var, 2 ;
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 67, size=29==================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__postfixExpression_2]dd@1
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun           ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun           ;
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 67
------------------------------------------------------------


=================Reducing node 69, size=29==================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun           ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun           ;
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 69
------------------------------------------------------------


=================Reducing node 135, size=29=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
                  ;
      fun(1, var, 2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
                  ;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 135
------------------------------------------------------------


=================Reducing node 71, size=29==================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(         );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(         );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 71
------------------------------------------------------------


=================Reducing node 73, size=29==================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1, var, 2);
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(         );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(         );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1        );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(1        );
      return var;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(        2);
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(        2);
      return var;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 73 from 29 to 25
------------------------------------------------------------


=================Reducing node 171, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main   {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main   {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 171
------------------------------------------------------------


=================Reducing node 137, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__declaration_2]dd@1
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int         ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int         ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 137
------------------------------------------------------------


=================Reducing node 140, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int         ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int         ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var     ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var     ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 140
------------------------------------------------------------


=================Reducing node 19, size=25==================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
                ;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
                ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 188, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 188
------------------------------------------------------------


=================Reducing node 173, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
    void fun(                   ) {
    }
    int main   {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main   {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 173
------------------------------------------------------------


=================Reducing node 175, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main   {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main   {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 175
------------------------------------------------------------


=================Reducing node 142, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__initDeclarator_2]dd@1
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var     ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var     ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 142
------------------------------------------------------------


=================Reducing node 143, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var     ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var     ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 143
------------------------------------------------------------


=================Reducing node 22, size=25==================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return    ;
    }
    --file: <formatted tokenized program in its original format>--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 22
------------------------------------------------------------


=================Reducing node 242, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 242
------------------------------------------------------------


=================Reducing node 198, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 198
------------------------------------------------------------


=================Reducing node 196, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 196
------------------------------------------------------------


=================Reducing node 190, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 190
------------------------------------------------------------


=================Reducing node 189, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 189
------------------------------------------------------------


=================Reducing node 186, size=25=================

The current best program is the following

    --file: t.c--
    void fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 186 from 25 to 24
------------------------------------------------------------


=================Reducing node 179, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 179
------------------------------------------------------------


=================Reducing node 178, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 178
------------------------------------------------------------


=================Reducing node 176, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 176
------------------------------------------------------------


=================Reducing node 166, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 166
------------------------------------------------------------


=================Reducing node 163, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 163
------------------------------------------------------------


=================Reducing node 144, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 144
------------------------------------------------------------


=================Reducing node 138, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 138
------------------------------------------------------------


=================Reducing node 136, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 136
------------------------------------------------------------


=================Reducing node 170, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 170
------------------------------------------------------------


=================Reducing node 133, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 133
------------------------------------------------------------


=================Reducing node 115, size=24=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 115
------------------------------------------------------------


=================Reducing node 72, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 72
------------------------------------------------------------


=================Reducing node 70, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 70
------------------------------------------------------------


=================Reducing node 48, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 48
------------------------------------------------------------


=================Reducing node 24, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return    ;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 24
------------------------------------------------------------


=================Reducing node 43, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


=================Reducing node 23, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 23
------------------------------------------------------------


=================Reducing node 21, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 11, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


==================Reducing node 9, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


==================Reducing node 6, size=24==================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
    int main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 0
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 6 from 24 to 23
------------------------------------------------------------


=Fixpoint iteration 2. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=248}
|___(+) {id=249,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=358,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
    |   |___directDeclarator {id=363,slot_type=[declarator,directDeclarator]}
    |   |   |___Token:fun {id=371,slot_type=[aux_rule__directDeclarator_9,Identifier]}
    |   |   |___(*) {id=365,slot_type=kleene_star__directDeclarator_7}
    |   |       |___aux_rule__directDeclarator_15 {id=367,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
    |   |           |___Token:( {id=368,slot_type=LeftParen}
    |   |           |___Token:) {id=370,slot_type=RightParen}
    |   |___compoundStatement {id=360,slot_type=compoundStatement}
    |       |___Token:{ {id=361,slot_type=LeftBrace}
    |       |___Token:} {id=362,slot_type=RightBrace}
    |___functionDefinition {id=252,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___directDeclarator {id=349,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=357,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=351,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=353,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=354,slot_type=LeftParen}
        |           |___Token:) {id=356,slot_type=RightParen}
        |___compoundStatement {id=254,slot_type=compoundStatement}
            |___Token:{ {id=255,slot_type=LeftBrace}
            |___(?) {id=256,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=259,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___aux_rule__declaration_3 {id=313,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=314,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=348,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=315,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=318,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:var {id=344,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=320,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=321,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=322,slot_type=Assign}
            |       |   |               |___Token:99 {id=341,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |___Token:; {id=316,slot_type=Semi}
            |       |___aux_rule__declaration_3 {id=291,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=292,slot_type=declarationSpecifiers}
            |       |   |   |___Token:fun {id=311,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,typedefName,Identifier]}
            |       |   |___(?) {id=293,slot_type=optional__declaration_2}
            |       |   |   |___aux_rule__directDeclarator_16 {id=300,slot_type=[initDeclaratorList,initDeclarator,declarator,directDeclarator,aux_rule__directDeclarator_9,aux_rule__directDeclarator_16]}
            |       |   |       |___Token:( {id=301,slot_type=LeftParen}
            |       |   |       |___Token:var {id=306,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___Token:) {id=303,slot_type=RightParen}
            |       |   |___Token:; {id=294,slot_type=Semi}
            |       |___jumpStatement {id=265,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=268,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=269,slot_type=Return}
            |           |   |___(?) {id=270,slot_type=optional__postfixExpression_1}
            |           |       |___Token:var {id=289,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |           |___Token:; {id=267,slot_type=Semi}
            |___Token:} {id=257,slot_type=RightBrace}
------------------------------------------------------------


=================Reducing node 249, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]remove whole except first
    --file: t.c--
         fun(                   ) {
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]dd@1
    --file: t.c--
         fun(                   ) {
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]dd@1
    --file: t.c--
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 249
------------------------------------------------------------


=================Reducing node 252, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
                  ;
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
                  ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
                    ;
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
                    ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
                ;
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
                ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
      int var = 99;
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
      int var = 99;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
      fun(   var   );
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
      fun(   var   );
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 252
------------------------------------------------------------


=================Reducing node 254, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 254
------------------------------------------------------------


=================Reducing node 256, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 256
------------------------------------------------------------


=================Reducing node 259, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
        main() {
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]remove whole except first
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@2
    --file: t.c--
         fun(                   ) {
    }
        main() {
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 259
------------------------------------------------------------


=================Reducing node 358, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 358
------------------------------------------------------------


=================Reducing node 313, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
        main() {
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
        main() {
                  ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
                  ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 313
------------------------------------------------------------


=================Reducing node 291, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
                    ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
                    ;
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 291
------------------------------------------------------------


=================Reducing node 363, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun                      {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun                      {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 363
------------------------------------------------------------


=================Reducing node 349, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
        main   {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main   {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 349
------------------------------------------------------------


=================Reducing node 315, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__declaration_2]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int         ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int         ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 315
------------------------------------------------------------


=================Reducing node 318, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int         ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int         ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var     ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var     ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 318
------------------------------------------------------------


=================Reducing node 293, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__declaration_2]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun           ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun           ;
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 293
------------------------------------------------------------


=================Reducing node 300, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun           ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun           ;
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun    var    ;
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun    var    ;
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 300
------------------------------------------------------------


=================Reducing node 265, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
                ;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
                ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 265
------------------------------------------------------------


=================Reducing node 365, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
         fun                      {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun                      {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 365
------------------------------------------------------------


=================Reducing node 367, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun                      {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun                      {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 367
------------------------------------------------------------


=================Reducing node 360, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 360
------------------------------------------------------------


=================Reducing node 351, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__directDeclarator_7]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main   {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main   {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 351
------------------------------------------------------------


=================Reducing node 353, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
        main   {
      int var = 99;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main   {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 353
------------------------------------------------------------


=================Reducing node 320, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__initDeclarator_2]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var     ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var     ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 320
------------------------------------------------------------


=================Reducing node 321, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var     ;
      fun(   var   );
      return var;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var     ;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 321
------------------------------------------------------------


=================Reducing node 268, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return    ;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 268
------------------------------------------------------------


=================Reducing node 371, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 371
------------------------------------------------------------


=================Reducing node 370, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 370
------------------------------------------------------------


=================Reducing node 368, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 368
------------------------------------------------------------


=================Reducing node 362, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 362
------------------------------------------------------------


=================Reducing node 361, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 361
------------------------------------------------------------


=================Reducing node 357, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 357
------------------------------------------------------------


=================Reducing node 356, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 356
------------------------------------------------------------


=================Reducing node 354, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 354
------------------------------------------------------------


=================Reducing node 344, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 344
------------------------------------------------------------


=================Reducing node 341, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 341
------------------------------------------------------------


=================Reducing node 322, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 322
------------------------------------------------------------


=================Reducing node 316, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 316
------------------------------------------------------------


=================Reducing node 314, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 314
------------------------------------------------------------


=================Reducing node 348, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 348
------------------------------------------------------------


=================Reducing node 306, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 306
------------------------------------------------------------


=================Reducing node 303, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 303
------------------------------------------------------------


=================Reducing node 301, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 301
------------------------------------------------------------


=================Reducing node 294, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 294
------------------------------------------------------------


=================Reducing node 292, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 292
------------------------------------------------------------


=================Reducing node 311, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 311
------------------------------------------------------------


=================Reducing node 270, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__postfixExpression_1]dd@1
    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return    ;
    }
    --file: <formatted tokenized program in its original format>--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 270
------------------------------------------------------------


=================Reducing node 289, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 289
------------------------------------------------------------


=================Reducing node 269, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 269
------------------------------------------------------------


=================Reducing node 267, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 267
------------------------------------------------------------


=================Reducing node 257, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 257
------------------------------------------------------------


=================Reducing node 255, size=23=================

The current best program is the following

    --file: t.c--
         fun(                   ) {
    }
        main() {
      int var = 99;
      fun(   var   );
      return var;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 255
------------------------------------------------------------


#test success = 4
#test failure = 85
#test result cache hits = 0
#test execution cancelled = 10
#node edit action set cache hits = 0
#external test execution cache hits = 0
