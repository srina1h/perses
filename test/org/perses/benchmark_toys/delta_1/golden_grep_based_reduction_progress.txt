=====================Reduction starts.======================

The initial program size is 56
The command line options are:
---
helpFlags:
  groupName: "Help"
  help: false
verbosityFlags:
  groupName: "Verbosity"
  verbosity: "INFO"
  listVerbosity: false
versionFlags:
  groupName: "Version"
  version: false
inputFlags:
  groupName: "Inputs"
  testScript: "grep_based_r.sh"
  inputFile: "t.c"
  deps: []
  sourceFile: "t.c"
resultOutputFlags:
  groupName: "Outputs"
  outputDir: "result_grep_based_token_reduction_golden_test_perses_node_priority_with_dfs_delta_t.c"
reductionControlFlags:
  groupName: "General Reduction Control"
  fixpoint: true
  numOfThreads: 1
  codeFormat: "COMPACT_ORIG_FORMAT"
  testScriptExecutionTimeoutInSeconds: 600
  testScriptExecutionKeepWaitingAfterTimeout: true
outputRefiningFlags:
  groupName: "Output Refining Control"
  callFormatter: false
  formatCmd: ""
  callCReduce: false
  creduceCmd: "creduce"
algorithmControlFlags:
  groupName: "Reduction Algorithm Control"
  reductionAlgorithm: "perses_node_priority_with_dfs_delta"
  listAllReductionAlgorithms: false
  rebuildParseTreeEachIteration: true
  enableTokenSlicer: true
  enableTreeSlicer: false
  enableLineSlicer: false
  defaultDeltaDebuggerTypeForKleene: "DFS"
  maxEditCountForRegularRuleNode: 100
  maxBfsDepthForRegularRuleNode: 5
  stopAtFirstCompatibleChildForRegularRuleNode: false
languageControlFlags:
  groupName: "Language Control"
  languageName: ""
  listLangs: false
  designatedParserFacadeClassName: ""
  listParserFacades: false
  languageJarFiles: []
vulcanFlags:
  groupName: "Vulcan Reducer Control"
  enableVulcan: false
  nonDeletionIterationLimit: 10
  windowSize: 4
  vulcanFixpoint: false
trecFlags:
  groupName: "T-Rec Reducer Control"
  enableTrec: false
profilingFlags:
  groupName: "Profiling"
  progressDumpFile: "grep_based_reduction_progress.txt"
  appendToProgressDumpFile: true
  statDumpFile: null
  profileQueryCacheTime: null
  profileQueryCacheTimeCSV: null
  profileQueryCacheMemory: null
  actionSetProfiler: null
  profileDeltaDebugger: null
cacheControlFlags:
  groupName: "Cache Control"
  queryCaching: "TRUE"
  cacheType: "CONTENT_SHA512"
  nodeActionSetCaching: true
  queryCacheRefreshThreshold: 0
  enableLightweightRefreshing: true
  enablePassCache: false
  globalCacheFile: null
  pathToSaveUpdatedGlobalCache: null
experimentFlags:
  groupName: "Experiment Control"
  onDemandFineGritReducerAnnotationClasses: []
  onDemandMediumGritReducerAnnotationClasses: []
  onDemandCoarseGritReducerAnnotationClasses: []
lprFlags:
  groupName: "LPR Reducer Control"
  enableLPR: false
  lprFixpoint: false
  llmClientPath: null

Parser Facade: class org.perses.grammar.c.PnfCParserFacade
------------------------------------------------------------


The sanity check has been performed. The result is PassingSanityCheckResult
The reducer execution plan is listed below.
--- !<sequence>
reducers:
- !<fixpoint>
  body: !<atomic>
    reducer: perses_node_priority_with_dfs_delta
  condition: smaller
- !<fixpoint>
  body: !<if>
    condition: !<atomic>
      reducer: concurrent_token_slicer
    then: !<fixpoint>
      body: !<atomic>
        reducer: perses_node_priority_with_dfs_delta
      condition: smaller
  condition: smaller


Rebuilding spar-tree: The spartree is not dirty, and thus the rebuilding is skipped.

=Fixpoint iteration 1. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=1,slot_type=translationUnit}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___aux_rule__declaration_3 {id=360,slot_type=[aux_rule__translationUnit_2,declaration,aux_rule__declaration_3]}
    |   |___(+) {id=361,slot_type=declarationSpecifiers}
    |   |   |___Token:int {id=402,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
    |   |___(?) {id=362,slot_type=optional__declaration_2}
    |   |   |___directDeclarator {id=367,slot_type=[initDeclaratorList,initDeclarator,declarator,directDeclarator]}
    |   |       |___Token:printf {id=398,slot_type=[aux_rule__directDeclarator_9,Identifier]}
    |   |       |___(*) {id=369,slot_type=kleene_star__directDeclarator_7}
    |   |           |___aux_rule__directDeclarator_15 {id=371,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
    |   |               |___Token:( {id=372,slot_type=LeftParen}
    |   |               |___parameterTypeList {id=375,slot_type=[altnt_block__directDeclarator_11,parameterTypeList]}
    |   |               |   |___parameterDeclaration {id=381,slot_type=[parameterList,parameterDeclaration]}
    |   |               |   |   |___(+) {id=382,slot_type=declarationSpecifiers}
    |   |               |   |   |   |___Token:const {id=397,slot_type=[declarationSpecifier,typeQualifier,Const]}
    |   |               |   |   |   |___Token:char {id=395,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Char]}
    |   |               |   |   |___(?) {id=384,slot_type=[altnt_block__parameterDeclaration_2,optional__typeName_1]}
    |   |               |   |       |___(+) {id=387,slot_type=[abstractDeclarator,pointer,kleene_plus__pointer_8]}
    |   |               |   |           |___Token:* {id=390,slot_type=[aux_rule__pointer_6,altnt_block__pointer_9,Star]}
    |   |               |   |___(?) {id=377,slot_type=optional__parameterTypeList_2}
    |   |               |       |___aux_rule__parameterTypeList_1 {id=378,slot_type=aux_rule__parameterTypeList_1}
    |   |               |           |___Token:, {id=379,slot_type=Comma}
    |   |               |           |___Token:... {id=380,slot_type=Ellipsis}
    |   |               |___Token:) {id=374,slot_type=RightParen}
    |   |___Token:; {id=363,slot_type=Semi}
    |___functionDefinition {id=5,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=6,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=354,slot_type=declarationSpecifiers}
        |       |___Token:int {id=358,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=303,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=353,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=305,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=307,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=308,slot_type=LeftParen}
        |           |___parameterList {id=312,slot_type=[altnt_block__directDeclarator_11,parameterTypeList,parameterList]}
        |           |   |___(+) {id=342,slot_type=[parameterDeclaration,declarationSpecifiers]}
        |           |   |   |___Token:int {id=352,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |           |   |   |___Token:argc {id=349,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,typedefName,Identifier]}
        |           |   |___(*) {id=314,slot_type=kleene_star__parameterList_1}
        |           |       |___aux_rule__parameterList_2 {id=315,slot_type=aux_rule__parameterList_2}
        |           |           |___Token:, {id=316,slot_type=Comma}
        |           |           |___parameterDeclaration {id=317,slot_type=parameterDeclaration}
        |           |               |___(+) {id=318,slot_type=declarationSpecifiers}
        |           |               |   |___Token:char {id=341,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Char]}
        |           |               |___declarator {id=320,slot_type=[altnt_block__parameterDeclaration_2,declarator]}
        |           |                   |___(?) {id=321,slot_type=optional__declarator_1}
        |           |                   |   |___(+) {id=334,slot_type=[pointer,kleene_plus__pointer_8]}
        |           |                   |       |___Token:* {id=337,slot_type=[aux_rule__pointer_6,altnt_block__pointer_9,Star]}
        |           |                   |___directDeclarator {id=322,slot_type=directDeclarator}
        |           |                       |___Token:argv {id=332,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |           |                       |___(*) {id=324,slot_type=kleene_star__directDeclarator_7}
        |           |                           |___aux_rule__directDeclarator_14 {id=326,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_14]}
        |           |                               |___Token:[ {id=327,slot_type=LeftBracket}
        |           |                               |___Token:] {id=329,slot_type=RightBracket}
        |           |___Token:) {id=310,slot_type=RightParen}
        |___compoundStatement {id=8,slot_type=compoundStatement}
            |___Token:{ {id=9,slot_type=LeftBrace}
            |___(?) {id=10,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=13,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___aux_rule__declaration_3 {id=267,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=268,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=302,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=269,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=272,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:a {id=298,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=274,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=275,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=276,slot_type=Assign}
            |       |   |               |___Token:1 {id=295,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |___Token:; {id=270,slot_type=Semi}
            |       |___aux_rule__declaration_3 {id=219,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=220,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=265,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=221,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=224,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:b {id=261,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=226,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=227,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=228,slot_type=Assign}
            |       |   |               |___additiveExpression {id=240,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |       |   |                   |___Token:a {id=258,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |       |   |                   |___(*) {id=242,slot_type=kleene_star__additiveExpression_1}
            |       |   |                       |___aux_rule__additiveExpression_2 {id=243,slot_type=aux_rule__additiveExpression_2}
            |       |   |                           |___Token:+ {id=252,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |       |   |                           |___Token:1 {id=251,slot_type=[multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |___Token:; {id=222,slot_type=Semi}
            |       |___expressionStatement {id=149,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |       |   |___(?) {id=150,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=168,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression]}
            |       |   |       |___Token:printf {id=217,slot_type=[aux_rule__postfixExpression_4,Identifier]}
            |       |   |       |___(*) {id=170,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___aux_rule__postfixExpression_11 {id=172,slot_type=[aux_rule__postfixExpression_3,aux_rule__postfixExpression_11]}
            |       |   |               |___Token:( {id=173,slot_type=LeftParen}
            |       |   |               |___(?) {id=174,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___expression {id=176,slot_type=expression}
            |       |   |               |       |___(+) {id=215,slot_type=[assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |       |   |               |       |   |___Token:"%d\n" {id=216,slot_type=StringLiteral}
            |       |   |               |       |___(*) {id=178,slot_type=kleene_star__expression_1}
            |       |   |               |           |___aux_rule__expression_2 {id=179,slot_type=aux_rule__expression_2}
            |       |   |               |               |___Token:, {id=180,slot_type=Comma}
            |       |   |               |               |___Token:b {id=198,slot_type=[assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |       |   |               |___Token:) {id=175,slot_type=RightParen}
            |       |   |___Token:; {id=151,slot_type=Semi}
            |       |___expressionStatement {id=99,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |       |   |___(?) {id=100,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=118,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression]}
            |       |   |       |___Token:printf {id=146,slot_type=[aux_rule__postfixExpression_4,Identifier]}
            |       |   |       |___(*) {id=120,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___aux_rule__postfixExpression_11 {id=122,slot_type=[aux_rule__postfixExpression_3,aux_rule__postfixExpression_11]}
            |       |   |               |___Token:( {id=123,slot_type=LeftParen}
            |       |   |               |___(?) {id=124,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___(+) {id=144,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |       |   |               |       |___Token:"hello\n" {id=145,slot_type=StringLiteral}
            |       |   |               |___Token:) {id=125,slot_type=RightParen}
            |       |   |___Token:; {id=101,slot_type=Semi}
            |       |___expressionStatement {id=49,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |       |   |___(?) {id=50,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=68,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression]}
            |       |   |       |___Token:printf {id=96,slot_type=[aux_rule__postfixExpression_4,Identifier]}
            |       |   |       |___(*) {id=70,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___aux_rule__postfixExpression_11 {id=72,slot_type=[aux_rule__postfixExpression_3,aux_rule__postfixExpression_11]}
            |       |   |               |___Token:( {id=73,slot_type=LeftParen}
            |       |   |               |___(?) {id=74,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___(+) {id=94,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |       |   |               |       |___Token:"world\n" {id=95,slot_type=StringLiteral}
            |       |   |               |___Token:) {id=75,slot_type=RightParen}
            |       |   |___Token:; {id=51,slot_type=Semi}
            |       |___jumpStatement {id=22,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=25,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=26,slot_type=Return}
            |           |   |___(?) {id=27,slot_type=optional__postfixExpression_1}
            |           |       |___Token:0 {id=46,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=24,slot_type=Semi}
            |___Token:} {id=11,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=56==================

The current best program is the following

    --file: t.c--
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]remove whole except first
    --file: t.c--
    int printf(const char*, ...);
    --file: <formatted tokenized program in its original format>--
    int printf(const char*, ...);
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=5}
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]dd@1
    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 1 --> 1.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


================The best program is updated.================

token count change 56 -> 46
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 2 from 56 to 46
------------------------------------------------------------


==================Reducing node 5, size=46==================

The current best program is the following

    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
                  ;
    --file: <formatted tokenized program in its original format>--
                  ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
         int a = 1;
    --file: <formatted tokenized program in its original format>--
         int a = 1;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
              int b = a + 1;
    --file: <formatted tokenized program in its original format>--
              int b = a + 1;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


==================Reducing node 8, size=46==================

The current best program is the following

    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 10, size=46==================

The current best program is the following

    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
    int main (int argc, char *argv[]) {
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


=================Reducing node 13, size=46==================

The current best program is the following

    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=13}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]remove whole except first
    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
         int a = 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@3
    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 7 --> 7.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 12
------------------------------------------------------------


================The best program is updated.================

token count change 46 -> 43
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    --file: t.c--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("world\n");
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("world\n");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 8 --> 7.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 3
------------------------------------------------------------


================The best program is updated.================

token count change 43 -> 38
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@3
    --file: t.c--
    int main (int argc, char *argv[]) {
     printf("world\n");
    }
    --file: <formatted tokenized program in its original format>--
    int main (int argc, char *argv[]) {
     printf("world\n");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 7 --> 5.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 1
------------------------------------------------------------


================The best program is updated.================

token count change 38 -> 19
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 13 from 46 to 19
------------------------------------------------------------


=================Reducing node 303, size=19=================

The current best program is the following

    --file: t.c--
    int main (int argc, char *argv[]) {
     printf("world\n");
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main                          {
     printf("world\n");
    }
    --file: <formatted tokenized program in its original format>--
    int main                          {
     printf("world\n");
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: t.c--
    int           argc                {
     printf("world\n");
    }
    --file: <formatted tokenized program in its original format>--
    int           argc                {
     printf("world\n");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 5 --> 3.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


================The best program is updated.================

token count change 19 -> 9
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 303 from 19 to 9
------------------------------------------------------------


==================Reducing node 49, size=9==================

The current best program is the following

    --file: t.c--
    int main                          {
     printf("world\n");
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: t.c--
    int main                          {
    }
    --file: <formatted tokenized program in its original format>--
    int main                          {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main                          {
                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 49
------------------------------------------------------------


==================Reducing node 50, size=9==================

The current best program is the following

    --file: t.c--
    int main                          {
     printf("world\n");
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: t.c--
    int main                          {
                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50
------------------------------------------------------------


==================Reducing node 68, size=9==================

The current best program is the following

    --file: t.c--
    int main                          {
     printf("world\n");
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=68}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main                          {
     printf           ;
    }
    --file: <formatted tokenized program in its original format>--
    int main                          {
     printf           ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
    int main                          {
            "world\n" ;
    }
    --file: <formatted tokenized program in its original format>--
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 6 --> 4.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 6
------------------------------------------------------------


================The best program is updated.================

token count change 9 -> 6
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 68 from 9 to 6
------------------------------------------------------------


=================Reducing node 353, size=6==================

The current best program is the following

    --file: t.c--
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 353
------------------------------------------------------------


==================Reducing node 94, size=6==================

The current best program is the following

    --file: t.c--
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: t.c--
    int main                          {
                      ;
    }
    --file: <formatted tokenized program in its original format>--
    int main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 94
------------------------------------------------------------


==================Reducing node 95, size=6==================

The current best program is the following

    --file: t.c--
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 95
------------------------------------------------------------


==================Reducing node 51, size=6==================

The current best program is the following

    --file: t.c--
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51
------------------------------------------------------------


==================Reducing node 11, size=6==================

The current best program is the following

    --file: t.c--
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


==================Reducing node 9, size=6===================

The current best program is the following

    --file: t.c--
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


==================Reducing node 6, size=6===================

The current best program is the following

    --file: t.c--
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    --file: t.c--
        main                          {
            "world\n" ;
    }
    --file: <formatted tokenized program in its original format>--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 4 --> 2.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


================The best program is updated.================

token count change 6 -> 5
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 6 from 6 to 5
------------------------------------------------------------


Rebuilding spar-tree: The spartree is rebuilt.

=Fixpoint iteration 2. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=================Reducing node 405, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 405
------------------------------------------------------------


=================Reducing node 407, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: t.c--
                      ;
    --file: <formatted tokenized program in its original format>--
                      ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 407
------------------------------------------------------------


=================Reducing node 409, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 409
------------------------------------------------------------


=================Reducing node 411, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    --file: t.c--
        main                          {
    }
    --file: <formatted tokenized program in its original format>--
        main                          {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 411
------------------------------------------------------------


=================Reducing node 414, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=414}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 414
------------------------------------------------------------


=================Reducing node 418, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: t.c--
        main                          {
    }
    --file: <formatted tokenized program in its original format>--
        main                          {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: t.c--
        main                          {
                      ;
    }
    --file: <formatted tokenized program in its original format>--
        main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 418
------------------------------------------------------------


=================Reducing node 443, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 443
------------------------------------------------------------


=================Reducing node 420, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 420
------------------------------------------------------------


=================Reducing node 419, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: t.c--
        main                          {
                      ;
    }
    --file: <formatted tokenized program in its original format>--
        main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 419
------------------------------------------------------------


=================Reducing node 439, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=439}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 439
------------------------------------------------------------


=================Reducing node 440, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 440
------------------------------------------------------------


=================Reducing node 412, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 412
------------------------------------------------------------


=================Reducing node 410, size=5==================

The current best program is the following

    --file: t.c--
        main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 410
------------------------------------------------------------


==Fixpoint iteration 3. Reducer: concurrent_token_slicer@1==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: t.c--
        main                          {
                      ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: t.c--
        main                          {
            "world\n" ;
    --file: <formatted tokenized program in its original format>--
        main                          {
            "world\n" ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: t.c--
        main                          {
            "world\n"
    }
    --file: <formatted tokenized program in its original format>--
        main                          {
            "world\n"
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: t.c--
        main
            "world\n" ;
    }
    --file: <formatted tokenized program in its original format>--
        main
            "world\n" ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: t.c--
                                      {
            "world\n" ;
    }
    --file: <formatted tokenized program in its original format>--
                                      {
            "world\n" ;
    }
------------------------------------------------------------


==Fixpoint iteration 4. Reducer: concurrent_token_slicer@2==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: t.c--
        main                          {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: t.c--
        main                          {
            "world\n"
    --file: <formatted tokenized program in its original format>--
        main                          {
            "world\n"
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: t.c--
        main
                      ;
    }
    --file: <formatted tokenized program in its original format>--
        main
                      ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: t.c--
            "world\n" ;
    }
    --file: <formatted tokenized program in its original format>--
            "world\n" ;
    }
------------------------------------------------------------


==Fixpoint iteration 5. Reducer: concurrent_token_slicer@3==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: t.c--
        main                          {
    --file: <formatted tokenized program in its original format>--
        main                          {
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: t.c--
        main
    }
    --file: <formatted tokenized program in its original format>--
        main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: t.c--
                      ;
    }
    --file: <formatted tokenized program in its original format>--
                      ;
    }
------------------------------------------------------------


==Fixpoint iteration 6. Reducer: concurrent_token_slicer@4==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: t.c--
        main
    --file: <formatted tokenized program in its original format>--
        main
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: t.c--
    }
    --file: <formatted tokenized program in its original format>--
    }
------------------------------------------------------------


==Fixpoint iteration 7. Reducer: concurrent_token_slicer@5==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: t.c--
    --file: <formatted tokenized program in its original format>--
------------------------------------------------------------


==Fixpoint iteration 8. Reducer: concurrent_token_slicer@6==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


==Fixpoint iteration 9. Reducer: concurrent_token_slicer@7==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 10. Reducer: concurrent_token_slicer@8==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 11. Reducer: concurrent_token_slicer@9==

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 12. Reducer: concurrent_token_slicer@10=

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 13. Reducer: concurrent_token_slicer@11=

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 14. Reducer: concurrent_token_slicer@12=

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 15. Reducer: concurrent_token_slicer@13=

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 16. Reducer: concurrent_token_slicer@14=

The spar-tree is the following.
translationUnit {id=404,slot_type=translationUnit}
|___(+) {id=405,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=407,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=443,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=409,slot_type=compoundStatement}
            |___Token:{ {id=410,slot_type=LeftBrace}
            |___(?) {id=411,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=414,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=418,slot_type=[aux_rule__blockItemList_2,statement,aux_rule__statement_3,expressionStatement]}
            |           |___(?) {id=419,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=439,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,aux_rule__unaryExpression_3,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=440,slot_type=StringLiteral}
            |           |___Token:; {id=420,slot_type=Semi}
            |___Token:} {id=412,slot_type=RightBrace}
------------------------------------------------------------


The history of the reducer invocation.
[0]: StatsSnapshotEvent
---
stats:
  tokenCount: 56
  characterCount: 133
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[1]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[2]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: true

[3]: ReducerCallEvent
---
reducer:
  shortName: "perses_node_priority_with_dfs_delta"
  description: ""
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"

[4]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[5]: ReducerCallEvent
---
reducer:
  granularity: 1
  shortName: "concurrent_token_slicer@1"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[6]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[7]: ReducerCallEvent
---
reducer:
  granularity: 2
  shortName: "concurrent_token_slicer@2"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[8]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[9]: ReducerCallEvent
---
reducer:
  granularity: 3
  shortName: "concurrent_token_slicer@3"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[10]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[11]: ReducerCallEvent
---
reducer:
  granularity: 4
  shortName: "concurrent_token_slicer@4"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[12]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[13]: ReducerCallEvent
---
reducer:
  granularity: 5
  shortName: "concurrent_token_slicer@5"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[14]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[15]: ReducerCallEvent
---
reducer:
  granularity: 6
  shortName: "concurrent_token_slicer@6"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[16]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[17]: ReducerCallEvent
---
reducer:
  granularity: 7
  shortName: "concurrent_token_slicer@7"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[18]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[19]: ReducerCallEvent
---
reducer:
  granularity: 8
  shortName: "concurrent_token_slicer@8"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[20]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[21]: ReducerCallEvent
---
reducer:
  granularity: 9
  shortName: "concurrent_token_slicer@9"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[22]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[23]: ReducerCallEvent
---
reducer:
  granularity: 10
  shortName: "concurrent_token_slicer@10"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[24]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[25]: ReducerCallEvent
---
reducer:
  granularity: 11
  shortName: "concurrent_token_slicer@11"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[26]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[27]: ReducerCallEvent
---
reducer:
  granularity: 12
  shortName: "concurrent_token_slicer@12"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[28]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[29]: ReducerCallEvent
---
reducer:
  granularity: 13
  shortName: "concurrent_token_slicer@13"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[30]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false

[31]: ReducerCallEvent
---
reducer:
  granularity: 14
  shortName: "concurrent_token_slicer@14"
  description: "concurrent token slicer"
  deterministic: true
  reductionResultSizeTrend: "BEST_RESULT_SIZE_DECREASE"
  namePrefix: "concurrent_token_slicer"

[32]: StatsSnapshotEvent
---
stats:
  tokenCount: 5
  characterCount: 16
  fileContents:
  - fileName: "t.c"
    contentDigest:
      digest: {}
      numOfStrings: 1
numberOfNonDeletionIterations: 0
fileContentChangedWrtPrevious: false


#test success = 7
#test failure = 26
#test result cache hits = 8
#test execution cancelled = 1
#node edit action set cache hits = 5
#external test execution cache hits = 0
