=====================Reduction starts.======================

The initial program size is 70
The command line options are:
---
helpFlags:
  groupName: "Help"
  help: false
verbosityFlags:
  groupName: "Verbosity"
  verbosity: "INFO"
  listVerbosity: false
versionFlags:
  groupName: "Version"
  version: false
inputFlags:
  groupName: "Inputs"
  testScript: "r.sh"
  inputFile: "small.go"
  deps: []
  sourceFile: "small.go"
resultOutputFlags:
  groupName: "Outputs"
  outputDir: "result_reduction_golden_test_perses_node_priority_with_dfs_delta_small.go"
reductionControlFlags:
  groupName: "General Reduction Control"
  fixpoint: true
  numOfThreads: 1
  codeFormat: "COMPACT_ORIG_FORMAT"
  testScriptExecutionTimeoutInSeconds: 600
  testScriptExecutionKeepWaitingAfterTimeout: true
outputRefiningFlags:
  groupName: "Output Refining Control"
  callFormatter: false
  formatCmd: ""
  callCReduce: false
  creduceCmd: "creduce"
algorithmControlFlags:
  groupName: "Reduction Algorithm Control"
  reductionAlgorithm: "perses_node_priority_with_dfs_delta"
  listAllReductionAlgorithms: false
  rebuildParseTreeEachIteration: true
  enableTokenSlicer: false
  enableTreeSlicer: false
  enableLineSlicer: false
  defaultDeltaDebuggerTypeForKleene: "DFS"
  maxEditCountForRegularRuleNode: 100
  maxBfsDepthForRegularRuleNode: 5
  stopAtFirstCompatibleChildForRegularRuleNode: false
languageControlFlags:
  groupName: "Language Control"
  languageName: ""
  listLangs: false
  designatedParserFacadeClassName: ""
  listParserFacades: false
  languageJarFiles: []
vulcanFlags:
  groupName: "Vulcan Reducer Control"
  enableVulcan: false
  nonDeletionIterationLimit: 10
  windowSize: 4
  vulcanFixpoint: false
trecFlags:
  groupName: "T-Rec Reducer Control"
  enableTrec: false
profilingFlags:
  groupName: "Profiling"
  progressDumpFile: "reduction_progress.txt"
  appendToProgressDumpFile: true
  statDumpFile: null
  profileQueryCacheTime: null
  profileQueryCacheTimeCSV: null
  profileQueryCacheMemory: null
  actionSetProfiler: null
  profileDeltaDebugger: null
cacheControlFlags:
  groupName: "Cache Control"
  queryCaching: "TRUE"
  cacheType: "CONTENT_SHA512"
  nodeActionSetCaching: true
  queryCacheRefreshThreshold: 0
  enableLightweightRefreshing: true
  enablePassCache: false
  globalCacheFile: null
  pathToSaveUpdatedGlobalCache: null
experimentFlags:
  groupName: "Experiment Control"
  onDemandReducerClasses: null

Parser Facade: class org.perses.grammar.go.PnfGoParserFacade
------------------------------------------------------------


The sanity check has been performed. The result is PassingSanityCheckResult
=Fixpoint iteration 1. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
(|:sourceFile) {id=1,slot_type=sourceFile}
|___aux_rule__sourceFile_6 {id=2,slot_type=aux_rule__sourceFile_6}
    |___packageClause {id=3,slot_type=packageClause}
    |   |___Token:package {id=294,slot_type=PACKAGE}
    |   |___Token:main {id=295,slot_type=IDENTIFIER}
    |___Token:; {id=293,slot_type=[eos,SEMI]}
    |___(*) {id=5,slot_type=kleene_star__sourceFile_2}
    |   |___aux_rule__sourceFile_1 {id=283,slot_type=aux_rule__sourceFile_1}
    |       |___importDecl {id=284,slot_type=importDecl}
    |       |   |___Token:import {id=287,slot_type=IMPORT}
    |       |   |___Token:"fmt" {id=292,slot_type=[altnt_block__importDecl_3,importSpec,importPath,string_,INTERPRETED_STRING_LIT]}
    |       |___Token:; {id=286,slot_type=[eos,SEMI]}
    |___(*) {id=6,slot_type=kleene_star__sourceFile_4}
        |___aux_rule__sourceFile_3 {id=7,slot_type=aux_rule__sourceFile_3}
            |___functionDecl {id=11,slot_type=[altnt_block__sourceFile_5,functionDecl]}
            |   |___Token:func {id=12,slot_type=FUNC}
            |   |___Token:main {id=13,slot_type=IDENTIFIER}
            |   |___parameters {id=280,slot_type=[signature,parameters]}
            |   |   |___Token:( {id=281,slot_type=L_PAREN}
            |   |   |___Token:) {id=282,slot_type=R_PAREN}
            |   |___(?) {id=15,slot_type=optional__functionDecl_1}
            |       |___block {id=16,slot_type=block}
            |           |___Token:{ {id=17,slot_type=L_CURLY}
            |           |___(?) {id=18,slot_type=optional__block_1}
            |           |   |___(+) {id=20,slot_type=statementList}
            |           |       |___aux_rule__statementList_2 {id=239,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=247,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=279,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=249,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=275,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=276,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=277,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=252,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=253,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=254,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expression {id=259,slot_type=[aux_rule__arguments_5,altnt_block__arguments_7,expressionList,expression]}
            |           |       |   |           |       |___Token:"go" {id=274,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |       |   |           |       |___(*) {id=261,slot_type=kleene_star__expression_1}
            |           |       |   |           |           |___aux_rule__expression_2 {id=262,slot_type=aux_rule__expression_2}
            |           |       |   |           |               |___Token:+ {id=270,slot_type=[altnt_block__expression_3,PLUS]}
            |           |       |   |           |               |___Token:"lang" {id=269,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |       |   |           |___Token:) {id=255,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=242,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=191,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=199,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=238,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=201,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=234,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=235,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=236,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=204,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=205,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=206,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expressionList {id=210,slot_type=[aux_rule__arguments_5,altnt_block__arguments_7,expressionList]}
            |           |       |   |           |       |___Token:"1+1 =" {id=233,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |       |   |           |       |___(*) {id=212,slot_type=kleene_star__expressionList_2}
            |           |       |   |           |           |___aux_rule__expressionList_1 {id=213,slot_type=aux_rule__expressionList_1}
            |           |       |   |           |               |___Token:, {id=214,slot_type=COMMA}
            |           |       |   |           |               |___expression {id=215,slot_type=expression}
            |           |       |   |           |                   |___Token:1 {id=228,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,DECIMAL_LIT]}
            |           |       |   |           |                   |___(*) {id=217,slot_type=kleene_star__expression_1}
            |           |       |   |           |                       |___aux_rule__expression_2 {id=218,slot_type=aux_rule__expression_2}
            |           |       |   |           |                           |___Token:+ {id=225,slot_type=[altnt_block__expression_3,PLUS]}
            |           |       |   |           |                           |___Token:1 {id=224,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,DECIMAL_LIT]}
            |           |       |   |           |___Token:) {id=207,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=194,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=143,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=151,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=190,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=153,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=186,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=187,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=188,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=156,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=157,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=158,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expressionList {id=162,slot_type=[aux_rule__arguments_5,altnt_block__arguments_7,expressionList]}
            |           |       |   |           |       |___Token:"7.0/3.0 =" {id=185,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |       |   |           |       |___(*) {id=164,slot_type=kleene_star__expressionList_2}
            |           |       |   |           |           |___aux_rule__expressionList_1 {id=165,slot_type=aux_rule__expressionList_1}
            |           |       |   |           |               |___Token:, {id=166,slot_type=COMMA}
            |           |       |   |           |               |___expression {id=167,slot_type=expression}
            |           |       |   |           |                   |___Token:7.0 {id=180,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,FLOAT_LIT]}
            |           |       |   |           |                   |___(*) {id=169,slot_type=kleene_star__expression_1}
            |           |       |   |           |                       |___aux_rule__expression_2 {id=170,slot_type=aux_rule__expression_2}
            |           |       |   |           |                           |___Token:/ {id=177,slot_type=[altnt_block__expression_3,DIV]}
            |           |       |   |           |                           |___Token:3.0 {id=176,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,FLOAT_LIT]}
            |           |       |   |           |___Token:) {id=159,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=146,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=102,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=110,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=142,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=112,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=138,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=139,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=140,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=115,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=116,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=117,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expression {id=122,slot_type=[aux_rule__arguments_5,altnt_block__arguments_7,expressionList,expression]}
            |           |       |   |           |       |___Token:true {id=137,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |           |       |___(*) {id=124,slot_type=kleene_star__expression_1}
            |           |       |   |           |           |___aux_rule__expression_2 {id=125,slot_type=aux_rule__expression_2}
            |           |       |   |           |               |___Token:&& {id=133,slot_type=[altnt_block__expression_3,LOGICAL_AND]}
            |           |       |   |           |               |___Token:false {id=132,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |           |___Token:) {id=118,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=105,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=61,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=69,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=101,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=71,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=97,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=98,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=99,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=74,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=75,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=76,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expression {id=81,slot_type=[aux_rule__arguments_5,altnt_block__arguments_7,expressionList,expression]}
            |           |       |   |           |       |___Token:true {id=96,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |           |       |___(*) {id=83,slot_type=kleene_star__expression_1}
            |           |       |   |           |           |___aux_rule__expression_2 {id=84,slot_type=aux_rule__expression_2}
            |           |       |   |           |               |___Token:|| {id=92,slot_type=[altnt_block__expression_3,LOGICAL_OR]}
            |           |       |   |           |               |___Token:false {id=91,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |           |___Token:) {id=77,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=64,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=27,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |           |___primaryExpr {id=35,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |           |   |___Token:fmt {id=60,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |           |   |___(*) {id=37,slot_type=kleene_star__primaryExpr_1}
            |           |           |       |___aux_rule__primaryExpr_4 {id=56,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |           |       |   |___Token:. {id=57,slot_type=DOT}
            |           |           |       |   |___Token:Println {id=58,slot_type=IDENTIFIER}
            |           |           |       |___arguments {id=40,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |           |           |___Token:( {id=41,slot_type=L_PAREN}
            |           |           |           |___(?) {id=42,slot_type=optional__arguments_6}
            |           |           |           |   |___unaryExpr {id=48,slot_type=[aux_rule__arguments_5,altnt_block__arguments_7,expressionList,expression,unaryExpr]}
            |           |           |           |       |___(*) {id=49,slot_type=kleene_star__unaryExpr_1}
            |           |           |           |       |   |___Token:! {id=55,slot_type=[aux_rule__unaryExpr_2,EXCLAMATION]}
            |           |           |           |       |___Token:true {id=53,slot_type=[primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |           |           |___Token:) {id=43,slot_type=R_PAREN}
            |           |           |___Token:; {id=30,slot_type=[eos,SEMI]}
            |           |___Token:} {id=19,slot_type=R_CURLY}
            |___Token:; {id=10,slot_type=[eos,SEMI]}
------------------------------------------------------------


==================Reducing node 2, size=70==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 6, size=70==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__sourceFile_4]dd@1
    --file: small.go--
    package main;
    import "fmt";
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


==================Reducing node 7, size=70==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=7}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


=================Reducing node 11, size=70==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 15, size=70==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDecl_1]dd@1
    --file: small.go--
    package main;
    import "fmt";
    func main()
     ;
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main()
     ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 16, size=70==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=16}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 18, size=70==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__block_1]dd@1
    --file: small.go--
    package main;
    import "fmt";
    func main() {
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 20, size=70==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=20}
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:statementList]remove whole except first
    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 3 --> 3.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 4
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 20 from 70 to 22
------------------------------------------------------------


=================Reducing node 239, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 239
------------------------------------------------------------


=================Reducing node 247, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: small.go--
    package main;
    import "fmt";
    func main() {
            Println               ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
            Println               ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: small.go--
    package main;
    import "fmt";
    func main() {
                    "go"          ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
                    "go"          ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: small.go--
    package main;
    import "fmt";
    func main() {
                    "go" + "lang" ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
                    "go" + "lang" ;
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 247
------------------------------------------------------------


=================Reducing node 249, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__primaryExpr_1]dd@1
    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println               ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println               ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__primaryExpr_1]dd@1
    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt        ("go" + "lang");
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt        ("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 249
------------------------------------------------------------


=================Reducing node 252, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=252}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 252
------------------------------------------------------------


=================Reducing node 254, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__arguments_6]dd@1
    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println(             );
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println(             );
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 254
------------------------------------------------------------


=================Reducing node 259, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=259}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println(       "lang");
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println(       "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 259
------------------------------------------------------------


==================Reducing node 5, size=22==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__sourceFile_2]dd@1
    --file: small.go--
    package main;
    func main() {
        fmt.Println("go" + "lang");
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


=================Reducing node 283, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=283}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 283
------------------------------------------------------------


=================Reducing node 284, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 284
------------------------------------------------------------


=================Reducing node 280, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 280
------------------------------------------------------------


=================Reducing node 275, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=275}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 275
------------------------------------------------------------


=================Reducing node 261, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 261
------------------------------------------------------------


=================Reducing node 262, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=262}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 262
------------------------------------------------------------


==================Reducing node 3, size=22==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


=================Reducing node 295, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 295
------------------------------------------------------------


=================Reducing node 294, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 294
------------------------------------------------------------


=================Reducing node 293, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 293
------------------------------------------------------------


=================Reducing node 292, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 292
------------------------------------------------------------


=================Reducing node 287, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 287
------------------------------------------------------------


=================Reducing node 286, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 286
------------------------------------------------------------


=================Reducing node 282, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 282
------------------------------------------------------------


=================Reducing node 281, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 281
------------------------------------------------------------


=================Reducing node 279, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 279
------------------------------------------------------------


=================Reducing node 277, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 277
------------------------------------------------------------


=================Reducing node 276, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 276
------------------------------------------------------------


=================Reducing node 274, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 274
------------------------------------------------------------


=================Reducing node 270, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 270
------------------------------------------------------------


=================Reducing node 269, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 269
------------------------------------------------------------


=================Reducing node 255, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 255
------------------------------------------------------------


=================Reducing node 253, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 253
------------------------------------------------------------


=================Reducing node 242, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 242
------------------------------------------------------------


=================Reducing node 19, size=22==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 17, size=22==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 17
------------------------------------------------------------


=================Reducing node 13, size=22==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 12, size=22==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 10, size=22==================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


=Fixpoint iteration 2. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
(|:sourceFile) {id=297,slot_type=sourceFile}
|___aux_rule__sourceFile_6 {id=298,slot_type=aux_rule__sourceFile_6}
    |___packageClause {id=299,slot_type=packageClause}
    |   |___Token:package {id=373,slot_type=PACKAGE}
    |   |___Token:main {id=374,slot_type=IDENTIFIER}
    |___Token:; {id=372,slot_type=[eos,SEMI]}
    |___(*) {id=301,slot_type=kleene_star__sourceFile_2}
    |   |___aux_rule__sourceFile_1 {id=362,slot_type=aux_rule__sourceFile_1}
    |       |___importDecl {id=363,slot_type=importDecl}
    |       |   |___Token:import {id=366,slot_type=IMPORT}
    |       |   |___Token:"fmt" {id=371,slot_type=[altnt_block__importDecl_3,importSpec,importPath,string_,INTERPRETED_STRING_LIT]}
    |       |___Token:; {id=365,slot_type=[eos,SEMI]}
    |___(*) {id=302,slot_type=kleene_star__sourceFile_4}
        |___aux_rule__sourceFile_3 {id=303,slot_type=aux_rule__sourceFile_3}
            |___functionDecl {id=307,slot_type=[altnt_block__sourceFile_5,functionDecl]}
            |   |___Token:func {id=308,slot_type=FUNC}
            |   |___Token:main {id=309,slot_type=IDENTIFIER}
            |   |___parameters {id=359,slot_type=[signature,parameters]}
            |   |   |___Token:( {id=360,slot_type=L_PAREN}
            |   |   |___Token:) {id=361,slot_type=R_PAREN}
            |   |___(?) {id=311,slot_type=optional__functionDecl_1}
            |       |___block {id=312,slot_type=block}
            |           |___Token:{ {id=313,slot_type=L_CURLY}
            |           |___(?) {id=314,slot_type=optional__block_1}
            |           |   |___(+) {id=316,slot_type=statementList}
            |           |       |___aux_rule__statementList_2 {id=318,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |           |___primaryExpr {id=326,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |           |   |___Token:fmt {id=358,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |           |   |___(*) {id=328,slot_type=kleene_star__primaryExpr_1}
            |           |           |       |___aux_rule__primaryExpr_4 {id=354,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |           |       |   |___Token:. {id=355,slot_type=DOT}
            |           |           |       |   |___Token:Println {id=356,slot_type=IDENTIFIER}
            |           |           |       |___arguments {id=331,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |           |           |___Token:( {id=332,slot_type=L_PAREN}
            |           |           |           |___(?) {id=333,slot_type=optional__arguments_6}
            |           |           |           |   |___expression {id=338,slot_type=[aux_rule__arguments_5,altnt_block__arguments_7,expressionList,expression]}
            |           |           |           |       |___Token:"go" {id=353,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |           |           |       |___(*) {id=340,slot_type=kleene_star__expression_1}
            |           |           |           |           |___aux_rule__expression_2 {id=341,slot_type=aux_rule__expression_2}
            |           |           |           |               |___Token:+ {id=349,slot_type=[altnt_block__expression_3,PLUS]}
            |           |           |           |               |___Token:"lang" {id=348,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |           |           |___Token:) {id=334,slot_type=R_PAREN}
            |           |           |___Token:; {id=321,slot_type=[eos,SEMI]}
            |           |___Token:} {id=315,slot_type=R_CURLY}
            |___Token:; {id=306,slot_type=[eos,SEMI]}
------------------------------------------------------------


=================Reducing node 298, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 298
------------------------------------------------------------


=================Reducing node 302, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 302
------------------------------------------------------------


=================Reducing node 303, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=303}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 303
------------------------------------------------------------


=================Reducing node 307, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 307
------------------------------------------------------------


=================Reducing node 311, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main()
     ;
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main()
     ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 311
------------------------------------------------------------


=================Reducing node 312, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=312}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 312
------------------------------------------------------------


=================Reducing node 314, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 314
------------------------------------------------------------


=================Reducing node 316, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=316}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 316
------------------------------------------------------------


=================Reducing node 318, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 318
------------------------------------------------------------


=================Reducing node 326, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
            Println               ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
            Println               ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
                    "go"          ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
                    "go"          ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
                    "go" + "lang" ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
                    "go" + "lang" ;
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 326
------------------------------------------------------------


=================Reducing node 328, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println               ;
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println               ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt        ("go" + "lang");
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt        ("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 328
------------------------------------------------------------


=================Reducing node 331, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=331}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 331
------------------------------------------------------------


=================Reducing node 333, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println(             );
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println(             );
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 333
------------------------------------------------------------


=================Reducing node 338, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=338}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println(       "lang");
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println(       "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 338
------------------------------------------------------------


=================Reducing node 301, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    func main() {
        fmt.Println("go" + "lang");
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 301
------------------------------------------------------------


=================Reducing node 362, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=362}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 362
------------------------------------------------------------


=================Reducing node 363, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 363
------------------------------------------------------------


=================Reducing node 359, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 359
------------------------------------------------------------


=================Reducing node 354, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=354}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 354
------------------------------------------------------------


=================Reducing node 340, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
    --file: <formatted tokenized program in its original format>--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 340
------------------------------------------------------------


=================Reducing node 341, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=341}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 341
------------------------------------------------------------


=================Reducing node 299, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 299
------------------------------------------------------------


=================Reducing node 374, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 374
------------------------------------------------------------


=================Reducing node 373, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 373
------------------------------------------------------------


=================Reducing node 372, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 372
------------------------------------------------------------


=================Reducing node 371, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 371
------------------------------------------------------------


=================Reducing node 366, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 366
------------------------------------------------------------


=================Reducing node 365, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 365
------------------------------------------------------------


=================Reducing node 361, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 361
------------------------------------------------------------


=================Reducing node 360, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 360
------------------------------------------------------------


=================Reducing node 358, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 358
------------------------------------------------------------


=================Reducing node 356, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 356
------------------------------------------------------------


=================Reducing node 355, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 355
------------------------------------------------------------


=================Reducing node 353, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 353
------------------------------------------------------------


=================Reducing node 349, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 349
------------------------------------------------------------


=================Reducing node 348, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 348
------------------------------------------------------------


=================Reducing node 334, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 334
------------------------------------------------------------


=================Reducing node 332, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 332
------------------------------------------------------------


=================Reducing node 321, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 321
------------------------------------------------------------


=================Reducing node 315, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 315
------------------------------------------------------------


=================Reducing node 313, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 313
------------------------------------------------------------


=================Reducing node 309, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 309
------------------------------------------------------------


=================Reducing node 308, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 308
------------------------------------------------------------


=================Reducing node 306, size=22=================

The current best program is the following

    --file: small.go--
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 306
------------------------------------------------------------


#test success = 1
#test failure = 13
#test result cache hits = 19
#test execution cancelled = 0
#node edit action set cache hits = 16
#external test execution cache hits = 0
