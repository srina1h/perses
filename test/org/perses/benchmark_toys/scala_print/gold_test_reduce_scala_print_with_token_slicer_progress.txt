=====================Reduction starts.======================

The initial program size is 29
The command line options are:
---
helpFlags:
  groupName: "Help"
  help: false
verbosityFlags:
  groupName: "Verbosity"
  verbosity: "INFO"
  listVerbosity: false
versionFlags:
  groupName: "Version"
  version: false
inputFlags:
  groupName: "Inputs"
  testScript: "r.sh"
  inputFile: "Hello.sc"
  deps: []
  sourceFile: "Hello.sc"
resultOutputFlags:
  groupName: "Outputs"
  outputDir: "reduce_scala_print_with_token_slicer_output_dir"
reductionControlFlags:
  groupName: "General Reduction Control"
  fixpoint: true
  numOfThreads: 1
  codeFormat: null
  testScriptExecutionTimeoutInSeconds: 600
  testScriptExecutionKeepWaitingAfterTimeout: true
outputRefiningFlags:
  groupName: "Output Refining Control"
  callFormatter: false
  formatCmd: ""
  callCReduce: false
  creduceCmd: "creduce"
algorithmControlFlags:
  groupName: "Reduction Algorithm Control"
  reductionAlgorithm: "perses_node_with_dfs_delta"
  listAllReductionAlgorithms: false
  rebuildParseTreeEachIteration: true
  enableTokenSlicer: true
  enableTreeSlicer: false
  enableLineSlicer: false
  defaultDeltaDebuggerTypeForKleene: "DFS"
  maxEditCountForRegularRuleNode: 100
  maxBfsDepthForRegularRuleNode: 5
  stopAtFirstCompatibleChildForRegularRuleNode: false
languageControlFlags:
  groupName: "Language Control"
  languageName: ""
  listLangs: false
  designatedParserFacadeClassName: ""
  listParserFacades: false
  languageJarFiles: []
vulcanFlags:
  groupName: "Vulcan Reducer Control"
  enableVulcan: false
  nonDeletionIterationLimit: 10
  windowSize: 4
  vulcanFixpoint: false
trecFlags:
  groupName: "T-Rec Reducer Control"
  enableTrec: false
profilingFlags:
  groupName: "Profiling"
  progressDumpFile: "reduce_scala_print_with_token_slicer_reduction_progress.txt"
  appendToProgressDumpFile: true
  statDumpFile: null
  profileQueryCacheTime: null
  profileQueryCacheTimeCSV: null
  profileQueryCacheMemory: null
  actionSetProfiler: null
  profileDeltaDebugger: null
cacheControlFlags:
  groupName: "Cache Control"
  queryCaching: "TRUE"
  nodeActionSetCaching: true
  queryCacheRefreshThreshold: 0
  enableLightweightRefreshing: true
  enablePassCache: false
  globalCacheFile: null
  pathToSaveUpdatedGlobalCache: null
experimentFlags:
  groupName: "Experiment Control"
  cacheType: "COMPACT_QUERY_CACHE_FORMAT_SENSITIVE"
  onDemandReducerClasses: null

Parser Facade: class org.perses.grammar.scala.PnfScalaParserFacade
------------------------------------------------------------


The sanity check has been performed. The result is PassingSanityCheckResult
=Fixpoint iteration 1. Reducer: perses_node_with_dfs_delta==

The spar-tree is the following.
compilationUnit {id=1,slot_type=compilationUnit}
|___(+) {id=2,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=8,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=9,slot_type=Token}
        |___objectDef {id=10,slot_type=objectDef}
            |___Token:Hello {id=11,slot_type=Id}
            |___(?) {id=13,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=15,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=16,slot_type=Token}
                    |___(+) {id=17,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=23,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=24,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=26,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=27,slot_type=funSig}
                    |           |   |___Token:main {id=136,slot_type=Id}
                    |           |   |___(*) {id=138,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=139,slot_type=paramClause}
                    |           |           |___Token:( {id=140,slot_type=Token}
                    |           |           |___(?) {id=141,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=144,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=145,slot_type=Id}
                    |           |           |       |___(?) {id=146,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=147,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=148,slot_type=Token}
                    |           |           |               |___simpleType {id=156,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=178,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=158,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=160,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=161,slot_type=Token}
                    |           |           |                           |___Token:String {id=174,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=163,slot_type=Token}
                    |           |           |___Token:) {id=142,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=29,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=30,slot_type=Token}
                    |               |___blockExpr {id=40,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,simpleExpr,blockExpr]}
                    |                   |___Token:{ {id=41,slot_type=Token}
                    |                   |___(+) {id=45,slot_type=[altnt_block__blockExpr_1,block,kleene_plus__block_1]}
                    |                   |   |___infixExpr {id=51,slot_type=[blockStat,expr1,aux_rule__expr1_25,postfixExpr,infixExpr]}
                    |                   |       |___simpleExpr1 {id=109,slot_type=[prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |       |   |___Token:println {id=135,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |       |   |___(*) {id=111,slot_type=kleene_star__simpleExpr1_4}
                    |                   |       |       |___aux_rule__argumentExprs_7 {id=114,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                   |       |           |___Token:( {id=115,slot_type=Token}
                    |                   |       |           |___(?) {id=118,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                   |       |           |   |___Token:"line 1" {id=132,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                   |       |           |___Token:) {id=117,slot_type=Token}
                    |                   |       |___(*) {id=53,slot_type=kleene_star__infixExpr_2}
                    |                   |           |___aux_rule__infixExpr_3 {id=54,slot_type=aux_rule__infixExpr_3}
                    |                   |               |___Token:println {id=55,slot_type=Id}
                    |                   |               |___infixExpr {id=56,slot_type=infixExpr}
                    |                   |                   |___aux_rule__simpleExpr1_10 {id=89,slot_type=[prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                   |                   |   |___Token:( {id=90,slot_type=Token}
                    |                   |                   |   |___(?) {id=91,slot_type=optional__simpleExpr1_1}
                    |                   |                   |   |   |___Token:"Hello, world" {id=106,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                   |                   |   |___Token:) {id=92,slot_type=Token}
                    |                   |                   |___(*) {id=58,slot_type=kleene_star__infixExpr_2}
                    |                   |                       |___aux_rule__infixExpr_3 {id=59,slot_type=aux_rule__infixExpr_3}
                    |                   |                           |___Token:println {id=60,slot_type=Id}
                    |                   |                           |___aux_rule__simpleExpr1_10 {id=67,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                   |                               |___Token:( {id=68,slot_type=Token}
                    |                   |                               |___(?) {id=69,slot_type=optional__simpleExpr1_1}
                    |                   |                               |   |___Token:"line 2" {id=84,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                   |                               |___Token:) {id=70,slot_type=Token}
                    |                   |___Token:} {id=43,slot_type=Token}
                    |___Token:} {id=18,slot_type=Token}
------------------------------------------------------------


==================Reducing node 2, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 8, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


==================Reducing node 9, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 10, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello
    --file: <formatted tokenized program in its original format>--
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


=================Reducing node 11, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 13, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
    --file: <formatted tokenized program in its original format>--
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 15, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=15}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 16, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 17, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 17
------------------------------------------------------------


=================Reducing node 18, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 23, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
            main
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
                                        {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                                        {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 23
------------------------------------------------------------


=================Reducing node 24, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 24
------------------------------------------------------------


=================Reducing node 26, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 26
------------------------------------------------------------


=================Reducing node 27, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main                      = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                      = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def      args                 = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def      args                 = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 27
------------------------------------------------------------


=================Reducing node 29, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 29
------------------------------------------------------------


=================Reducing node 136, size=29=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 136
------------------------------------------------------------


=================Reducing node 138, size=29=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main                      = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                      = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 138
------------------------------------------------------------


=================Reducing node 30, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 30
------------------------------------------------------------


=================Reducing node 40, size=29==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

3 entries are removed: 9 --> 6.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 13
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 40 from 29 to 27
------------------------------------------------------------


=================Reducing node 139, size=27=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: Hello.sc--
    object Hello {
        def main                      =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                      =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 139
------------------------------------------------------------


=================Reducing node 51, size=27==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                    "line 1"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                    "line 1"
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51
------------------------------------------------------------


=================Reducing node 140, size=27=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 140
------------------------------------------------------------


=================Reducing node 141, size=27=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__paramClause_2]dd@1
    --file: Hello.sc--
    object Hello {
        def main(                   ) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(                   ) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 141
------------------------------------------------------------


=================Reducing node 142, size=27=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 142
------------------------------------------------------------


=================Reducing node 109, size=27=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                    "line 1"
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                    "line 1"
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

5 entries are removed: 10 --> 5.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 10
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 109 from 27 to 24
------------------------------------------------------------


=================Reducing node 53, size=24==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53
------------------------------------------------------------


=================Reducing node 144, size=24=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: Hello.sc--
    object Hello {
        def main(                   ) =
            println
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(                   ) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(      Array        ) =
            println
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(      Array        ) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 144
------------------------------------------------------------


=================Reducing node 135, size=24=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 135
------------------------------------------------------------


=================Reducing node 54, size=24==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=54}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]kleene replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54
------------------------------------------------------------


=================Reducing node 145, size=24=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 145
------------------------------------------------------------


=================Reducing node 146, size=24=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
            println("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 146
------------------------------------------------------------


=================Reducing node 55, size=24==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55
------------------------------------------------------------


=================Reducing node 56, size=24==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world"
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println
                    "line 2"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println
                    "line 2"
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println
                   ("line 2")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println
                   ("line 2")
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

7 entries are removed: 12 --> 5.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 12
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 56 from 24 to 20
------------------------------------------------------------


=================Reducing node 147, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 147
------------------------------------------------------------


=================Reducing node 89, size=20==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world"
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 89
------------------------------------------------------------


=================Reducing node 148, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 148
------------------------------------------------------------


=================Reducing node 156, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args:       String ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:       String ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 156
------------------------------------------------------------


=================Reducing node 90, size=20==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 90
------------------------------------------------------------


=================Reducing node 91, size=20==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__simpleExpr1_1]dd@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println(              )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println(              )
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 91
------------------------------------------------------------


=================Reducing node 92, size=20==================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 92
------------------------------------------------------------


=================Reducing node 178, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 178
------------------------------------------------------------


=================Reducing node 158, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 158
------------------------------------------------------------


=================Reducing node 106, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 106
------------------------------------------------------------


=================Reducing node 160, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=160}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 160
------------------------------------------------------------


=================Reducing node 161, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 161
------------------------------------------------------------


=================Reducing node 174, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 174
------------------------------------------------------------


=================Reducing node 163, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 163
------------------------------------------------------------


=Fixpoint iteration 2. Reducer: perses_node_with_dfs_delta==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___infixExpr {id=215,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr]}
                    |                   |___Token:println {id=250,slot_type=[prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=217,slot_type=kleene_star__infixExpr_2}
                    |                       |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                           |___Token:println {id=219,slot_type=Id}
                    |                           |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                               |___Token:( {id=227,slot_type=Token}
                    |                               |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                               |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                               |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


=================Reducing node 181, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 181
------------------------------------------------------------


=================Reducing node 187, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 187
------------------------------------------------------------


=================Reducing node 188, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 188
------------------------------------------------------------


=================Reducing node 189, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
    --file: <formatted tokenized program in its original format>--
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 189
------------------------------------------------------------


=================Reducing node 190, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 190
------------------------------------------------------------


=================Reducing node 192, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
    --file: <formatted tokenized program in its original format>--
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 192
------------------------------------------------------------


=================Reducing node 194, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=194}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 194
------------------------------------------------------------


=================Reducing node 195, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 195
------------------------------------------------------------


=================Reducing node 196, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 196
------------------------------------------------------------


=================Reducing node 197, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 197
------------------------------------------------------------


=================Reducing node 202, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
            main
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 202
------------------------------------------------------------


=================Reducing node 203, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 203
------------------------------------------------------------


=================Reducing node 205, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 205
------------------------------------------------------------


=================Reducing node 206, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main                      =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                      =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def      args                 =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def      args                 =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 206
------------------------------------------------------------


=================Reducing node 208, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 208
------------------------------------------------------------


=================Reducing node 251, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 251
------------------------------------------------------------


=================Reducing node 253, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main                      =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                      =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 253
------------------------------------------------------------


=================Reducing node 209, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 209
------------------------------------------------------------


=================Reducing node 215, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world"
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 215
------------------------------------------------------------


=================Reducing node 254, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=254}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 254
------------------------------------------------------------


=================Reducing node 250, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 250
------------------------------------------------------------


=================Reducing node 217, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 217
------------------------------------------------------------


=================Reducing node 255, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 255
------------------------------------------------------------


=================Reducing node 256, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__paramClause_2]dd@1
    --file: Hello.sc--
    object Hello {
        def main(                   ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(                   ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 256
------------------------------------------------------------


=================Reducing node 257, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 257
------------------------------------------------------------


=================Reducing node 218, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=218}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 218
------------------------------------------------------------


=================Reducing node 259, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=259}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(      Array        ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(      Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 259
------------------------------------------------------------


=================Reducing node 219, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 219
------------------------------------------------------------


=================Reducing node 226, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world"
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 226
------------------------------------------------------------


=================Reducing node 260, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 260
------------------------------------------------------------


=================Reducing node 261, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 261
------------------------------------------------------------


=================Reducing node 227, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 227
------------------------------------------------------------


=================Reducing node 228, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println(              )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println(              )
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 228
------------------------------------------------------------


=================Reducing node 229, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 229
------------------------------------------------------------


=================Reducing node 262, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=262}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 262
------------------------------------------------------------


=================Reducing node 243, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 243
------------------------------------------------------------


=================Reducing node 263, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 263
------------------------------------------------------------


=================Reducing node 271, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:       String ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:       String ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 271
------------------------------------------------------------


=================Reducing node 293, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 293
------------------------------------------------------------


=================Reducing node 273, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 273
------------------------------------------------------------


=================Reducing node 275, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=275}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 275
------------------------------------------------------------


=================Reducing node 276, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 276
------------------------------------------------------------


=================Reducing node 289, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 289
------------------------------------------------------------


=================Reducing node 278, size=20=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 278
------------------------------------------------------------


==Fixpoint iteration 3. Reducer: concurrent_token_slicer@1==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___infixExpr {id=215,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr]}
                    |                   |___Token:println {id=250,slot_type=[prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=217,slot_type=kleene_star__infixExpr_2}
                    |                       |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                           |___Token:println {id=219,slot_type=Id}
                    |                           |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                               |___Token:( {id=227,slot_type=Token}
                    |                               |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                               |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                               |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=243}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world"
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

14 entries are removed: 20 --> 6.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 36
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println(              )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println(              )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String])
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]  =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]  =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[      ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[      ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args:      [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:      [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args  Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args  Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(    : Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(    : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def     (args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def     (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
            main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello
        def main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object       {
        def main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object       {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
           Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
           Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==Fixpoint iteration 4. Reducer: concurrent_token_slicer@2==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world"
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world"
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println(
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println(
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println               )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println               )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String])
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String   =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String   =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array[       ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[       ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args: Array       ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array       ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args:       String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:       String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(args       [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args       [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main(      Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(      Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def main     : Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
        def      args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def      args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello {
                (args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object Hello
            main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
    object
        def main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    --file: Hello.sc--
                 {
        def main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                 {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==Fixpoint iteration 5. Reducer: concurrent_token_slicer@3==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println(
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println(
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String])
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args: Array[         =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[         =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args:             ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:             ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(args        String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args        String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main(           [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(           [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def main       Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
        def          : Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def          : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello {
                 args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object Hello
                (args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
    object
            main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    --file: Hello.sc--
        def main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==Fixpoint iteration 6. Reducer: concurrent_token_slicer@4==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String])
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args: Array[
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args: Array          =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array          =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args:              ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:              ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(args              ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args              ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main(            String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(            String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def main            [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
        def            Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def            Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello {
                     : Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object Hello
                 args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
    object
                (args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    --file: Hello.sc--
            main(args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==Fixpoint iteration 7. Reducer: concurrent_token_slicer@5==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String])
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(args: Array[
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(args: Array
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(args:                =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:                =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main(                  ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(                  ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def main             String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
        def                 [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def                 [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello {
                       Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object Hello
                     : Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
    object
                 args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    --file: Hello.sc--
                (args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==Fixpoint iteration 8. Reducer: concurrent_token_slicer@6==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String])
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main(args: Array[
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main(args: Array
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main(args:
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main(args                 =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args                 =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main(                   ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(                   ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def main                   ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
        def                  String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def                  String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello {
                            [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object Hello
                       Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
    object
                     : Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    --file: Hello.sc--
                 args: Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==Fixpoint iteration 9. Reducer: concurrent_token_slicer@7==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def main(args: Array[
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def main(args: Array
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def main(args:
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def main(args
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def main(                     =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(                     =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def main                    ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
        def                        ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def                        ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello {
                             String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object Hello
                            [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
    object
                       Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    --file: Hello.sc--
                     : Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 10. Reducer: concurrent_token_slicer@8==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
        def main(args: Array[
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
        def main(args: Array
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
        def main(args:
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
        def main(args
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
        def main(
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
        def main                      =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
        def                         ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def                         ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello {
                                   ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object Hello
                             String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
    object
                            [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    --file: Hello.sc--
                       Array[String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 11. Reducer: concurrent_token_slicer@9==

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello {
        def main(args: Array[
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello {
        def main(args: Array
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello {
        def main(args:
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello {
        def main(args
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello {
        def main(
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello {
        def main
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello {
        def                           =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def                           =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello {
                                    ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object Hello
                                   ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
    object
                             String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    --file: Hello.sc--
                            [String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 12. Reducer: concurrent_token_slicer@10=

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object Hello {
        def main(args: Array
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object Hello {
        def main(args:
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object Hello {
        def main(args
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object Hello {
        def main(
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object Hello {
        def main
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object Hello {
        def
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object Hello {
                                      =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object Hello
                                    ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
    object
                                   ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    --file: Hello.sc--
                             String]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 13. Reducer: concurrent_token_slicer@11=

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
    object Hello {
        def main(args:
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
    object Hello {
        def main(args
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
    object Hello {
        def main(
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
    object Hello {
        def main
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
    object Hello {
        def
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
    object Hello {
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
    object Hello
                                      =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
    object
                                    ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    --file: Hello.sc--
                                   ]) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 14. Reducer: concurrent_token_slicer@12=

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    --file: Hello.sc--
    object Hello {
        def main(args
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    --file: Hello.sc--
    object Hello {
        def main(
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    --file: Hello.sc--
    object Hello {
        def main
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    --file: Hello.sc--
    object Hello {
        def
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    --file: Hello.sc--
    object Hello {
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    --file: Hello.sc--
    object Hello
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    --file: Hello.sc--
    object
                                      =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    --file: Hello.sc--
                                    ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 15. Reducer: concurrent_token_slicer@13=

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    --file: Hello.sc--
    object Hello {
        def main(
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    --file: Hello.sc--
    object Hello {
        def main
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    --file: Hello.sc--
    object Hello {
        def
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    --file: Hello.sc--
    object Hello {
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    --file: Hello.sc--
    object Hello
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    --file: Hello.sc--
    object
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    --file: Hello.sc--
                                      =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 16. Reducer: concurrent_token_slicer@14=

The spar-tree is the following.
compilationUnit {id=180,slot_type=compilationUnit}
|___(+) {id=181,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=187,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=188,slot_type=Token}
        |___objectDef {id=189,slot_type=objectDef}
            |___Token:Hello {id=190,slot_type=Id}
            |___(?) {id=192,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=194,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=195,slot_type=Token}
                    |___(+) {id=196,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=202,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=203,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=205,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=206,slot_type=funSig}
                    |           |   |___Token:main {id=251,slot_type=Id}
                    |           |   |___(*) {id=253,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=254,slot_type=paramClause}
                    |           |           |___Token:( {id=255,slot_type=Token}
                    |           |           |___(?) {id=256,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=259,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=260,slot_type=Id}
                    |           |           |       |___(?) {id=261,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=262,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=263,slot_type=Token}
                    |           |           |               |___simpleType {id=271,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=293,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=273,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=275,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=276,slot_type=Token}
                    |           |           |                           |___Token:String {id=289,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=278,slot_type=Token}
                    |           |           |___Token:) {id=257,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=208,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=209,slot_type=Token}
                    |               |___(*) {id=217,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,kleene_star__infixExpr_2]}
                    |                   |___aux_rule__infixExpr_3 {id=218,slot_type=aux_rule__infixExpr_3}
                    |                       |___Token:println {id=219,slot_type=Id}
                    |                       |___aux_rule__simpleExpr1_10 {id=226,slot_type=[infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,aux_rule__simpleExpr1_10]}
                    |                           |___Token:( {id=227,slot_type=Token}
                    |                           |___(?) {id=228,slot_type=optional__simpleExpr1_1}
                    |                           |   |___Token:"Hello, world" {id=243,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=229,slot_type=Token}
                    |___Token:} {id=197,slot_type=Token}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    --file: Hello.sc--
    object Hello {
        def main
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    --file: Hello.sc--
    object Hello {
        def
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    --file: Hello.sc--
    object Hello {
                                  )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    --file: Hello.sc--
    object Hello
                    "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    --file: Hello.sc--
    object
                   ("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    --file: Hello.sc--
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 17. Reducer: perses_node_with_dfs_delta=

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=================Reducing node 296, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 296
------------------------------------------------------------


=================Reducing node 302, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 302
------------------------------------------------------------


=================Reducing node 303, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 303
------------------------------------------------------------


=================Reducing node 304, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
    --file: <formatted tokenized program in its original format>--
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 304
------------------------------------------------------------


=================Reducing node 305, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 305
------------------------------------------------------------


=================Reducing node 307, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
    --file: <formatted tokenized program in its original format>--
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 307
------------------------------------------------------------


=================Reducing node 309, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=309}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 309
------------------------------------------------------------


=================Reducing node 310, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 310
------------------------------------------------------------


=================Reducing node 311, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 311
------------------------------------------------------------


=================Reducing node 312, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 312
------------------------------------------------------------


=================Reducing node 317, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
            main
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            main
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            println
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 317
------------------------------------------------------------


=================Reducing node 318, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 318
------------------------------------------------------------


=================Reducing node 320, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 320
------------------------------------------------------------


=================Reducing node 321, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main                      =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def      args                 =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def      args                 =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 321
------------------------------------------------------------


=================Reducing node 323, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 323
------------------------------------------------------------


=================Reducing node 361, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 361
------------------------------------------------------------


=================Reducing node 363, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main                      =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main                      =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 363
------------------------------------------------------------


=================Reducing node 324, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 324
------------------------------------------------------------


=================Reducing node 334, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world"
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 334
------------------------------------------------------------


=================Reducing node 364, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=364}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 364
------------------------------------------------------------


=================Reducing node 360, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 360
------------------------------------------------------------


=================Reducing node 336, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 336
------------------------------------------------------------


=================Reducing node 365, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 365
------------------------------------------------------------


=================Reducing node 366, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(                   ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(                   ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 366
------------------------------------------------------------


=================Reducing node 367, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 367
------------------------------------------------------------


=================Reducing node 339, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=339}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 339
------------------------------------------------------------


=================Reducing node 369, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=369}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(      Array        ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(      Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 369
------------------------------------------------------------


=================Reducing node 340, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 340
------------------------------------------------------------


=================Reducing node 343, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println(              )
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println(              )
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 343
------------------------------------------------------------


=================Reducing node 342, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 342
------------------------------------------------------------


=================Reducing node 370, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 370
------------------------------------------------------------


=================Reducing node 371, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 371
------------------------------------------------------------


=================Reducing node 357, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 357
------------------------------------------------------------


=================Reducing node 372, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=372}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 372
------------------------------------------------------------


=================Reducing node 373, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 373
------------------------------------------------------------


=================Reducing node 381, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.sc--
    object Hello {
        def main(args:       String ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args:       String ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 381
------------------------------------------------------------


=================Reducing node 403, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 403
------------------------------------------------------------


=================Reducing node 383, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 383
------------------------------------------------------------


=================Reducing node 385, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=385}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 385
------------------------------------------------------------


=================Reducing node 386, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 386
------------------------------------------------------------


=================Reducing node 399, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 399
------------------------------------------------------------


=================Reducing node 388, size=19=================

The current best program is the following

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 388
------------------------------------------------------------


=Fixpoint iteration 18. Reducer: concurrent_token_slicer@1==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=357}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]  =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[      ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:      [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args  Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(    : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def     (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object       {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
           Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world"
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world"
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println "Hello, world")
    }
    --file: <formatted tokenized program in its original format>--
    object Hello {
        def main(args: Array[String]) =
            println "Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 19. Reducer: concurrent_token_slicer@2==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world"
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println(
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println               )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String   =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[       ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array       ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:       String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args       [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(      Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def      args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                 {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 20. Reducer: concurrent_token_slicer@3==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println(
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[         =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:             ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args        String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(           [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def          : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 21. Reducer: concurrent_token_slicer@4==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
            println
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array          =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:              ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args              ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(            String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def            Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 22. Reducer: concurrent_token_slicer@5==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]) =
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:                =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(                  ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def                 [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 23. Reducer: concurrent_token_slicer@6==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String])
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args                 =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(                   ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def                  String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 24. Reducer: concurrent_token_slicer@7==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String]
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(                     =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def                        ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 25. Reducer: concurrent_token_slicer@8==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[String
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main                      =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def                         ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 26. Reducer: concurrent_token_slicer@9==

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array[
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def                           =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 27. Reducer: concurrent_token_slicer@10=

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args: Array
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 28. Reducer: concurrent_token_slicer@11=

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args:
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 29. Reducer: concurrent_token_slicer@12=

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(args
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 30. Reducer: concurrent_token_slicer@13=

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main(
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
            println("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


=Fixpoint iteration 31. Reducer: concurrent_token_slicer@14=

The spar-tree is the following.
compilationUnit {id=295,slot_type=compilationUnit}
|___(+) {id=296,slot_type=topStatSeq}
    |___aux_rule__tmplDef_7 {id=302,slot_type=[topStat,aux_rule__topStat_5,tmplDef,aux_rule__tmplDef_5,altnt_block__tmplDef_3,aux_rule__tmplDef_7]}
        |___Token:object {id=303,slot_type=Token}
        |___objectDef {id=304,slot_type=objectDef}
            |___Token:Hello {id=305,slot_type=Id}
            |___(?) {id=307,slot_type=[classTemplateOpt,optional__classTemplateOpt_3]}
                |___templateBody {id=309,slot_type=[aux_rule__classTemplateOpt_2,templateBody]}
                    |___Token:{ {id=310,slot_type=Token}
                    |___(+) {id=311,slot_type=kleene_plus__templateBody_3}
                    |   |___aux_rule__def_2 {id=317,slot_type=[templateStat,aux_rule__templateStat_10,altnt_block__templateStat_9,def,aux_rule__def_2]}
                    |       |___Token:def {id=318,slot_type=Token}
                    |       |___aux_rule__funDef_8 {id=320,slot_type=[funDef,aux_rule__funDef_8]}
                    |           |___funSig {id=321,slot_type=funSig}
                    |           |   |___Token:main {id=361,slot_type=Id}
                    |           |   |___(*) {id=363,slot_type=[paramClauses,kleene_star__paramClauses_1]}
                    |           |       |___paramClause {id=364,slot_type=paramClause}
                    |           |           |___Token:( {id=365,slot_type=Token}
                    |           |           |___(?) {id=366,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=369,slot_type=[params,param]}
                    |           |           |       |___Token:args {id=370,slot_type=Id}
                    |           |           |       |___(?) {id=371,slot_type=optional__param_3}
                    |           |           |           |___aux_rule__param_2 {id=372,slot_type=aux_rule__param_2}
                    |           |           |               |___Token:: {id=373,slot_type=Token}
                    |           |           |               |___simpleType {id=381,slot_type=[paramType,aux_rule__paramType_2,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType]}
                    |           |           |                   |___Token:Array {id=403,slot_type=[aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                   |___(*) {id=383,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=385,slot_type=[aux_rule__simpleType_4,typeArgs]}
                    |           |           |                           |___Token:[ {id=386,slot_type=Token}
                    |           |           |                           |___Token:String {id=399,slot_type=[types,type_,infixType,compoundType,aux_rule__compoundType_4,annotType,simpleType,aux_rule__simpleType_5,aux_rule__simpleType_7,stableId,aux_rule__stableId_6,Id]}
                    |           |           |                           |___Token:] {id=388,slot_type=Token}
                    |           |           |___Token:) {id=367,slot_type=Token}
                    |           |___aux_rule__funDef_9 {id=323,slot_type=[altnt_block__funDef_5,aux_rule__funDef_9]}
                    |               |___Token:= {id=324,slot_type=Token}
                    |               |___simpleExpr1 {id=334,slot_type=[expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1]}
                    |                   |___Token:println {id=360,slot_type=[aux_rule__simpleExpr1_6,stableId,aux_rule__stableId_6,Id]}
                    |                   |___(*) {id=336,slot_type=kleene_star__simpleExpr1_4}
                    |                       |___aux_rule__argumentExprs_7 {id=339,slot_type=[aux_rule__simpleExpr1_5,argumentExprs,aux_rule__argumentExprs_7]}
                    |                           |___Token:( {id=340,slot_type=Token}
                    |                           |___(?) {id=343,slot_type=[altnt_block__argumentExprs_5,optional__simpleExpr1_1]}
                    |                           |   |___Token:"Hello, world" {id=357,slot_type=[exprs,expr,expr1,aux_rule__expr1_25,postfixExpr,infixExpr,prefixExpr,altnt_block__expr1_18,aux_rule__expr1_32,simpleExpr1,aux_rule__simpleExpr1_6,literal,StringLiteral]}
                    |                           |___Token:) {id=342,slot_type=Token}
                    |___Token:} {id=312,slot_type=Token}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def main
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
        def
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello {
                                  )
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object Hello
                    "Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
    object
                   ("Hello, world")
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.sc--
            println("Hello, world")
    }
------------------------------------------------------------


#test success = 4
#test failure = 211
#test result cache hits = 211
#test execution cancelled = 2
#node edit action set cache hits = 17
#external test execution cache hits = 0
