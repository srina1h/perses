=====================Reduction starts.======================

The initial program size is 55
The command line options are:
---
helpFlags:
  groupName: "Help"
  help: false
verbosityFlags:
  groupName: "Verbosity"
  verbosity: "INFO"
  listVerbosity: false
versionFlags:
  groupName: "Version"
  version: false
inputFlags:
  groupName: "Inputs"
  testScript: "r.sh"
  inputFile: "Hello.java"
  deps: []
  sourceFile: "Hello.java"
resultOutputFlags:
  groupName: "Outputs"
  outputDir: "result_reduction_golden_test_perses_node_priority_with_dfs_delta_Hello.java"
reductionControlFlags:
  groupName: "General Reduction Control"
  fixpoint: true
  numOfThreads: 1
  codeFormat: "COMPACT_ORIG_FORMAT"
  testScriptExecutionTimeoutInSeconds: 600
  testScriptExecutionKeepWaitingAfterTimeout: true
outputRefiningFlags:
  groupName: "Output Refining Control"
  callFormatter: false
  formatCmd: ""
  callCReduce: false
  creduceCmd: "creduce"
algorithmControlFlags:
  groupName: "Reduction Algorithm Control"
  reductionAlgorithm: "perses_node_priority_with_dfs_delta"
  listAllReductionAlgorithms: false
  rebuildParseTreeEachIteration: true
  enableTokenSlicer: false
  enableTreeSlicer: false
  enableLineSlicer: false
  defaultDeltaDebuggerTypeForKleene: "DFS"
  maxEditCountForRegularRuleNode: 100
  maxBfsDepthForRegularRuleNode: 5
  stopAtFirstCompatibleChildForRegularRuleNode: false
languageControlFlags:
  groupName: "Language Control"
  languageName: ""
  listLangs: false
  designatedParserFacadeClassName: ""
  listParserFacades: false
  languageJarFiles: []
vulcanFlags:
  groupName: "Vulcan Reducer Control"
  enableVulcan: false
  nonDeletionIterationLimit: 10
  windowSize: 4
  vulcanFixpoint: false
trecFlags:
  groupName: "T-Rec Reducer Control"
  enableTrec: false
profilingFlags:
  groupName: "Profiling"
  progressDumpFile: "reduction_progress.txt"
  appendToProgressDumpFile: true
  statDumpFile: null
  profileQueryCacheTime: null
  profileQueryCacheTimeCSV: null
  profileQueryCacheMemory: null
  actionSetProfiler: null
  profileDeltaDebugger: null
cacheControlFlags:
  groupName: "Cache Control"
  queryCaching: "TRUE"
  nodeActionSetCaching: true
  queryCacheRefreshThreshold: 0
  enableLightweightRefreshing: true
  enablePassCache: false
  globalCacheFile: null
  pathToSaveUpdatedGlobalCache: null
experimentFlags:
  groupName: "Experiment Control"
  cacheType: "COMPACT_QUERY_CACHE"
  onDemandReducerClasses: null

Parser Facade: class org.perses.grammar.java.Java8ParserFacade
------------------------------------------------------------


The sanity check has been performed. The result is PassingSanityCheckResult
=Fixpoint iteration 1. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
compilationUnit {id=1,slot_type=compilationUnit}
|___(*) {id=2,slot_type=kleene_star__compilationUnit_3}
    |___normalClassDeclaration {id=5,slot_type=[typeDeclaration,classDeclaration,normalClassDeclaration]}
        |___(*) {id=6,slot_type=kleene_star__normalClassDeclaration_1}
        |   |___Token:public {id=285,slot_type=[classModifier,PUBLIC]}
        |___Token:class {id=7,slot_type=CLASS}
        |___Token:Hello {id=8,slot_type=Identifier}
        |___classBody {id=9,slot_type=classBody}
            |___Token:{ {id=10,slot_type=LBRACE}
            |___(*) {id=11,slot_type=kleene_star__classBody_1}
            |   |___methodDeclaration {id=14,slot_type=[classBodyDeclaration,methodDeclaration]}
            |       |___(*) {id=15,slot_type=kleene_star__methodDeclaration_1}
            |       |   |___Token:public {id=283,slot_type=[methodModifier,PUBLIC]}
            |       |   |___Token:static {id=282,slot_type=[methodModifier,STATIC]}
            |       |___methodHeader {id=16,slot_type=methodHeader}
            |       |   |___Token:void {id=279,slot_type=[result,VOID]}
            |       |   |___methodDeclarator {id=256,slot_type=methodDeclarator}
            |       |       |___Token:main {id=257,slot_type=Identifier}
            |       |       |___Token:( {id=258,slot_type=LPAREN}
            |       |       |___(?) {id=259,slot_type=optional__methodDeclarator_1}
            |       |       |   |___formalParameter {id=264,slot_type=[formalParameterList,aux_rule__formalParameterList_3,lastFormalParameter,formalParameter]}
            |       |       |       |___unannArrayType {id=268,slot_type=[unannType,unannArrayType]}
            |       |       |       |   |___Token:String {id=278,slot_type=[altnt_block__unannArrayType_1,unannClassOrInterfaceType,altnt_block__unannClassOrInterfaceType_3,unannClassType_lfno_unannClassOrInterfaceType,Identifier]}
            |       |       |       |   |___(+) {id=271,slot_type=[dims,kleene_plus__dims_5]}
            |       |       |       |       |___aux_rule__dims_3 {id=272,slot_type=aux_rule__dims_3}
            |       |       |       |           |___Token:[ {id=273,slot_type=LBRACK}
            |       |       |       |           |___Token:] {id=274,slot_type=RBRACK}
            |       |       |       |___Token:args {id=267,slot_type=[variableDeclaratorId,Identifier]}
            |       |       |___Token:) {id=260,slot_type=RPAREN}
            |       |___block {id=18,slot_type=[methodBody,block]}
            |           |___Token:{ {id=19,slot_type=LBRACE}
            |           |___(?) {id=20,slot_type=optional__block_1}
            |           |   |___(+) {id=22,slot_type=blockStatements}
            |           |       |___localVariableDeclarationStatement {id=218,slot_type=[blockStatement,localVariableDeclarationStatement]}
            |           |       |   |___localVariableDeclaration {id=219,slot_type=localVariableDeclaration}
            |           |       |   |   |___Token:String {id=254,slot_type=[unannType,unannClassOrInterfaceType,altnt_block__unannClassOrInterfaceType_3,unannClassType_lfno_unannClassOrInterfaceType,Identifier]}
            |           |       |   |   |___variableDeclarator {id=223,slot_type=[variableDeclaratorList,variableDeclarator]}
            |           |       |   |       |___Token:a {id=250,slot_type=[variableDeclaratorId,Identifier]}
            |           |       |   |       |___(?) {id=225,slot_type=optional__variableDeclarator_2}
            |           |       |   |           |___aux_rule__variableDeclarator_1 {id=226,slot_type=aux_rule__variableDeclarator_1}
            |           |       |   |               |___Token:= {id=227,slot_type=ASSIGN}
            |           |       |   |               |___Token:"hello" {id=249,slot_type=[variableInitializer,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,primary,altnt_block__primary_2,literal,StringLiteral]}
            |           |       |   |___Token:; {id=220,slot_type=SEMI}
            |           |       |___localVariableDeclarationStatement {id=183,slot_type=[blockStatement,localVariableDeclarationStatement]}
            |           |       |   |___localVariableDeclaration {id=184,slot_type=localVariableDeclaration}
            |           |       |   |   |___Token:String {id=217,slot_type=[unannType,unannClassOrInterfaceType,altnt_block__unannClassOrInterfaceType_3,unannClassType_lfno_unannClassOrInterfaceType,Identifier]}
            |           |       |   |   |___variableDeclarator {id=188,slot_type=[variableDeclaratorList,variableDeclarator]}
            |           |       |   |       |___Token:b {id=213,slot_type=[variableDeclaratorId,Identifier]}
            |           |       |   |       |___(?) {id=190,slot_type=optional__variableDeclarator_2}
            |           |       |   |           |___aux_rule__variableDeclarator_1 {id=191,slot_type=aux_rule__variableDeclarator_1}
            |           |       |   |               |___Token:= {id=192,slot_type=ASSIGN}
            |           |       |   |               |___Token:a {id=212,slot_type=[variableInitializer,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,typeName,Identifier]}
            |           |       |   |___Token:; {id=185,slot_type=SEMI}
            |           |       |___localVariableDeclarationStatement {id=146,slot_type=[blockStatement,localVariableDeclarationStatement]}
            |           |       |   |___localVariableDeclaration {id=147,slot_type=localVariableDeclaration}
            |           |       |   |   |___Token:String {id=182,slot_type=[unannType,unannClassOrInterfaceType,altnt_block__unannClassOrInterfaceType_3,unannClassType_lfno_unannClassOrInterfaceType,Identifier]}
            |           |       |   |   |___variableDeclarator {id=151,slot_type=[variableDeclaratorList,variableDeclarator]}
            |           |       |   |       |___Token:c {id=178,slot_type=[variableDeclaratorId,Identifier]}
            |           |       |   |       |___(?) {id=153,slot_type=optional__variableDeclarator_2}
            |           |       |   |           |___aux_rule__variableDeclarator_1 {id=154,slot_type=aux_rule__variableDeclarator_1}
            |           |       |   |               |___Token:= {id=155,slot_type=ASSIGN}
            |           |       |   |               |___Token:"world" {id=177,slot_type=[variableInitializer,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,primary,altnt_block__primary_2,literal,StringLiteral]}
            |           |       |   |___Token:; {id=148,slot_type=SEMI}
            |           |       |___localVariableDeclarationStatement {id=111,slot_type=[blockStatement,localVariableDeclarationStatement]}
            |           |       |   |___localVariableDeclaration {id=112,slot_type=localVariableDeclaration}
            |           |       |   |   |___Token:String {id=145,slot_type=[unannType,unannClassOrInterfaceType,altnt_block__unannClassOrInterfaceType_3,unannClassType_lfno_unannClassOrInterfaceType,Identifier]}
            |           |       |   |   |___variableDeclarator {id=116,slot_type=[variableDeclaratorList,variableDeclarator]}
            |           |       |   |       |___Token:d {id=141,slot_type=[variableDeclaratorId,Identifier]}
            |           |       |   |       |___(?) {id=118,slot_type=optional__variableDeclarator_2}
            |           |       |   |           |___aux_rule__variableDeclarator_1 {id=119,slot_type=aux_rule__variableDeclarator_1}
            |           |       |   |               |___Token:= {id=120,slot_type=ASSIGN}
            |           |       |   |               |___Token:c {id=140,slot_type=[variableInitializer,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,typeName,Identifier]}
            |           |       |   |___Token:; {id=113,slot_type=SEMI}
            |           |       |___expressionStatement {id=72,slot_type=[blockStatement,statement,statementWithoutTrailingSubstatement,expressionStatement]}
            |           |       |   |___methodInvocation {id=75,slot_type=[statementExpression,methodInvocation]}
            |           |       |   |   |___aux_rule__methodInvocation_18 {id=78,slot_type=[altnt_block__methodInvocation_12,aux_rule__methodInvocation_18]}
            |           |       |   |   |   |___typeName {id=79,slot_type=typeName}
            |           |       |   |   |   |   |___(?) {id=105,slot_type=optional__typeName_2}
            |           |       |   |   |   |   |   |___aux_rule__typeName_1 {id=107,slot_type=aux_rule__typeName_1}
            |           |       |   |   |   |   |       |___Token:System {id=110,slot_type=[packageName,Identifier]}
            |           |       |   |   |   |   |       |___Token:. {id=109,slot_type=DOT}
            |           |       |   |   |   |   |___Token:out {id=106,slot_type=Identifier}
            |           |       |   |   |   |___Token:. {id=80,slot_type=DOT}
            |           |       |   |   |   |___altnt_block__methodInvocation_13 {id=81,slot_type=altnt_block__methodInvocation_13}
            |           |       |   |   |       |___Token:println {id=82,slot_type=Identifier}
            |           |       |   |   |       |___Token:( {id=83,slot_type=LPAREN}
            |           |       |   |   |       |___(?) {id=84,slot_type=optional__explicitConstructorInvocation_2}
            |           |       |   |   |           |___Token:b {id=104,slot_type=[argumentList,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,typeName,Identifier]}
            |           |       |   |   |___Token:) {id=77,slot_type=RPAREN}
            |           |       |   |___Token:; {id=74,slot_type=SEMI}
            |           |       |___expressionStatement {id=31,slot_type=[blockStatement,statement,statementWithoutTrailingSubstatement,expressionStatement]}
            |           |           |___methodInvocation {id=34,slot_type=[statementExpression,methodInvocation]}
            |           |           |   |___aux_rule__methodInvocation_18 {id=37,slot_type=[altnt_block__methodInvocation_12,aux_rule__methodInvocation_18]}
            |           |           |   |   |___typeName {id=38,slot_type=typeName}
            |           |           |   |   |   |___(?) {id=64,slot_type=optional__typeName_2}
            |           |           |   |   |   |   |___aux_rule__typeName_1 {id=66,slot_type=aux_rule__typeName_1}
            |           |           |   |   |   |       |___Token:System {id=69,slot_type=[packageName,Identifier]}
            |           |           |   |   |   |       |___Token:. {id=68,slot_type=DOT}
            |           |           |   |   |   |___Token:out {id=65,slot_type=Identifier}
            |           |           |   |   |___Token:. {id=39,slot_type=DOT}
            |           |           |   |   |___altnt_block__methodInvocation_13 {id=40,slot_type=altnt_block__methodInvocation_13}
            |           |           |   |       |___Token:println {id=41,slot_type=Identifier}
            |           |           |   |       |___Token:( {id=42,slot_type=LPAREN}
            |           |           |   |       |___(?) {id=43,slot_type=optional__explicitConstructorInvocation_2}
            |           |           |   |           |___Token:d {id=63,slot_type=[argumentList,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,typeName,Identifier]}
            |           |           |   |___Token:) {id=36,slot_type=RPAREN}
            |           |           |___Token:; {id=33,slot_type=SEMI}
            |           |___Token:} {id=21,slot_type=RBRACE}
            |___Token:} {id=12,slot_type=RBRACE}
------------------------------------------------------------


==================Reducing node 2, size=55==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__compilationUnit_3]dd@1
    --file: Hello.java--
    --file: <formatted tokenized program in its original format>--
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 5, size=55==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=5}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


==================Reducing node 9, size=55==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 11, size=55==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__classBody_1]dd@1
    --file: Hello.java--
    public class Hello {
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 14, size=55==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=14}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
    public class Hello {
                                             {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
                                             {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 18, size=55==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 20, size=55==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__block_1]dd@1
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 22, size=55==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=22}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]remove whole except first
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@3
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@1
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(b);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@2
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:blockStatements]dd@1
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 8 --> 6.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 9
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String c = "world";
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@3
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@1
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String a = "hello";
        String b = a;
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:blockStatements]dd@2
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

4 entries are removed: 8 --> 4.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 4
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 22 from 55 to 36
------------------------------------------------------------


=================Reducing node 31, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 31
------------------------------------------------------------


=================Reducing node 34, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 34
------------------------------------------------------------


=================Reducing node 16, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 256, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 256
------------------------------------------------------------


=================Reducing node 37, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 37
------------------------------------------------------------


=================Reducing node 146, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 146
------------------------------------------------------------


=================Reducing node 111, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 111
------------------------------------------------------------


=================Reducing node 259, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__methodDeclarator_1]dd@1
    --file: Hello.java--
    public class Hello {
      public static void main(             ) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(             ) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 259
------------------------------------------------------------


=================Reducing node 264, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=264}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 264
------------------------------------------------------------


=================Reducing node 147, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 147
------------------------------------------------------------


=================Reducing node 112, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 112
------------------------------------------------------------


=================Reducing node 268, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
    public class Hello {
      public static void main(String   args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String   args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 268
------------------------------------------------------------


=================Reducing node 151, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c          ;
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c          ;
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 151
------------------------------------------------------------


=================Reducing node 116, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d    ;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d    ;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String     c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String     c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 116
------------------------------------------------------------


=================Reducing node 40, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 40
------------------------------------------------------------


=================Reducing node 38, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
               out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
               out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System    .println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System    .println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 38
------------------------------------------------------------


=================Reducing node 271, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 271
------------------------------------------------------------


=================Reducing node 272, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 272
------------------------------------------------------------


=================Reducing node 153, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c          ;
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c          ;
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 153
------------------------------------------------------------


=================Reducing node 154, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=154}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 154
------------------------------------------------------------


=================Reducing node 118, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d    ;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d    ;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 118
------------------------------------------------------------


=================Reducing node 119, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=119}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 119
------------------------------------------------------------


=================Reducing node 64, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
               out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
               out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 64
------------------------------------------------------------


=================Reducing node 66, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=66}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 66
------------------------------------------------------------


=================Reducing node 15, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__methodDeclaration_1]dd@2
    --file: Hello.java--
    public class Hello {
                    void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
                    void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__methodDeclaration_1]dd@1
    --file: Hello.java--
    public class Hello {
      public        void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public        void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__methodDeclaration_1]dd@1
    --file: Hello.java--
    public class Hello {
             static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
             static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 283, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 283
------------------------------------------------------------


=================Reducing node 282, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 282
------------------------------------------------------------


=================Reducing node 279, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 279
------------------------------------------------------------


=================Reducing node 278, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 278
------------------------------------------------------------


=================Reducing node 274, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 274
------------------------------------------------------------


=================Reducing node 273, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 273
------------------------------------------------------------


=================Reducing node 267, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 267
------------------------------------------------------------


=================Reducing node 260, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 260
------------------------------------------------------------


=================Reducing node 258, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 258
------------------------------------------------------------


=================Reducing node 257, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 257
------------------------------------------------------------


=================Reducing node 182, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 182
------------------------------------------------------------


=================Reducing node 178, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 178
------------------------------------------------------------


=================Reducing node 177, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 177
------------------------------------------------------------


=================Reducing node 155, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 155
------------------------------------------------------------


=================Reducing node 148, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 148
------------------------------------------------------------


=================Reducing node 145, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 145
------------------------------------------------------------


=================Reducing node 141, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 141
------------------------------------------------------------


=================Reducing node 140, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 140
------------------------------------------------------------


=================Reducing node 120, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 120
------------------------------------------------------------


=================Reducing node 113, size=36=================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 113
------------------------------------------------------------


=================Reducing node 69, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 69
------------------------------------------------------------


=================Reducing node 68, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 68
------------------------------------------------------------


=================Reducing node 65, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 43, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__explicitConstructorInvocation_2]dd@1
    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println( );
      }
    }
    --file: <formatted tokenized program in its original format>--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println( );
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


=================Reducing node 63, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 63
------------------------------------------------------------


=================Reducing node 42, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 42
------------------------------------------------------------


=================Reducing node 41, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 41
------------------------------------------------------------


=================Reducing node 39, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 39
------------------------------------------------------------


=================Reducing node 36, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 36
------------------------------------------------------------


=================Reducing node 33, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 33
------------------------------------------------------------


=================Reducing node 21, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 19, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 12, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 10, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


==================Reducing node 8, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


==================Reducing node 7, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 6, size=36==================

The current best program is the following

    --file: Hello.java--
    public class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star:kleene_star__normalClassDeclaration_1]dd@1
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

16 entries are removed: 17 --> 1.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 18
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 6 from 36 to 35
------------------------------------------------------------


=Fixpoint iteration 2. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
compilationUnit {id=287,slot_type=compilationUnit}
|___(*) {id=288,slot_type=kleene_star__compilationUnit_3}
    |___normalClassDeclaration {id=291,slot_type=[typeDeclaration,classDeclaration,normalClassDeclaration]}
        |___Token:class {id=292,slot_type=CLASS}
        |___Token:Hello {id=293,slot_type=Identifier}
        |___classBody {id=294,slot_type=classBody}
            |___Token:{ {id=295,slot_type=LBRACE}
            |___(*) {id=296,slot_type=kleene_star__classBody_1}
            |   |___methodDeclaration {id=299,slot_type=[classBodyDeclaration,methodDeclaration]}
            |       |___(*) {id=300,slot_type=kleene_star__methodDeclaration_1}
            |       |   |___Token:public {id=452,slot_type=[methodModifier,PUBLIC]}
            |       |   |___Token:static {id=451,slot_type=[methodModifier,STATIC]}
            |       |___methodHeader {id=301,slot_type=methodHeader}
            |       |   |___Token:void {id=448,slot_type=[result,VOID]}
            |       |   |___methodDeclarator {id=425,slot_type=methodDeclarator}
            |       |       |___Token:main {id=426,slot_type=Identifier}
            |       |       |___Token:( {id=427,slot_type=LPAREN}
            |       |       |___(?) {id=428,slot_type=optional__methodDeclarator_1}
            |       |       |   |___formalParameter {id=433,slot_type=[formalParameterList,aux_rule__formalParameterList_3,lastFormalParameter,formalParameter]}
            |       |       |       |___unannArrayType {id=437,slot_type=[unannType,unannArrayType]}
            |       |       |       |   |___Token:String {id=447,slot_type=[altnt_block__unannArrayType_1,unannClassOrInterfaceType,altnt_block__unannClassOrInterfaceType_3,unannClassType_lfno_unannClassOrInterfaceType,Identifier]}
            |       |       |       |   |___(+) {id=440,slot_type=[dims,kleene_plus__dims_5]}
            |       |       |       |       |___aux_rule__dims_3 {id=441,slot_type=aux_rule__dims_3}
            |       |       |       |           |___Token:[ {id=442,slot_type=LBRACK}
            |       |       |       |           |___Token:] {id=443,slot_type=RBRACK}
            |       |       |       |___Token:args {id=436,slot_type=[variableDeclaratorId,Identifier]}
            |       |       |___Token:) {id=429,slot_type=RPAREN}
            |       |___block {id=303,slot_type=[methodBody,block]}
            |           |___Token:{ {id=304,slot_type=LBRACE}
            |           |___(?) {id=305,slot_type=optional__block_1}
            |           |   |___(+) {id=307,slot_type=blockStatements}
            |           |       |___localVariableDeclarationStatement {id=387,slot_type=[blockStatement,localVariableDeclarationStatement]}
            |           |       |   |___localVariableDeclaration {id=388,slot_type=localVariableDeclaration}
            |           |       |   |   |___Token:String {id=423,slot_type=[unannType,unannClassOrInterfaceType,altnt_block__unannClassOrInterfaceType_3,unannClassType_lfno_unannClassOrInterfaceType,Identifier]}
            |           |       |   |   |___variableDeclarator {id=392,slot_type=[variableDeclaratorList,variableDeclarator]}
            |           |       |   |       |___Token:c {id=419,slot_type=[variableDeclaratorId,Identifier]}
            |           |       |   |       |___(?) {id=394,slot_type=optional__variableDeclarator_2}
            |           |       |   |           |___aux_rule__variableDeclarator_1 {id=395,slot_type=aux_rule__variableDeclarator_1}
            |           |       |   |               |___Token:= {id=396,slot_type=ASSIGN}
            |           |       |   |               |___Token:"world" {id=418,slot_type=[variableInitializer,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,primary,altnt_block__primary_2,literal,StringLiteral]}
            |           |       |   |___Token:; {id=389,slot_type=SEMI}
            |           |       |___localVariableDeclarationStatement {id=352,slot_type=[blockStatement,localVariableDeclarationStatement]}
            |           |       |   |___localVariableDeclaration {id=353,slot_type=localVariableDeclaration}
            |           |       |   |   |___Token:String {id=386,slot_type=[unannType,unannClassOrInterfaceType,altnt_block__unannClassOrInterfaceType_3,unannClassType_lfno_unannClassOrInterfaceType,Identifier]}
            |           |       |   |   |___variableDeclarator {id=357,slot_type=[variableDeclaratorList,variableDeclarator]}
            |           |       |   |       |___Token:d {id=382,slot_type=[variableDeclaratorId,Identifier]}
            |           |       |   |       |___(?) {id=359,slot_type=optional__variableDeclarator_2}
            |           |       |   |           |___aux_rule__variableDeclarator_1 {id=360,slot_type=aux_rule__variableDeclarator_1}
            |           |       |   |               |___Token:= {id=361,slot_type=ASSIGN}
            |           |       |   |               |___Token:c {id=381,slot_type=[variableInitializer,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,typeName,Identifier]}
            |           |       |   |___Token:; {id=354,slot_type=SEMI}
            |           |       |___expressionStatement {id=313,slot_type=[blockStatement,statement,statementWithoutTrailingSubstatement,expressionStatement]}
            |           |           |___methodInvocation {id=316,slot_type=[statementExpression,methodInvocation]}
            |           |           |   |___aux_rule__methodInvocation_18 {id=319,slot_type=[altnt_block__methodInvocation_12,aux_rule__methodInvocation_18]}
            |           |           |   |   |___typeName {id=320,slot_type=typeName}
            |           |           |   |   |   |___(?) {id=346,slot_type=optional__typeName_2}
            |           |           |   |   |   |   |___aux_rule__typeName_1 {id=348,slot_type=aux_rule__typeName_1}
            |           |           |   |   |   |       |___Token:System {id=351,slot_type=[packageName,Identifier]}
            |           |           |   |   |   |       |___Token:. {id=350,slot_type=DOT}
            |           |           |   |   |   |___Token:out {id=347,slot_type=Identifier}
            |           |           |   |   |___Token:. {id=321,slot_type=DOT}
            |           |           |   |   |___altnt_block__methodInvocation_13 {id=322,slot_type=altnt_block__methodInvocation_13}
            |           |           |   |       |___Token:println {id=323,slot_type=Identifier}
            |           |           |   |       |___Token:( {id=324,slot_type=LPAREN}
            |           |           |   |       |___(?) {id=325,slot_type=optional__explicitConstructorInvocation_2}
            |           |           |   |           |___Token:d {id=345,slot_type=[argumentList,expression,conditionalExpression,conditionalOrExpression,conditionalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,unaryExpression,aux_rule__unaryExpression_3,unaryExpressionNotPlusMinus,postfixExpression,altnt_block__postfixExpression_3,typeName,Identifier]}
            |           |           |   |___Token:) {id=318,slot_type=RPAREN}
            |           |           |___Token:; {id=315,slot_type=SEMI}
            |           |___Token:} {id=306,slot_type=RBRACE}
            |___Token:} {id=297,slot_type=RBRACE}
------------------------------------------------------------


=================Reducing node 288, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
    --file: <formatted tokenized program in its original format>--
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 288
------------------------------------------------------------


=================Reducing node 291, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=291}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 291
------------------------------------------------------------


=================Reducing node 294, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 294
------------------------------------------------------------


=================Reducing node 296, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__classBody_1]dd@1
    --file: Hello.java--
           class Hello {
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 296
------------------------------------------------------------


=================Reducing node 299, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=299}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
           class Hello {
                                             {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
                                             {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 299
------------------------------------------------------------


=================Reducing node 303, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 303
------------------------------------------------------------


=================Reducing node 305, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__block_1]dd@1
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 305
------------------------------------------------------------


=================Reducing node 307, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=307}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]remove whole except first
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@1
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@2
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@1
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:blockStatements]dd@1
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 307
------------------------------------------------------------


=================Reducing node 313, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=313}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 313
------------------------------------------------------------


=================Reducing node 316, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 316
------------------------------------------------------------


=================Reducing node 301, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 301
------------------------------------------------------------


=================Reducing node 425, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 425
------------------------------------------------------------


=================Reducing node 319, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 319
------------------------------------------------------------


=================Reducing node 387, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=387}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 387
------------------------------------------------------------


=================Reducing node 352, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=352}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 352
------------------------------------------------------------


=================Reducing node 428, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__methodDeclarator_1]dd@1
    --file: Hello.java--
           class Hello {
      public static void main(             ) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(             ) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 428
------------------------------------------------------------


=================Reducing node 433, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=433}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 433
------------------------------------------------------------


=================Reducing node 388, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 388
------------------------------------------------------------


=================Reducing node 353, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 353
------------------------------------------------------------


=================Reducing node 437, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
           class Hello {
      public static void main(String   args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String   args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 437
------------------------------------------------------------


=================Reducing node 392, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c          ;
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c          ;
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 392
------------------------------------------------------------


=================Reducing node 357, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d    ;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d    ;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String     c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String     c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 357
------------------------------------------------------------


=================Reducing node 322, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 322
------------------------------------------------------------


=================Reducing node 320, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
               out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
               out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System    .println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System    .println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 320
------------------------------------------------------------


=================Reducing node 440, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 440
------------------------------------------------------------


=================Reducing node 441, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 441
------------------------------------------------------------


=================Reducing node 394, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c          ;
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c          ;
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 394
------------------------------------------------------------


=================Reducing node 395, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=395}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 395
------------------------------------------------------------


=================Reducing node 359, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d    ;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d    ;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 359
------------------------------------------------------------


=================Reducing node 360, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=360}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 360
------------------------------------------------------------


=================Reducing node 346, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
               out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
               out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 346
------------------------------------------------------------


=================Reducing node 348, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=348}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 348
------------------------------------------------------------


=================Reducing node 300, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__methodDeclaration_1]dd@2
    --file: Hello.java--
           class Hello {
                    void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
                    void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__methodDeclaration_1]dd@1
    --file: Hello.java--
           class Hello {
      public        void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public        void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:kleene_star__methodDeclaration_1]dd@1
    --file: Hello.java--
           class Hello {
             static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
             static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 300
------------------------------------------------------------


=================Reducing node 452, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 452
------------------------------------------------------------


=================Reducing node 451, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 451
------------------------------------------------------------


=================Reducing node 448, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 448
------------------------------------------------------------


=================Reducing node 447, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 447
------------------------------------------------------------


=================Reducing node 443, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 443
------------------------------------------------------------


=================Reducing node 442, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 442
------------------------------------------------------------


=================Reducing node 436, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 436
------------------------------------------------------------


=================Reducing node 429, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 429
------------------------------------------------------------


=================Reducing node 427, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 427
------------------------------------------------------------


=================Reducing node 426, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 426
------------------------------------------------------------


=================Reducing node 423, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 423
------------------------------------------------------------


=================Reducing node 419, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 419
------------------------------------------------------------


=================Reducing node 418, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 418
------------------------------------------------------------


=================Reducing node 396, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 396
------------------------------------------------------------


=================Reducing node 389, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 389
------------------------------------------------------------


=================Reducing node 386, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 386
------------------------------------------------------------


=================Reducing node 382, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 382
------------------------------------------------------------


=================Reducing node 381, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 381
------------------------------------------------------------


=================Reducing node 361, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 361
------------------------------------------------------------


=================Reducing node 354, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 354
------------------------------------------------------------


=================Reducing node 351, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 351
------------------------------------------------------------


=================Reducing node 350, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 350
------------------------------------------------------------


=================Reducing node 347, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 347
------------------------------------------------------------


=================Reducing node 325, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__explicitConstructorInvocation_2]dd@1
    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println( );
      }
    }
    --file: <formatted tokenized program in its original format>--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println( );
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 325
------------------------------------------------------------


=================Reducing node 345, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 345
------------------------------------------------------------


=================Reducing node 324, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 324
------------------------------------------------------------


=================Reducing node 323, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 323
------------------------------------------------------------


=================Reducing node 321, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 321
------------------------------------------------------------


=================Reducing node 318, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 318
------------------------------------------------------------


=================Reducing node 315, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 315
------------------------------------------------------------


=================Reducing node 306, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 306
------------------------------------------------------------


=================Reducing node 304, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 304
------------------------------------------------------------


=================Reducing node 297, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 297
------------------------------------------------------------


=================Reducing node 295, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 295
------------------------------------------------------------


=================Reducing node 293, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 293
------------------------------------------------------------


=================Reducing node 292, size=35=================

The current best program is the following

    --file: Hello.java--
           class Hello {
      public static void main(String[] args) {
        String c = "world";
        String d = c;
        System.out.println(d);
      }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 292
------------------------------------------------------------


#test success = 3
#test failure = 42
#test result cache hits = 9
#test execution cancelled = 0
#node edit action set cache hits = 17
#external test execution cache hits = 0
